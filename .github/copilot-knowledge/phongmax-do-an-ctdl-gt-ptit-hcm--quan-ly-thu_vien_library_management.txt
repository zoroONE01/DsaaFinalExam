Directory structure:
└── phongmax-do-an-ctdl-gt-ptit-hcm--quan-ly-thu_vien_library_management/
    ├── README.md
    ├── 1.PNG
    ├── 10.PNG
    ├── 11.PNG
    ├── 11PNG.PNG
    ├── 12.PNG
    ├── 2.PNG
    ├── 3.PNG
    ├── 4.PNG
    ├── 5.PNG
    ├── 6.PNG
    ├── 7.PNG
    ├── 8.PNG
    ├── 9.PNG
    ├── File exe/
    │   ├── DauSach.txt
    │   ├── DocGia.txt
    │   ├── introduce.txt
    │   └── QuanLyThuVien.txt
    └── QUAN_LY_THU_VIEN/
        ├── N16DCCN116_NTPHONG.sln
        ├── Debug/
        │   ├── DauSach.txt
        │   ├── DocGia.txt
        │   ├── introduce.txt
        │   ├── N16DCCN116_NTPHONG.ilk
        │   └── QuanLyThuVien.txt
        ├── N16DCCN116_NTPHONG/
        │   ├── Check_Nhap.cpp
        │   ├── Check_Nhap.h
        │   ├── DauSach.cpp
        │   ├── DauSach.h
        │   ├── DauSach.txt
        │   ├── DocGia.txt
        │   ├── DSDocGia.cpp
        │   ├── DSDocGia.h
        │   ├── GlobalVariable.cpp
        │   ├── GlobalVariable.h
        │   ├── introduce.txt
        │   ├── Marcro.h
        │   ├── Muon_Tra.cpp
        │   ├── Muon_Tra.h
        │   ├── mylib.cpp
        │   ├── mylib.h
        │   ├── N16DCCN116_NTPHONG.cpp
        │   ├── N16DCCN116_NTPHONG.vcxproj
        │   ├── N16DCCN116_NTPHONG.vcxproj.filters
        │   ├── Ngay_Thang.cpp
        │   ├── Ngay_Thang.h
        │   ├── QuanLyThuVien.txt
        │   ├── stdafx.cpp
        │   ├── stdafx.h
        │   ├── targetver.h
        │   ├── Ve_Hinh.cpp
        │   ├── Ve_Hinh.h
        │   ├── Xu_Ly.cpp
        │   ├── Xu_Ly.h
        │   ├── XuLyTam.cpp
        │   ├── XuLyTam.h
        │   ├── Debug/
        │   │   ├── n16dccn116_ntphong.obj.enc
        │   │   ├── N16DCCN116_NTPHONG.pch
        │   │   ├── vc141.idb
        │   │   └── N16DCCN1.ED6E284B.tlog/
        │   │       ├── CL.command.1.tlog
        │   │       ├── CL.read.1.tlog
        │   │       ├── CL.write.1.tlog
        │   │       ├── link.command.1.tlog
        │   │       ├── link.read.1.tlog
        │   │       ├── link.write.1.tlog
        │   │       ├── N16DCCN116_NTPHONG.lastbuildstate
        │   │       └── unsuccessfulbuild
        │   └── x64/
        │       ├── Debug/
        │       │   ├── check_nhap.obj.enc
        │       │   ├── dausach.obj.enc
        │       │   ├── N16DCCN116_NTPHONG.pch
        │       │   ├── vc141.idb
        │       │   ├── ve_hinh.obj.enc
        │       │   ├── xu_ly.obj.enc
        │       │   └── N16DCCN1.ED6E284B.tlog/
        │       │       ├── CL.command.1.tlog
        │       │       ├── CL.read.1.tlog
        │       │       ├── CL.write.1.tlog
        │       │       ├── link.command.1.tlog
        │       │       ├── link.read.1.tlog
        │       │       ├── link.write.1.tlog
        │       │       └── N16DCCN116_NTPHONG.lastbuildstate
        │       └── Release/
        │           ├── N16DCCN116_NTPHONG.pch
        │           └── N16DCCN1.ED6E284B.tlog/
        │               ├── CL.command.1.tlog
        │               ├── CL.read.1.tlog
        │               ├── CL.write.1.tlog
        │               ├── link.command.1.tlog
        │               ├── link.read.1.tlog
        │               ├── link.write.1.tlog
        │               ├── N16DCCN116_NTPHONG.lastbuildstate
        │               └── N16DCCN116_NTPHONG.write.1u.tlog
        ├── x64/
        │   ├── Debug/
        │   │   └── N16DCCN116_NTPHONG.ilk
        │   └── Release/
        │       ├── N16DCCN116_NTPHONG.iobj
        │       └── N16DCCN116_NTPHONG.ipdb
        └── .vs/
            ├── ProjectSettings.json
            ├── slnx.sqlite
            ├── VSWorkspaceState.json
            └── N16DCCN116_NTPHONG/
                └── v15/
                    ├── Browse.VC.db
                    └── ipch/
                        ├── 3bdb8c74b80a3e5a.ipch
                        └── AutoPCH/
                            ├── 1b1abdd210201cd5/
                            │   └── XU_LY.ipch
                            ├── 1b5156516b038f30/
                            │   └── NGAY_THANG.ipch
                            ├── 2609ac605eeea668/
                            ├── 35129ac413bca9a/
                            ├── 401362fa3ed3a04c/
                            ├── 48d9a346d5640761/
                            ├── 63c7ee75aab478b7/
                            │   └── GLOBALVARIABLE.ipch
                            ├── 64bac1aed80f1714/
                            ├── 6dac9f56fd5b2dfa/
                            ├── 709c9090d51acb55/
                            ├── 7c6ceeae07f66201/
                            ├── 7d2fdf211d05ab24/
                            ├── 895d2132ae6902cc/
                            ├── 89c4682e30278e5f/
                            ├── 8a726360ca7d8ff3/
                            ├── 94c2425de42a8182/
                            ├── 9bea2b4c7875db09/
                            ├── a0df4211add30489/
                            │   └── VE_HINH.ipch
                            ├── a13fa1cddfc9ad1b/
                            ├── a634b8931526d69b/
                            │   └── DAUSACH.ipch
                            ├── bb8af995998ddc53/
                            ├── c507e6869e6bc662/
                            ├── c5941766e73912bd/
                            ├── e9f7d939378866cc/
                            │   └── CHECK_NHAP.ipch
                            ├── ea56184dbbf3f01a/
                            │   └── DSDOCGIA.ipch
                            └── f434e2a9c92e77eb/

================================================
FILE: README.md
================================================
# Demo
<a href="https://youtu.be/XCCW4tHydEo">Xem video tại đây!!!</a>

# QLTV-LIbrary-Management
                 
                                                    Đề tài:
                                                    
Đồ án của thầy bao gồm ba dạng cơ bảng trong 7 đề tài bên dưới, đó là Bài toán từ điển(B.1) , Bài toán xử lý đồ thị(B.7) và Bài toán quản lý(B.2 -> B.6).
 
1. Tra cứu từ điển: 
Tổ chức từ điển theo cấu trúc danh sách liên kết kép . Mỗi từ gồm có các
thông tin: Từ, loại từ, các nghĩa việt (theo cấu trúc danh sách tuyến tính, tối đa có 5 nghĩa
trên 1 từ) , các ví dụ (theo cấu trúc danh sách liên kết) .
Chương trình có các chức năng: nhập từ mới, hiệu chỉnh từ, xóa từ, tra từ theo 2 cách: nhập
đến đâu thì thanh sáng sẽ nhảy ngay đến từ đầu tiên có các ký tự đầu trùng với các ký tự vừa
nhập, hoặc dùng thanh sáng di chuyển đến từ cần tra, ghi từ vào file, load từ vào danh sách
liên kết kép…
Lưu ý: - Danh sách các từ được tổ chức theo cấu trúc mảng băm
- Các thuật toán xử lý trên từ điển đều thực hiện trong bộ nhớ trong . File chỉ là
nơi lưu các từ khi có sự thay đổi trên từ điển trong bộ nhớ trong.

2. Quản lý điểm sinh viên :
Ta tổ chức các danh sách sau:
- Danh sách môn học: cây nhị phân tìm kiếm (MAMH (C10) , TENMH, STCLT (số tín
chỉ lý thuyết), STCTH (số tín chỉ thực hành))
- Danh sách Lop : danh sách tuyến tính là 1 mảng con trỏ(MALOP (C15), TENLOP,
Năm nhập học, con trỏ dssv): con trỏ dssv sẻ trỏ đến danh sách sinh viên thuộc lớp đó.
- Danh sách sinh viên : danh sách liên kết đơn (MASV, HO, TEN, PHAI, SODT, con
trỏ): con trỏ sẻ trỏ đến danh sách điểm các môn của sinh viên đó
- Danh sách Điểm (danh sách liên kết đơn): ( MAMH, LAN, DIEM)
Chương trình có các chức năng sau :
a. NhapLop : cho phép cập nhật (thêm / xóa / hiệu chỉnh ) thông tin của lớp
b. In danh saùch Lôùp cuûa tröôøng theo 1 nieân khoùa naøo ñoù
c. NhapSV : Cập nhập sinh viên của 1 lớp: nhập vào mã lớp trước, sau đó nhập các sinh
viên vào lớp đó.
Lưu ý : Khi nhập liệu phải đủ 3 chức năng Thêm / Xóa / Hiệu chỉnh
Quá trình nhập SV mới sẽ dừng khi ta nhập vào mã sv là chuỗi rỗng.
d. In DSSV của 1 lớp (dựa vào mã lớp) theo thứ tự alphabet tăng dần của tên+họ ,
e. Nhập môn học: cho phép cập nhật (thêm / xóa / hiệu chỉnh ) thông tin của môn học
f. In DS môn học : tăng dần theo tên môn học.
g. Nhập điểm: User nhập vào mã lớp, mã môn học, lần thi. Căn cứ vào 3 giá trị này,
chương trình sẽ tự động lọc ra danh sách sv sẽ thi, và in ra màn hình danh sách theo dạng
sau :
                              STT MASV     HO      TEN DIEM
                              99  XXXX XXXXXXXXXXX XXXXX 5
                              99  XXXX XXXXXXXXXXX XXXXX 6
Bốn cột đầu đã có sẵn dữ liệu, lúc này user chỉ việc nhập điểm hoặc hiệu chỉnh điểm trực
tiếp vào khung.
h. In bảng điểm môn học của 1 lớp theo lần thi: User nhập vào mã lớp, mã môn học, lần
thi, chương trình sẽ in ra bảng điểm đã thi . Kết quả trên màn hình:
                                    BẢNG ĐIỂM MÔN HỌC
                              Lớp : <tenlop> Lần thi : 99
                              Môn học: <tenmon>
                              STT MASV HO          TEN  DIEM
                              99 XXXX XXXXXXXXXXX XXXXX 99
                              99 XXXX XXXXXXXXXXX XXXXX 99i.
In điểm trung bình kết thúc khóa học của 1 lớp theo số tín chỉ. Kết xuất:

                              BẢNG THỐNG KÊ ĐIỂM TRUNG BÌNH KHÓA HỌC
                                Lớp : <tenlop> Năm nhập học: 9999
                              STT MASV  HO TEN Điểm TB
                              99 XXXX XXXXXXXXXXX XXXXX 99.9
                              99 XXXX XXXXXXXXXXX XXXXX 99.9
j. Bảng điểm tổng kết các môn của các sinh viên thuộc 1 lớp(trong bảng điểm tổng kết 
chỉ hiển thị điểm thi lớn nhât từng môn của sinh vien) Kết xuất:
                                    BẢNG ĐIỂM TỔNG KẾT
                            Lớp : <tenlop> Năm nhập học: 9999
                    STT MãSV HọTên   Mã MH1 Mã MH2 Mã MH3 Mã MH4 Mã MH5 …….. Mã MHn
                      1 XXXX XXXXXXX   99     99     99     99     99    99     99
                      2 XXXX XXXXXXX   99     99     99     99     99    99      99
Lưu ý: Chương trình cho phép lưu các danh sách vào file; Kiểm tra các điều kiện khi
nhập làm dữ liệu bị sai.


3. Quản lý nhập xuất vật tư: Ta tổ chức các danh sách sau:
- Danh sách Vattu : cây nhị phân tìm kiếm ( MAVT (C10), TENVT, DVT, Số lượng tồn)
- Danh sách Nhanvien : danh sách tuyến tính là 1 mảng con trỏ (MANV, HO, TEN,
PHAI, con trỏ dshd): con trỏ dshd sẽ trỏ đến danh sách các hóa đơn mà nhân viên đó đã
lập. Danh sách nhân viên có tối đa 500 nhân viên
- Danh sách HOADON : danh sách liên kết đơn(SoHD (C20), Ngày lập hóa đơn, Loai,
con trỏ cthd). Lọai chỉ nhận ‘N’ (phiếu nhập) hoặc ‘X’ (phiếu xuất); con trỏ cthd sẻ trỏ
đến danh sách chi tiết các vật tư của hóa đơn đó.
- Danh sách CT_HOADON : danh sách liên kết đơn ( MAVT, Soluong, Dongia, %VAT).
Chương trình có các chức năng sau:
a/ Nhập vật tư : cho phép cập nhật (thêm / xóa / hiệu chỉnh ) thông tin của vật tư; riêng số
lượng tồn chỉ cho phép nhập khi đó là vật tư mới.
b/ In danh sách vật tư tồn kho : liệt kê ds vật tư ra màn hình theo thứ tự tên vật tư tăng dần.
Kết xuất : Mã VT Tên vật tư Đơn vị tính Số lượng tồn
c/ Nhập nhân viên: Cập nhập các nhân viên dựa vào mã nhân viên, họ, tên không được rỗng.
d/ In danh sách nhân viên theo thứ tự tên nhân viên tăng dần, nếu trùng tên thì tăng dần theo
họ ra màn hình, 1 nhân viên / dòng
e/ Lập hóa đơn nhập/Lập hóa đơn xuất: nhập vào số hóa đơn, ngày lập, loại (chỉ nhận ký tự N
hoặc X). Sau đó, tiếp tục cho phép nhập các vật tư của hóa đơn đó; Căn cứ vào loại hóa đơn,
chương trình sẽ tự động cập nhật số lượng tồn.
Lưu ý: - Nếu số lượng xuất không đủ hàng thì báo lỗi và in ra số lượng tồn hiện có trong
kho;
- Chỉ được phép xóa vật tư đang lập của hóa đơn hiện tại. Khi hóa đơn đã ghi
thì không được xóa các vật tư trog hóa đơn
f/ In hóa đơn : In hóa đơn dựa vào số hóa đơn do ta nhập vào
g/ Thống kê các hóa đơn trong 1 khỏang thời gian: nhập vào 2 thời điểm từ ngày , đến ngày,
chương trình sẽ in ra các hóa đơn được lập trong khoảng thời gian như trên. Kết xuất:
                    BẢNG LIỆT KÊ CÁC HÓA ĐƠN TRONG KHOẢNG THỜI GIAN
                      Từ ngày : ##/##/#### Đến ngày : ##/##/####
Số HĐ Ngày lập Loại HĐ Họ tên NV lập Trị giá hóa đơn
h/ In 10 vật tư có doanh thu cao nhất trong 1 khoảng thời gian.Lưu ý: Chương trình cho phép lưu các danh sách vào file; Kiểm tra các điều kiện khi nhập
làm dữ liệu bị sai.


4. Quản lý các chuyến bay nội địa thuộc 1 hăng hàng không: Ta toå chöùc caùc danh saùch
sau:
- Máy bay : danh sách tuyến tính (Số hiệu MB (C15), loại máy bay (C40), số chỗ) ; Mỗi máy
bay có 1 số hiệu duy nhất; số chỗ >=20
- Chuyến bay : danh sách liên kết đơn ( Mã CB (C15), Ngày giờ khởi hành, sân bay đến ,
trạng thái, Số hiệu MB, danh sách vé,). Mỗi chuyến bay có 1 mã duy nhất; trạng thái chuyến
bay bao gồm: 0: hủy chuyến, 1: còn vé, 2: hết vé,3: hoàn tất ; danh sách vé cho biết thông tin
vé trên chuyến bay, và số CMND của hành khách đã đặt vé đó. Mỗi vé có số vé là số thứ tự
trên chuyến từ số 1 đến số chỗ .
- Hành khách: cây nhị phân tìm kiếm (Số CMND , Ho, Ten, Phai)
Chöông trình coù caùc chöùc naêng sau:
a/ Caäp nhaäp danh saùch caùc maùy bay (theâm / xoùa / hieäu chænh)
b/ Caäp nhaät chuyeán bay: cho pheùp laäp chuyeán bay môùi, hieäu chænh ngaøy giôø khôûi
haønh cuûa chuyeán bay , huûy chuyeán.
c/Ñaët veù: cho pheùp ñaët veù treân 1 chuyeán bay; neáu thoâng tin haønh khaùch chöa coù thì
töï ñoäng caäp nhaät vaøo danh saùch haønh khaùch, neáu coù roài thì in ra maøn hình ñeå kieåm
tra. Moãi veù ñeàu phaûi ghi nhaän soá CMND cuûa haønh khaùch; neáu haønh khaùch chöa coù soá
CMND thì yeâu caàu nhaäp thoâng tin haønh khaùch tröôùc. Treân 1 chuyeán bay, moãi haønh
khaùch chæ ñöôïc mua 1 veù.
d/ In danh saùch caùc haønh khaùch thuoäc 1 chuyeán bay döïa vaøo maõ chuyeán bay. Keát
xuaát:
DANH SAÙCH HAØNH KHAÙCH THUOÄC CHUYEÁN BAY ######
Ngaøy giôø khôûi haønh: ##/##/####. Nôi ñeán : xxxxxxxxxxx
STT SOÁ VEÙ SOÁ CMND HOÏ TEÂN PHAÙI
e/ In danh saùch caùc chuyeán bay khôûi haønh trong ngaøy dd/mm/yyyy ñeán nôi XXXX maø
coøn veù ( cho bieát cuï theå soá löôïng caùc veù coøn troáng)
f/ In danh saùch caùc veù coøn troáng cuûa 1 chuyeán bay coù maõ chuyeán bay laø X.
g/ Thoáng keâ soá löôït thöïc hieän chuyeán bay cuûa töøng maùy bay theo thöù töï soá löôït thöïc
hieän giaûm daàn. Keát xuaát:
Soá hieäu maùy bay Soá löôït thöïc hieän chuyeán bay
Lưu ý: Chương trình cho phép lưu các danh sách vào file; Kiểm tra các điều kiện khi nhập
liệu làm dữ liệu bị sai.


5. Thư Viên: Ta tổ chức các danh sách sau:
- Đầu sách : danh sách tuyến tính là 1 mảng con trỏ (ISBN , Tên sách, Số trang, Tác giả, thể loại, con trỏ): con trỏ sẽ trỏ đến các sách thuộc đầu sách tương ứng
- Danh Mục Sách : Danh sách  liên kết đơn( Mã sách, trangj thái, vị trí ). Mỗi cuốn sách 
chỉ có 1 mã duy nhất; trạng thái của sách bao gồm: 0: cho mươn được, 1: đã có độc giả mượn, 2: sách đã thanh lý
- Danh Sách độc giả: cây nhị phân tìm kiếm (MADG (soá nguyeân ngẫu nhiên tự động),
Ho, Ten, Phai, trạng thái thẻ, con trỏ): con trỏ sẽ trỏ đến danh sách các cuốn sách đã và đang mượn
Chương trình có các chức năng sau: 
a. Nhập độc giả: thêm / xóa / hiệu chỉnh thông tin độc giả. Mã độc giả được chương trình tự
động lấy ngẫu nhiên và không trùng với các mã độc giả cũ; Phái chỉ nhận ‘Nam’ hoặc ‘Nữ’;
trạng thái thẻ = 0 khi thẻ bị khóa, trạng thái thẻ = 1 khi thẻ đang hoạt động (được quyền
mượn sách).
b. In danh sách độc giả : in ra màn hình theo thứ tự tên+họ tăng dần hoặc theo thứ tự mã độc
giả tăng dần theo yêu của thủ thư.
c. Nhập đầu sách và đánh mã sách tự động
d. In danh sách các đầu sách trong thư viện theo thứ tự tên sách tăng dần.
e. Tìm thông tin sách dựa vào tên sách : in ra các thông tin mã ISBN, tên sách, tác giả, năm
xuất bản, thể loại, các mã sách còn có trong thư viện.
f. Mượn sách : nhập vào mã độc giả, chương trình sẽ liệt kê các sách mà độc giả đang mượn.
Mỗi độc giả chỉ được mượn tối đa 3 cuốn, không cho mượn khi giữ 1 sách quá hạn (15 ngày)
g. Trả sách
h. Liệt kê danh sách các sách mà 1 độc giả đang mượn
i. In danh sách độc giả mượn sách quá hạn theo thứ tự thời gian quá hạn giảm dần
j. In 10 sách có số lượt mượn nhiều nhất.

6. Thi trắc nghiệm:
- Danh sách môn học: danh sách liên kết(MAMH, TENMH).
- Danh sách Lớp:  danh sách tuyến tính(MALOP, TENLOP, con trỏ); con trỏ sẻ trỏ đến danh sách
sinh viên thuộc lớp đó.
- Danh sách sinh viên: danh sách liên kết đơn(MASV, HO, TEN, PHAI, password, con trỏ): con trỏ
sẽ trỏ đến điểm cac môn đã thi trắc nghiệm.
- Danh sách điểm thi( Danh sách liên kết đơn ) (Mamh, Diem)
- Dạnh sách Câu hỏi thi(cây nhị phân tìm kiếm cân bằng với key = Id) (Id, mã MH, Nội dung)
, A, B, C, D, Đáp án); trong đó A, B, C, D là 4 lựa chọn tương ứng với nội dung câu hỏi.
Chương trình có các chức năng sau: Đăng nhậ dựa vào mã sinh viên, password. Nếu tài khoản đăng nhập
là GV , pass là GV thì sẽ có toàn quyền , Nhập lớp , In ds lớp. Nhập sinh viên của lớp, Nhập môn học
. Nhập câu hỏi thi(Id là số ngẫu nhiên do chuong trình tụ tạo), Thi trắc nghiệm(trước khi thi hỏi
) người thi môn thi, số câu hỏi thi, số phút thi - sau đó lấy ngẫu ngiên các câu hỏi trong dan sách
câu hỏi ti của môn; In chi tiết cac câu hỏi đã thi 1 môn học của 1 sinh viên , In bảng điểm thi trắc
nghiệm môn học của 1 lớp(nếu có sinh viên chưa ti thì ghi " Chưa thi")
Lưu ý: Chương trình cho phép lưu các danh sách vào file: kiểm tra các điều kiện làm dữ liệu bị sai.
Sinh viên có thể tự thiết kế thêm danh sách để đáp ứng yêu cầu của đề tài .

7. Đồ thị: Viết chương trình cho phép:
- Nhập đồ thị có hướng có trọng số qua giao diện, có thể thêm, xóa sửa lại đỉnh, cung, trọng số
(trên màn hình hiển thị ma trận kề tương ứng). Lưu đồ thi vào file sao cho ta có thể vẽ lại đồ thị 
về sau này.
- Demo giải thuật DFS, BFS.
- Tính số thành phần liên thông của đồ thị ? Và liệt kê các đỉnh trong từng thành phần liên thông
- Tìm đường đi ngắn nhât từ đỉnh X đến đỉnh Y,, có demo trên hình và in ra đường đi cụ thể
- Tìm tất cả các đỉnh trụ , đỉnh thắt và cạnh cầu của đồ thị.
- Tìm các chun trình Hamilton và chu trình Euler của đồ thị (nếu có).
- Demo thuật toán Topo Sort
- Demo bài toán Tô màu đồ thị



================================================
FILE: 1.PNG
================================================
[Non-text file]


================================================
FILE: 10.PNG
================================================
[Non-text file]


================================================
FILE: 11.PNG
================================================
[Non-text file]


================================================
FILE: 11PNG.PNG
================================================
[Non-text file]


================================================
FILE: 12.PNG
================================================
[Non-text file]


================================================
FILE: 2.PNG
================================================
[Non-text file]


================================================
FILE: 3.PNG
================================================
[Non-text file]


================================================
FILE: 4.PNG
================================================
[Non-text file]


================================================
FILE: 5.PNG
================================================
[Non-text file]


================================================
FILE: 6.PNG
================================================
[Non-text file]


================================================
FILE: 7.PNG
================================================
[Non-text file]


================================================
FILE: 8.PNG
================================================
[Non-text file]


================================================
FILE: 9.PNG
================================================
[Non-text file]


================================================
FILE: File exe/DauSach.txt
================================================
38
BICH HUYET KIEM
IIII
KIM DUNG
VO HIEP
143343
1955
9
IIII1
1
HANG 2, NGAN 1
IIII2
1
HANG 2, NGAN 2
IIII3
1
HANG 2, NGAN 3
IIII4
0
HANG 2, NGAN 4
IIII5
0
HANG 2, NGAN 5
IIII6
0
HANG 2, NGAN 6
IIII7
0
HANG 2, NGAN 7
IIII8
0
HANG 2, NGAN 8
IIII9
0
HANG 2, NGAN 9
BO GIA
WSSW
MARIO PUZO
TIEU THUYET
5641
2008
6
WSSW1
0
HANG 36, NGAN 1
WSSW2
0
HANG 36, NGAN 2
WSSW3
0
HANG 36, NGAN 3
WSSW4
0
HANG 36, NGAN 4
WSSW5
0
HANG 36, NGAN 5
WSSW6
0
HANG 36, NGAN 6
CHUYEN GIA BAT MA
EEEE
CHAU TINH RI
HAI BUA
32422
1995
9
EEEE1
1
HANG 4, NGAN 1
EEEE2
1
HANG 4, NGAN 1
EEEE3
1
HANG 4, NGAN 1
EEEE4
0
HANG 4, NGAN 4
EEEE5
1
HANG 4, NGAN 5
EEEE6
0
HANG 4, NGAN 6
EEEE7
0
HANG 4, NGAN 7
EEEE8
0
HANG 4, NGAN 8
EEEE9
0
HANG 4, NGAN 9
DAC NHAN TAM
CCCC
DALE CAMEGIE
SELF HELP
300
1968
9
CCCC1
1
HANG 3, NGAN 1
CCCC2
0
HANG 3, NGAN 2
CCCC3
0
HANG 3, NGAN 3
CCCC4
0
HANG 3, NGAN 4
CCCC5
0
HANG 3, NGAN 5
CCCC6
0
HANG 3, NGAN 6
CCCC7
0
HANG 3, NGAN 7
CCCC8
0
HANG 3, NGAN 8
CCCC9
0
HANG 3, NGAN 9
DOI BONG THIEU LAM
PPPP
CHAU TINH TRI
HAI BUA
234234
2001
6
PPPP1
0
HANG 5, NGAN 1
PPPP2
0
HANG 5, NGAN 2
PPPP3
0
HANG 5, NGAN 3
PPPP4
0
HANG 5, NGAN 4
PPPP5
0
HANG 5, NGAN 5
PPPP6
0
HANG 5, NGAN 6
HOANG TU BANH TRUNG
QQQQ
CHAU TINH TRI
HAI BUA
343434
1998
6
QQQQ1
1
HANG 6, NGAN 1
QQQQ2
1
HANG 6, NGAN 2
QQQQ3
1
HANG 6, NGAN 3
QQQQ4
0
HANG 6, NGAN 4
QQQQ5
0
HANG 6, NGAN 5
QQQQ6
0
HANG 6, NGAN 6
HONG LAU MONG
JJJJ
KIM DUNG
VO HIEP
54665
1910
6
JJJJ1
1
HANG 7, NGAN 1
JJJJ2
1
HANG 7, NGAN 2
JJJJ3
1
HANG 7, NGAN 3
JJJJ4
0
HANG 7,NGAN 4
JJJJ5
0
HANG 7, NGAN 5
JJJJ6
0
HANG 7, NGAN 6
INFINITY WAR
DSFF
MARVEL COMICS
MARVEL
343
2018
9
DSFF1
0
HANG 8, NGAN 1
DSFF2
1
HANG 8, NGAN 2
DSFF3
0
HANG 8, NGAN 3
DSFF4
1
HANG 8, NGAN 4
DSFF5
0
HANG 8, NGAN 5
DSFF6
0
HANG 8, NGAN 6
DSFF7
0
HANG 8, NGAN 7
DSFF8
0
HANG 8,, NGAN 8
DSFF9
0
HANG 8, NGAN 9
KINH VAN HOA
SSSS
NGUYEN NHAT ANH
HOC DUONG
23423
2007
12
SSSS1
1
HANG 9, NGAN 1
SSSS2
0
HANG 9, NGAN 2
SSSS3
0
HANG 9, NGAN 3
SSSS4
1
HANG 9, NGAN 4
SSSS5
0
HANG 9, NGAN 5
SSSS6
0
HANG 9, NGAN 6
SSSS7
0
HANG 9, NGAN 7
SSSS8
0
HANG 9, NGAN 8
SSSS9
0
HANG 9, NGAN 9
SSSS10
0
HANG 10, NGAN 10
SSSS11
0
HANG 10, NGAN 11
SSSS12
0
HANG 10, NGAN 12
LAO HAC
ASDF
NAM CAO
VAN HOC
134
1945
6
ASDF1
0
HANG 10, NGAN 1
ASDF2
1
HANG 10, NGAN 2
ASDF3
1
HANG 10, NGAN 3
ASDF4
0
HANG 10, NGAN 4
ASDF5
0
HANG 10, NGAN 5
ASDF6
0
HANG 10, NGAN 6
LOC DINH KY
MMMM
KIM DUNG
VO HIEP
234234
1969
6
MMMM1
0
HANG 11, NGAN 1
MMMM2
1
HANG 11, NGAN 2
MMMM3
0
HANG 11, NGAN 3
MMMM4
0
HANG 11, NGAN 4
MMMM5
0
HANG 11, NGAN 5
MMMM6
0
HANG 11, NGAN 6
MY NHAN NGU
NNNN
CHAU TINH TRI
HAI BUA
242342
2015
6
NNNN1
1
HANG 12, NGAN 1
NNNN2
1
HANG 12, NGAN 2
NNNN3
1
HANG 12, NGAN 3
NNNN4
0
HANG 12, NGAN 4
NNNN5
0
HANG 12, NGAN 5
NNNN6
0
HANG 12, NGAN 6
NGUOI PHAN XU
VVVV
PHAN QUAN
HINH SU
332432
2018
6
VVVV1
0
HANG 13, NGAN 1
VVVV2
1
HANG 13, NGAN 2
VVVV3
0
HANG 13, NGAN 3
VVVV4
0
HANG 13, NGAN 4
VVVV5
0
HANG 13, NGAN 5
VVVV6
0
HANG 13, NGAN 6
NHA GIA KIM
ERER
PAULO COELHO
TIEU THUYET
545
1989
6
ERER1
1
HANG 14, NGAN 1
ERER2
1
HANG 14, NGAN 2
ERER3
0
HANG 14, NGAN 3
ERER4
0
HANG 14, NGAN 4
ERER5
0
HANG 14, NGAN 5
ERER6
0
HANG 14, NGAN 6
ONE PIECE
SFSF
ODA EIICHIRO
VH HIEN DAI
8869
1998
3
SFSF1
1
HANG 15, NGAN 1
SFSF2
1
HANG 15, NGAN 2
SFSF3
1
HANG 15, NGAN 3
PHUT 89
ADDA
LE CONG VINH
TU TRUYEN
323
2018
3
ADDA1
0
HANG 16, NGAN 1
ADDA2
1
HANG 16, NGAN 2
ADDA3
1
HANG 16, NGAN 3
SO KIEU TRUYEN
FFFF
NGO CAM NGUYEN
CO TRANG
344353
2017
3
FFFF1
1
HANG 17, NGAN 1
FFFF2
1
HANG 17, NGAN 2
FFFF3
1
HANG 17, NGAN 3
SUONG KHOI QUE NHA
WWWW
NGUYEN NHAT ANH
THO
343
2016
6
WWWW1
1
HANG 18, NGAN 1
WWWW2
1
HANG 18, NGAN 2
WWWW3
0
HANG 18, NGAN 3
WWWW4
0
HANG 18, NGAN 4
WWWW5
0
HANG 18, NGAN 5
WWWW6
0
HANG 18, NGAN 6
SU VIET 12 KHUC TRANG CA
SFSA
NGUYEN VAN A
LICH SU
234234
2017
6
SFSA1
1
HANG 19, NGAN 1
SFSA2
0
HANG 19, NGAN 2
SFSA3
1
HANG 19, NGAN 3
SFSA4
0
HANG 19, NGAN 4
SFSA5
0
HANG 19, NGAN 5
SFSA6
0
HANG 19, NGAN 6
TAM QUOC DIEN NGHIA
HHHH
LA QUAN TRUNG
TIEU THUYET
234234
1345
6
HHHH1
0
HANG 21, NGAN 1
HHHH2
0
HANG 21, NGAN 2
HHHH3
0
HANG 21, NGAN 3
HHHH4
0
HANG 21, NGAN 4
HHHH5
0
HANG 21, NGAN 5
HHHH6
0
HANG 21, NGAN 6
TAY DU KY
AAAA
NGO THUA AN
THAN THOAI
22322
1986
34
AAAA1
1
HANG 1, NGAN 1
AAAA2
1
HANG 1, NGAN 2
AAAA3
0
HANG 1, NGAN 3
AAAA4
1
HANG 1, NGAN 4
AAAA5
0
HANG 1, NGAN 5
AAAA6
0
HANG 1, NGAN 6
AAAA7
0
HANG 1, NGAN 7
AAAA8
0
HANG 1, NGAN 8
AAAA9
0
HANG 1, NGAN 9
AAAA10
0
HANG 1, NGAN 10
AAAA11
0
HANG 1, NGAN 11
AAAA12
0
HANG 1, NGAN 12
AAAA13
0
HANG 1, NGAN 13
AAAA14
0
HANG 1, NGAN 14
AAAA15
0
HANG 1, NGAN 15
AAAA16
0
HANG 1, NGAN 16
AAAA17
0
HANG 1, NGAN 17
AAAA18
0
HANG 1, NGAN 18
AAAA19
0
HANG 1, NGAN 19
AAAA20
0
HANG 1, NGAN 20
AAAA21
0
HANG 1, NGAN 21
AAAA22
0
HANG 1, NGAN 22
AAAA23
0
HANG 1, NGAN 23
AAAA24
0
HANG 1, NGAN 24
AAAA25
0
HANG 1, NGAN 25
AAAA26
0
HANG 1, NGAN 26
AAAA27
0
HANG 1, NGAN 27
AAAA28
0
HANG 1, NGAN 28
AAAA29
0
HANG 1, NGAN 29
AAAA30
0
HANG 1, NGAN 30
AAAA31
0
HANG 1, NGAN 31
AAAA32
0
HANG 1, NGAN 32
AAAA33
0
HANG 1, NGAN 33
AAAA34
0
HANG 1, NGAN 34
TE CONG
UUUU
CHAU TINH TRI
HAI BUA
34234
1993
6
UUUU1
1
HANG 22, NGAN 1
UUUU2
1
HANG 22, NGAN 2
UUUU3
1
HANG 22, NGAN 3
UUUU4
0
HANG 22, NGAN 4
UUUU5
0
HANG 22, NGAN 5
UUUU6
0
HANG 22, NGAN 6
THAN AN
RRRR
CHAU TINH TRI
HAI BUA
23423
1996
6
RRRR1
0
HANG 23, NGAN 1
RRRR2
1
HANG 23, NGAN 2
RRRR3
0
HANG 23, NGAN 3
RRRR4
0
HANG 23, NGAN 4
RRRR5
0
HANG 23, NGAN 5
RRRR6
0
HANG 23, NGAN 6
THAN DIEU DAI HIEP
GGGG
KIM DUNG
VO HIEP
343434
1986
3
GGGG1
1
HANG 23, NGAN 1
GGGG2
1
HANG 23, NGAN 2
GGGG3
1
HANG 23, NGAN 3
THE GIOI PHANG
DFFA
FRIEDMAN
CHINH TRI
820
2006
0
THE GODFATHER
WSDS
MARIO PUZO
TIEU THUYET
343434
1972
3
WSDS1
1
HANG 24, NGAN 1
WSDS2
1
HANG 24, NGAN 2
WSDS3
1
HANG 24, NGAN 3
THE WALKING DEAD
DFGA
FRANK DARABONT
KINH DI
242343
2012
6
DFGA1
0
HANG 25, NGAN 1
DFGA2
1
HANG 25, NGAN 2
DFGA3
0
HANG 25, NGAN 3
DFGA4
0
HANG 25, NGAN 4
DFGA5
0
HANG 23, NGAN 59
DFGA6
0
HANG 23, NGAN 6
THIEN LONG BAT BO
KKKK
KIM DUNG
VO HIEP
232132
1963
6
KKKK1
1
HANG 26, NGAN 1
KKKK2
1
HANG 26, NGAN 2
KKKK3
1
HANG 26, NGAN 3
KKKK4
0
HANG 26, NGAN 4
KKKK5
0
HANG 24, NGAN 5
KKKK6
0
HANG 26, NGAN 6
THUY HU
BBBB
THI NAI AM
TIEU THUYET
32423
1933
35
BBBB1
0
HANG 2, NGAN 1
BBBB2
1
HANG 2, NGAN 2
BBBB3
1
HANG 2, NGAN 3
BBBB4
0
HANG 2, NGAN 4
BBBB5
0
HANG 2, NGAN 5
BBBB6
0
HANG 2, NGAN 6
BBBB7
0
HANG 2, NGAN 7
BBBB8
0
HANG 2, NGAN 8
BBBB9
0
HANG 2, NGAN 9
BBBB10
0
HANG 2, NGAN 10
BBBB11
0
HANG 2, NGAN 11
BBBB12
0
HANG 2, NGAN 12
BBBB13
0
HANG 2, NGAN 13
BBBB14
0
HANG 2, NGAN 14
BBBB15
0
HANG 2, NGAN 15
BBBB16
0
HANG 2, NGAN 16
BBBB17
0
HANG 2, NGAN 17
BBBB18
0
HANG 2, NGAN 18
BBBB19
0
HANG 2, NGAN 19
BBBB20
0
HANG 2, NGAN 20
BBBB21
0
HANG 2, NGAN 21
BBBB22
0
HANG 2, NGAN 22
BBBB23
0
HANG 2, NGAN 23
BBBB24
0
HANG 2, NGAN 24
BBBB25
0
HANG 2, NGAN 25
BBBB26
0
HANG 2, NGAN 26
BBBB27
0
HANG 2, NGAN 27
BBBB28
0
HANG 2, NGAN 28
BBBB29
0
HANG 2, NGAN 29
BBBB30
0
HANG 2, NGAN 30
BBBB31
0
HANG 2, NGAN 31
BBBB32
0
HANG 2, NGAN 32
BBBB33
0
HANG 2, NGAN 33
BBBB34
0
HANG 2, NGAN 34
BBBB35
0
HANG 2, NGAN 35
TIEU NGAO GIAN HO
LLLL
KIM DUNG
VO HIEP
234234
1967
3
LLLL1
0
HANG 27, NGAN 1
LLLL2
0
HANG 27, NGAN 2
LLLL3
0
HANG 27, NGAN 3
TRUYEN KIEU
ZZZZ
NGUYEN DU
THO
132321
1906
3
ZZZZ1
1
HANG 28, NGAN 1
ZZZZ2
1
HANG 28, NGAN 2
ZZZZ3
1
HANG 28, NGAN 3
TUYET DINH CONG PHU
OOOO
CHAU TINH TRI
HAI BUA
23232
2004
3
OOOO1
0
HANG 29, NGAN 1
OOOO2
0
HANG 29, NGAN 2
OOOO3
0
HANG 29, NGAN 3
Y THIEN DO LONG KY
JJJJ
KIM DUNG
VO HIEP
345332
1961
3
JJJJ1
0
HANG 30, NGAN 1
JJJJ2
1
HANG 30, NGAN 2
JJJJ3
1
HANG 30, NGAN 3
LUOC SU THOI GIAN
SDFA
S HHAWKING
KHOA HOC PT
286
2008
3
SDFA1
0
HANG 31, NGAN 1
SDFA2
0
HANG 31, NGAN 2
SDFA3
0
HANG 31, NGAN 3
NHA GIA KIM
SDAA
COELHO
VAN HOC HD
2066
2016
3
SDAA1
0
HANG 32, NGAN 1
SDAA2
0
HANG 32, NGAN 2
SDAA3
0
HANG 32, NGAN 3
KHONG THEO LOI MON
KDJG
SINGER
SELFHELP
4451
2016
3
KDJG1
0
HANG 33, NGAN 1
KDJG2
1
HANG 33, NGAN 2
KDJG3
0
HANG 33, NGAN 3
CHIEC THUYEN NGOAI XA
IEWO
NGUYEN MINH CHAU
VAN HOC
66
1952
3
IEWO1
1
HANG 34, NGAN 1
IEWO2
0
HANG 34, NGAN 2
IEWO3
0
HANG 34, NGAN 3
YOUR NAME
ADAF
NGUYEN VAN K
HAI BUA
3423
2002
3
ADAF1
1
HANG 35, NGAN 1
ADAF2
1
HANG 35, NGAN 2
ADAF3
0
HANG 35, NGNAN 3



================================================
FILE: File exe/DocGia.txt
================================================
74
5000
NGUYEN TRONG
KHANH
0
0
0
4000
NGUYEN NGON
QUOC
0
1
3
ASDF2
25
6
2018
0
0
0
LAO HAC
0
HANG 10, NGAN 2
QQQQ1
25
6
2018
0
0
0
HOANG TU BANH TRUNG
0
HANG 6, NGAN 1
SFSA3
25
6
2018
0
0
0
SU VIET 12 KHUC TRANG CA
0
HANG 19, NGAN 3
34
NGUYEN VAN
THO
0
1
1
EEEE2
2
6
2018
0
0
0
CHUYEN GIA BAT MA
0
HANG 4, NGAN 1
3800
NGUYEN THI
LINH
1
1
3
ZZZZ3
25
6
2018
0
0
0
TRUYEN KIEU
0
HANG 28, NGAN 3
QQQQ3
25
6
2018
0
0
0
HOANG TU BANH TRUNG
0
HANG 6, NGAN 3
RRRR2
25
6
2018
0
0
0
THAN AN
0
HANG 23, NGAN 2
3700
NGUYEN THANH
MAY
0
0
0
1890
GO VAN
TAI
0
1
2
ADDA3
24
3
2018
0
0
0
PHUT 89
0
HANG 16, NGAN 3
VVVV2
24
6
2018
0
0
0
NGUOI PHAN XU
0
HANG 13, NGAN 2
856
NGUYEN TRONG
TINH
0
0
0
265
NGUYEN THI NGOC
HUYEN
1
1
0
721
NGUYEN THI
THUY
0
1
3
NNNN3
24
6
2018
0
0
0
MY NHAN NGU
0
HANG 12, NGAN 3
EEEE3
24
6
2018
0
0
0
CHUYEN GIA BAT MA
0
HANG 4, NGAN 1
JJJJ2
24
6
2018
0
0
0
HONG LAU MONG
0
HANG 7, NGAN 2
273
TO CONG
HAU
0
1
0
624
NGUYEN DANG THUY
TRANG
1
0
0
564
NGUYEN TRONG
TINH
0
1
0
474
NGUYEN THI
THUOC
1
1
0
691
NGUYEN DANG THUY
TRAM
1
1
0
726
NGUYEN THI
NGOC
0
1
0
795
NGUYEN NGOC
LINH
1
1
0
766
NGUYEN VAN
TOAN
0
1
1
MMMM2
4
6
2018
0
0
0
LOC DINH KY
0
HANG 11, NGAN 2
1247
NGUYEN THI
THUOC
1
1
0
1000
VO NGOC
TIEN
0
0
0
900
NGUYEN THI MAI
THAO
1
0
0
913
NGUYEN VAN
THUAN
0
1
0
1267
VO NGOC
TIEN
0
0
0
1259
NGO VAN
HET
0
1
0
1355
NGUYEN THI
NHI
1
0
0
1399
HUYNH THANH
TUNG
0
1
0
2254
NGUYEN THI
LINH
1
1
3
SFSF1
24
6
2018
0
0
0
ONE PIECE
0
HANG 15, NGAN 1
WWWW1
25
6
2018
0
0
0
SUONG KHOI QUE NHA
0
HANG 18, NGAN 1
GGGG3
25
6
2018
0
0
0
THAN DIEU DAI HIEP
0
HANG 23, NGAN 3
1900
NGUYEN THI MAI
THAO
1
0
0
2243
CAO VAN
DAY
0
1
3
ERER1
25
6
2018
0
0
0
NHA GIA KIM
0
HANG 14, NGAN 1
WSDS2
23
6
2018
0
0
0
THE GODFATHER
0
HANG 24, NGAN 2
KKKK2
21
6
2018
0
0
0
THIEN LONG BAT BO
0
HANG 26, NGAN 2
2104
THACH CANH
NHUT
0
1
3
GGGG2
25
6
2018
0
0
0
THAN DIEU DAI HIEP
0
HANG 23, NGAN 2
IIII2
25
6
2018
0
0
0
BICH HUYET KIEM
0
HANG 2, NGAN 2
FFFF2
25
6
2018
0
0
0
SO KIEU TRUYEN
0
HANG 17, NGAN 2
2034
NGUYEN VAN
THUAN
0
1
0
2108
NGUYEN TIEN
HAT
0
0
0
2294
NGUYEN VAN
THUAN
0
1
0
2752
NGUYEN VAN 
LAI
1
0
0
2736
TO CONG
TRANG
0
1
3
NNNN1
25
6
2018
0
0
0
MY NHAN NGU
0
HANG 12, NGAN 1
FFFF3
25
6
2018
0
0
0
SO KIEU TRUYEN
0
HANG 17, NGAN 3
UUUU1
25
6
2018
0
0
0
TE CONG
0
HANG 22, NGAN 1
2504
NGUYEN THANH
PHONG
0
1
2
ZZZZ1
24
6
2017
0
0
0
TRUYEN KIEU
0
HANG 28, NGAN 1
JJJJ3
24
6
2018
0
0
0
HONG LAU MONG
0
HANG 7, NGAN 3
2307
LE THANH
SANG
0
1
0
2514
NGUYEN THANH
LIN
0
1
3
EEEE5
25
6
2018
0
0
0
CHUYEN GIA BAT MA
0
HANG 4, NGAN 5
DSFF4
25
6
2018
0
0
0
INFINITY WAR
0
HANG 8, NGAN 4
ERER2
25
6
2018
0
0
0
NHA GIA KIM
0
HANG 14, NGAN 2
2950
NGUYEN CONG
VIEN
0
1
3
IEWO1
25
6
2018
0
0
0
CHIEC THUYEN NGOAI XA
0
HANG 34, NGAN 1
JJJJ2
25
6
2018
0
0
0
Y THIEN DO LONG KY
0
HANG 30, NGAN 2
ADAF1
25
6
2018
0
0
0
YOUR NAME
0
HANG 35, NGAN 1
3780
NGUYEN THI
LUA
1
1
3
ADAF2
25
6
2018
0
0
0
YOUR NAME
0
HANG 35, NGAN 2
JJJJ3
25
6
2018
0
0
0
Y THIEN DO LONG KY
0
HANG 30, NGAN 3
KDJG2
25
6
2018
0
0
0
KHONG THEO LOI MON
0
HANG 33, NGAN 2
7134
NGUYEN VAN
THO
0
1
3
DFGA2
25
6
2018
0
0
0
THE WALKING DEAD
0
HANG 25, NGAN 2
WSDS3
25
6
2018
0
0
0
THE GODFATHER
0
HANG 24, NGAN 3
SFSF3
25
6
2018
0
0
0
ONE PIECE
0
HANG 15, NGAN 3
5189
NGO VAN
TAI
0
1
3
NNNN2
25
6
2018
0
0
0
MY NHAN NGU
0
HANG 12, NGAN 2
WWWW2
25
6
2018
0
0
0
SUONG KHOI QUE NHA
0
HANG 18, NGAN 2
GGGG1
25
6
2018
0
0
0
THAN DIEU DAI HIEP
0
HANG 23, NGAN 1
6407
NGUYEN TRONG
KHANH
0
0
0
6309
NGUYEN TRI
VI
0
1
3
ASDF3
25
6
2018
0
0
0
LAO HAC
0
HANG 10, NGAN 3
AAAA4
25
6
2018
0
0
0
TAY DU KY
0
HANG 1, NGAN 4
KKKK1
25
6
2018
0
0
0
THIEN LONG BAT BO
0
HANG 26, NGAN 1
7395
NGUYEN NGOC
LINH
1
0
0
7774
NGUYEN THI
LUA
1
1
0
7613
NGUYEN NGON
QUOC
0
1
0
8041
NGUYEN VAN 
BINH
0
1
3
SFSF2
25
6
2018
0
0
0
ONE PIECE
0
HANG 15, NGAN 2
AAAA1
25
6
2018
0
0
0
TAY DU KY
0
HANG 1, NGAN 1
ZZZZ2
25
5
2018
0
0
0
TRUYEN KIEU
0
HANG 28, NGAN 2
7987
LE NGOC
VAN
0
1
0
8941
NGUYEN VAN 
BINH
0
1
3
IIII1
3
6
2018
0
0
0
BICH HUYET KIEM
0
HANG 2, NGAN 1
EEEE1
20
6
2018
0
0
0
CHUYEN GIA BAT MA
0
HANG 4, NGAN 1
CCCC1
20
6
2018
0
0
0
DAC NHAN TAM
2
HANG 3, NGAN 3
8259
NGO VAN
HET
0
1
0
10243
CAO VAN
DAI
0
1
3
SSSS1
25
6
2018
0
0
0
KINH VAN HOA
0
HANG 9, NGAN 1
SFSA1
25
6
2018
0
0
0
SU VIET 12 KHUC TRANG CA
0
HANG 19, NGAN 1
UUUU3
25
6
2018
0
0
0
TE CONG
0
HANG 22, NGAN 3
9913
NGUYEN VAN
THUAN
0
1
0
9429
NGUYEN NGOC
THANH
0
1
0
15239
NGUYEN THANH
HT
0
1
3
IIII3
25
6
2018
0
0
0
BICH HUYET KIEM
0
HANG 2, NGAN 3
JJJJ1
25
6
2018
0
0
0
HONG LAU MONG
0
HANG 7, NGAN 1
DSFF2
25
6
2018
0
0
0
INFINITY WAR
0
HANG 8, NGAN 2
13767
VO THI TUONG
VI
1
1
0
11443
PHAN THU
TRANG
1
1
0
15739
NGUYEN THANH
THAI
0
0
0
19585
NGUYEN THI
NHI
1
0
0
18106
NGUYEN THI
QUYNH
1
1
3
ADDA2
26
6
2018
0
0
0
PHUT 89
0
HANG 16, NGAN 2
SSSS4
26
6
2018
0
0
0
KINH VAN HOA
0
HANG 9, NGAN 4
FFFF1
26
6
2018
0
0
0
SO KIEU TRUYEN
0
HANG 17, NGAN 1
16788
NGUYEN HUU
NGOC
0
1
2
WSDS1
26
6
2018
0
0
0
THE GODFATHER
0
HANG 24, NGAN 1
QQQQ2
26
6
2018
0
0
0
HOANG TU BANH TRUNG
0
HANG 6, NGAN 2
20752
NGUYEN VAN 
LAI
1
0
0
21950
NGUYEN CONG
VIEN
0
1
1
BBBB3
27
1
2018
0
0
0
THUY HU
0
HANG 2, NGAN 3
22064
THACH CANH
NHUT
0
0
0
22653
NGUYEN THI NGOC
HUYEN
1
1
0
24072
NGUYEN VAN
DO
0
1
0
24972
NGUYEN THANH
DO
0
1
3
BBBB2
25
6
2018
0
0
0
THUY HU
0
HANG 2, NGAN 2
KKKK3
25
6
2018
0
0
0
THIEN LONG BAT BO
0
HANG 26, NGAN 3
AAAA2
25
6
2018
0
0
0
TAY DU KY
0
HANG 1, NGAN 2
26656
NGUYEN THANH
PHUC
0
1
0
25801
NGUYEN HUU
KHA
0
1
0
27608
NGUYEN TIEN
HAT
0
1
0
26709
LE VAN
TAI
0
1
0
32642
NGO VAN
DUONG
0
1
1
UUUU2
27
3
2018
0
0
0
TE CONG
0
HANG 22, NGAN 2
29033
NGUYEN THANH
TRI
0
1
0
30376
NGUYEN VAN
LUU
0
1
0
30139
THANH LONG
TIENG
0
1
0



================================================
FILE: File exe/introduce.txt
================================================

           __       __  .______   .______          ___      .______     ____    ____ 
          |  |     |  | |   _  \  |   _  \        /   \     |   _  \    \   \  /   / 
          |  |     |  | |  |_)  | |  |_)  |      /  ^  \    |  |_)  |    \   \/   /  
          |  |     |  | |   _  <  |      /      /  /_\  \   |      /      \_    _/   
          |  `----.|  | |  |_)  | |  |\  \----./  _____  \  |  |\  \----.   |  |     
          |_______||__| |______/  | _| `._____/__/     \__\ | _| `._____|   |__|     
                                                                           
                                                
                
            __...--~~~~~-._   _.-~~~~~--...__                                                                          _  
          //               `V'               \\            _ __ ___   __ _ _ __   __ _  __ _  ___ _ __ ___   ___ _ __ | |_
         //                 |                 \\          | '_ ` _ \ / _` | '_ \ / _` |/ _` |/ _ \ '_ ` _ \ / _ \ '_ \| __|
        //__...--~~~~~~-._  |  _.-~~~~~~--...__\\         | | | | | | (_| | | | | (_| | (_| |  __/ | | | | |  __/ | | | |_ 
       //__.....----~~~~._\ | /_.~~~~----.....__\\        |_| |_| |_|\__,_|_| |_|\__,_|\__, |\___|_| |_| |_|\___|_| |_|\__|
      ====================\\|//====================		                       |___/
	                   ---`                                                                                     
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  
                                 


================================================
FILE: File exe/QuanLyThuVien.txt
================================================

   ____                      _             _______ _            __      ___            
  / __ \                    | |           |__   __| |           \ \    / (_)           
 | |  | |_   _  __ _ _ __   | |    _   _     | |  | |__  _   _   \ \  / / _  ___ _ __  
 | |  | | | | |/ _` | '_ \  | |   | | | |    | |  | '_ \| | | |   \ \/ / | |/ _ \ '_ \ 
 | |__| | |_| | (_| | | | | | |___| |_| |    | |  | | | | |_| |    \  /  | |  __/ | | |
  \___\_\\__,_|\__,_|_| |_| |______\__, |    |_|  |_| |_|\__,_|     \/   |_|\___|_| |_|
                                    __/ |                                              
                                   |___/                                               



================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG.sln
================================================
﻿
Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio 15
VisualStudioVersion = 15.0.27130.2027
MinimumVisualStudioVersion = 10.0.40219.1
Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "N16DCCN116_NTPHONG", "N16DCCN116_NTPHONG\N16DCCN116_NTPHONG.vcxproj", "{ED6E284B-BA4E-44A3-A7EF-1300EC03BD70}"
EndProject
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|x64 = Debug|x64
		Debug|x86 = Debug|x86
		Release|x64 = Release|x64
		Release|x86 = Release|x86
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
		{ED6E284B-BA4E-44A3-A7EF-1300EC03BD70}.Debug|x64.ActiveCfg = Debug|x64
		{ED6E284B-BA4E-44A3-A7EF-1300EC03BD70}.Debug|x64.Build.0 = Debug|x64
		{ED6E284B-BA4E-44A3-A7EF-1300EC03BD70}.Debug|x86.ActiveCfg = Debug|Win32
		{ED6E284B-BA4E-44A3-A7EF-1300EC03BD70}.Debug|x86.Build.0 = Debug|Win32
		{ED6E284B-BA4E-44A3-A7EF-1300EC03BD70}.Release|x64.ActiveCfg = Release|x64
		{ED6E284B-BA4E-44A3-A7EF-1300EC03BD70}.Release|x64.Build.0 = Release|x64
		{ED6E284B-BA4E-44A3-A7EF-1300EC03BD70}.Release|x86.ActiveCfg = Release|Win32
		{ED6E284B-BA4E-44A3-A7EF-1300EC03BD70}.Release|x86.Build.0 = Release|Win32
	EndGlobalSection
	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
	GlobalSection(ExtensibilityGlobals) = postSolution
		SolutionGuid = {5776A76A-C820-4741-A6EE-455A5424E59C}
	EndGlobalSection
EndGlobal



================================================
FILE: QUAN_LY_THU_VIEN/Debug/DauSach.txt
================================================
38
BICH HUYET KIEM
IIII
KIM DUNG
VO HIEP
143343
1955
9
IIII1
1
HANG 2, NGAN 1
IIII2
1
HANG 2, NGAN 2
IIII3
1
HANG 2, NGAN 3
IIII4
0
HANG 2, NGAN 4
IIII5
0
HANG 2, NGAN 5
IIII6
0
HANG 2, NGAN 6
IIII7
0
HANG 2, NGAN 7
IIII8
0
HANG 2, NGAN 8
IIII9
0
HANG 2, NGAN 9
BO GIA
WSSW
MARIO PUZO
TIEU THUYET
5641
2008
6
WSSW1
0
HANG 36, NGAN 1
WSSW2
0
HANG 36, NGAN 2
WSSW3
0
HANG 36, NGAN 3
WSSW4
0
HANG 36, NGAN 4
WSSW5
0
HANG 36, NGAN 5
WSSW6
0
HANG 36, NGAN 6
CHUYEN GIA BAT MA
EEEE
CHAU TINH RI
HAI BUA
32422
1995
9
EEEE1
1
HANG 4, NGAN 1
EEEE2
1
HANG 4, NGAN 1
EEEE3
1
HANG 4, NGAN 1
EEEE4
0
HANG 4, NGAN 4
EEEE5
1
HANG 4, NGAN 5
EEEE6
0
HANG 4, NGAN 6
EEEE7
0
HANG 4, NGAN 7
EEEE8
0
HANG 4, NGAN 8
EEEE9
0
HANG 4, NGAN 9
DAC NHAN TAM
CCCC
DALE CAMEGIE
SELF HELP
300
1968
9
CCCC1
1
HANG 3, NGAN 1
CCCC2
0
HANG 3, NGAN 2
CCCC3
0
HANG 3, NGAN 3
CCCC4
0
HANG 3, NGAN 4
CCCC5
0
HANG 3, NGAN 5
CCCC6
0
HANG 3, NGAN 6
CCCC7
0
HANG 3, NGAN 7
CCCC8
0
HANG 3, NGAN 8
CCCC9
0
HANG 3, NGAN 9
DOI BONG THIEU LAM
PPPP
CHAU TINH TRI
HAI BUA
234234
2001
6
PPPP1
0
HANG 5, NGAN 1
PPPP2
0
HANG 5, NGAN 2
PPPP3
0
HANG 5, NGAN 3
PPPP4
0
HANG 5, NGAN 4
PPPP5
0
HANG 5, NGAN 5
PPPP6
0
HANG 5, NGAN 6
HOANG TU BANH TRUNG
QQQQ
CHAU TINH TRI
HAI BUA
343434
1998
6
QQQQ1
1
HANG 6, NGAN 1
QQQQ2
1
HANG 6, NGAN 2
QQQQ3
1
HANG 6, NGAN 3
QQQQ4
0
HANG 6, NGAN 4
QQQQ5
0
HANG 6, NGAN 5
QQQQ6
0
HANG 6, NGAN 6
HONG LAU MONG
JJJJ
KIM DUNG
VO HIEP
54665
1910
6
JJJJ1
1
HANG 7, NGAN 1
JJJJ2
1
HANG 7, NGAN 2
JJJJ3
1
HANG 7, NGAN 3
JJJJ4
0
HANG 7,NGAN 4
JJJJ5
0
HANG 7, NGAN 5
JJJJ6
0
HANG 7, NGAN 6
INFINITY WAR
DSFF
MARVEL COMICS
MARVEL
343
2018
9
DSFF1
0
HANG 8, NGAN 1
DSFF2
1
HANG 8, NGAN 2
DSFF3
0
HANG 8, NGAN 3
DSFF4
1
HANG 8, NGAN 4
DSFF5
0
HANG 8, NGAN 5
DSFF6
0
HANG 8, NGAN 6
DSFF7
0
HANG 8, NGAN 7
DSFF8
0
HANG 8,, NGAN 8
DSFF9
0
HANG 8, NGAN 9
KINH VAN HOA
SSSS
NGUYEN NHAT ANH
HOC DUONG
23423
2007
12
SSSS1
1
HANG 9, NGAN 1
SSSS2
0
HANG 9, NGAN 2
SSSS3
0
HANG 9, NGAN 3
SSSS4
1
HANG 9, NGAN 4
SSSS5
0
HANG 9, NGAN 5
SSSS6
0
HANG 9, NGAN 6
SSSS7
0
HANG 9, NGAN 7
SSSS8
0
HANG 9, NGAN 8
SSSS9
0
HANG 9, NGAN 9
SSSS10
0
HANG 10, NGAN 10
SSSS11
0
HANG 10, NGAN 11
SSSS12
0
HANG 10, NGAN 12
LAO HAC
ASDF
NAM CAO
VAN HOC
134
1945
6
ASDF1
0
HANG 10, NGAN 1
ASDF2
1
HANG 10, NGAN 2
ASDF3
1
HANG 10, NGAN 3
ASDF4
0
HANG 10, NGAN 4
ASDF5
0
HANG 10, NGAN 5
ASDF6
0
HANG 10, NGAN 6
LOC DINH KY
MMMM
KIM DUNG
VO HIEP
234234
1969
6
MMMM1
0
HANG 11, NGAN 1
MMMM2
1
HANG 11, NGAN 2
MMMM3
0
HANG 11, NGAN 3
MMMM4
0
HANG 11, NGAN 4
MMMM5
0
HANG 11, NGAN 5
MMMM6
0
HANG 11, NGAN 6
MY NHAN NGU
NNNN
CHAU TINH TRI
HAI BUA
242342
2015
6
NNNN1
1
HANG 12, NGAN 1
NNNN2
1
HANG 12, NGAN 2
NNNN3
1
HANG 12, NGAN 3
NNNN4
0
HANG 12, NGAN 4
NNNN5
0
HANG 12, NGAN 5
NNNN6
0
HANG 12, NGAN 6
NGUOI PHAN XU
VVVV
PHAN QUAN
HINH SU
332432
2018
6
VVVV1
0
HANG 13, NGAN 1
VVVV2
1
HANG 13, NGAN 2
VVVV3
0
HANG 13, NGAN 3
VVVV4
0
HANG 13, NGAN 4
VVVV5
0
HANG 13, NGAN 5
VVVV6
0
HANG 13, NGAN 6
NHA GIA KIM
ERER
PAULO COELHO
TIEU THUYET
545
1989
6
ERER1
1
HANG 14, NGAN 1
ERER2
1
HANG 14, NGAN 2
ERER3
0
HANG 14, NGAN 3
ERER4
0
HANG 14, NGAN 4
ERER5
0
HANG 14, NGAN 5
ERER6
0
HANG 14, NGAN 6
ONE PIECE
SFSF
ODA EIICHIRO
VH HIEN DAI
8869
1998
3
SFSF1
1
HANG 15, NGAN 1
SFSF2
1
HANG 15, NGAN 2
SFSF3
1
HANG 15, NGAN 3
PHUT 89
ADDA
LE CONG VINH
TU TRUYEN
323
2018
3
ADDA1
0
HANG 16, NGAN 1
ADDA2
1
HANG 16, NGAN 2
ADDA3
1
HANG 16, NGAN 3
SO KIEU TRUYEN
FFFF
NGO CAM NGUYEN
CO TRANG
344353
2017
3
FFFF1
1
HANG 17, NGAN 1
FFFF2
1
HANG 17, NGAN 2
FFFF3
1
HANG 17, NGAN 3
SUONG KHOI QUE NHA
WWWW
NGUYEN NHAT ANH
THO
343
2016
6
WWWW1
1
HANG 18, NGAN 1
WWWW2
1
HANG 18, NGAN 2
WWWW3
0
HANG 18, NGAN 3
WWWW4
0
HANG 18, NGAN 4
WWWW5
0
HANG 18, NGAN 5
WWWW6
0
HANG 18, NGAN 6
SU VIET 12 KHUC TRANG CA
SFSA
NGUYEN VAN A
LICH SU
234234
2017
6
SFSA1
1
HANG 19, NGAN 1
SFSA2
0
HANG 19, NGAN 2
SFSA3
1
HANG 19, NGAN 3
SFSA4
0
HANG 19, NGAN 4
SFSA5
0
HANG 19, NGAN 5
SFSA6
0
HANG 19, NGAN 6
TAM QUOC DIEN NGHIA
HHHH
LA QUAN TRUNG
TIEU THUYET
234234
1345
6
HHHH1
0
HANG 21, NGAN 1
HHHH2
0
HANG 21, NGAN 2
HHHH3
0
HANG 21, NGAN 3
HHHH4
0
HANG 21, NGAN 4
HHHH5
0
HANG 21, NGAN 5
HHHH6
0
HANG 21, NGAN 6
TAY DU KY
AAAA
NGO THUA AN
THAN THOAI
22322
1986
34
AAAA1
1
HANG 1, NGAN 1
AAAA2
1
HANG 1, NGAN 2
AAAA3
0
HANG 1, NGAN 3
AAAA4
1
HANG 1, NGAN 4
AAAA5
0
HANG 1, NGAN 5
AAAA6
0
HANG 1, NGAN 6
AAAA7
0
HANG 1, NGAN 7
AAAA8
0
HANG 1, NGAN 8
AAAA9
0
HANG 1, NGAN 9
AAAA10
0
HANG 1, NGAN 10
AAAA11
0
HANG 1, NGAN 11
AAAA12
0
HANG 1, NGAN 12
AAAA13
0
HANG 1, NGAN 13
AAAA14
0
HANG 1, NGAN 14
AAAA15
0
HANG 1, NGAN 15
AAAA16
0
HANG 1, NGAN 16
AAAA17
0
HANG 1, NGAN 17
AAAA18
0
HANG 1, NGAN 18
AAAA19
0
HANG 1, NGAN 19
AAAA20
0
HANG 1, NGAN 20
AAAA21
0
HANG 1, NGAN 21
AAAA22
0
HANG 1, NGAN 22
AAAA23
0
HANG 1, NGAN 23
AAAA24
0
HANG 1, NGAN 24
AAAA25
0
HANG 1, NGAN 25
AAAA26
0
HANG 1, NGAN 26
AAAA27
0
HANG 1, NGAN 27
AAAA28
0
HANG 1, NGAN 28
AAAA29
0
HANG 1, NGAN 29
AAAA30
0
HANG 1, NGAN 30
AAAA31
0
HANG 1, NGAN 31
AAAA32
0
HANG 1, NGAN 32
AAAA33
0
HANG 1, NGAN 33
AAAA34
0
HANG 1, NGAN 34
TE CONG
UUUU
CHAU TINH TRI
HAI BUA
34234
1993
6
UUUU1
1
HANG 22, NGAN 1
UUUU2
1
HANG 22, NGAN 2
UUUU3
1
HANG 22, NGAN 3
UUUU4
0
HANG 22, NGAN 4
UUUU5
0
HANG 22, NGAN 5
UUUU6
0
HANG 22, NGAN 6
THAN AN
RRRR
CHAU TINH TRI
HAI BUA
23423
1996
6
RRRR1
0
HANG 23, NGAN 1
RRRR2
1
HANG 23, NGAN 2
RRRR3
0
HANG 23, NGAN 3
RRRR4
0
HANG 23, NGAN 4
RRRR5
0
HANG 23, NGAN 5
RRRR6
0
HANG 23, NGAN 6
THAN DIEU DAI HIEP
GGGG
KIM DUNG
VO HIEP
343434
1986
3
GGGG1
1
HANG 23, NGAN 1
GGGG2
1
HANG 23, NGAN 2
GGGG3
1
HANG 23, NGAN 3
THE GIOI PHANG
DFFA
FRIEDMAN
CHINH TRI
820
2006
0
THE GODFATHER
WSDS
MARIO PUZO
TIEU THUYET
343434
1972
3
WSDS1
1
HANG 24, NGAN 1
WSDS2
1
HANG 24, NGAN 2
WSDS3
1
HANG 24, NGAN 3
THE WALKING DEAD
DFGA
FRANK DARABONT
KINH DI
242343
2012
6
DFGA1
0
HANG 25, NGAN 1
DFGA2
1
HANG 25, NGAN 2
DFGA3
0
HANG 25, NGAN 3
DFGA4
0
HANG 25, NGAN 4
DFGA5
0
HANG 23, NGAN 59
DFGA6
0
HANG 23, NGAN 6
THIEN LONG BAT BO
KKKK
KIM DUNG
VO HIEP
232132
1963
6
KKKK1
1
HANG 26, NGAN 1
KKKK2
1
HANG 26, NGAN 2
KKKK3
1
HANG 26, NGAN 3
KKKK4
0
HANG 26, NGAN 4
KKKK5
0
HANG 24, NGAN 5
KKKK6
0
HANG 26, NGAN 6
THUY HU
BBBB
THI NAI AM
TIEU THUYET
32423
1933
35
BBBB1
0
HANG 2, NGAN 1
BBBB2
1
HANG 2, NGAN 2
BBBB3
1
HANG 2, NGAN 3
BBBB4
0
HANG 2, NGAN 4
BBBB5
0
HANG 2, NGAN 5
BBBB6
0
HANG 2, NGAN 6
BBBB7
0
HANG 2, NGAN 7
BBBB8
0
HANG 2, NGAN 8
BBBB9
0
HANG 2, NGAN 9
BBBB10
0
HANG 2, NGAN 10
BBBB11
0
HANG 2, NGAN 11
BBBB12
0
HANG 2, NGAN 12
BBBB13
0
HANG 2, NGAN 13
BBBB14
0
HANG 2, NGAN 14
BBBB15
0
HANG 2, NGAN 15
BBBB16
0
HANG 2, NGAN 16
BBBB17
0
HANG 2, NGAN 17
BBBB18
0
HANG 2, NGAN 18
BBBB19
0
HANG 2, NGAN 19
BBBB20
0
HANG 2, NGAN 20
BBBB21
0
HANG 2, NGAN 21
BBBB22
0
HANG 2, NGAN 22
BBBB23
0
HANG 2, NGAN 23
BBBB24
0
HANG 2, NGAN 24
BBBB25
0
HANG 2, NGAN 25
BBBB26
0
HANG 2, NGAN 26
BBBB27
0
HANG 2, NGAN 27
BBBB28
0
HANG 2, NGAN 28
BBBB29
0
HANG 2, NGAN 29
BBBB30
0
HANG 2, NGAN 30
BBBB31
0
HANG 2, NGAN 31
BBBB32
0
HANG 2, NGAN 32
BBBB33
0
HANG 2, NGAN 33
BBBB34
0
HANG 2, NGAN 34
BBBB35
0
HANG 2, NGAN 35
TIEU NGAO GIAN HO
LLLL
KIM DUNG
VO HIEP
234234
1967
3
LLLL1
0
HANG 27, NGAN 1
LLLL2
0
HANG 27, NGAN 2
LLLL3
0
HANG 27, NGAN 3
TRUYEN KIEU
ZZZZ
NGUYEN DU
THO
132321
1906
3
ZZZZ1
1
HANG 28, NGAN 1
ZZZZ2
1
HANG 28, NGAN 2
ZZZZ3
1
HANG 28, NGAN 3
TUYET DINH CONG PHU
OOOO
CHAU TINH TRI
HAI BUA
23232
2004
3
OOOO1
0
HANG 29, NGAN 1
OOOO2
0
HANG 29, NGAN 2
OOOO3
0
HANG 29, NGAN 3
Y THIEN DO LONG KY
JJJJ
KIM DUNG
VO HIEP
345332
1961
3
JJJJ1
0
HANG 30, NGAN 1
JJJJ2
1
HANG 30, NGAN 2
JJJJ3
1
HANG 30, NGAN 3
LUOC SU THOI GIAN
SDFA
S HHAWKING
KHOA HOC PT
286
2008
3
SDFA1
0
HANG 31, NGAN 1
SDFA2
0
HANG 31, NGAN 2
SDFA3
0
HANG 31, NGAN 3
NHA GIA KIM
SDAA
COELHO
VAN HOC HD
2066
2016
3
SDAA1
0
HANG 32, NGAN 1
SDAA2
0
HANG 32, NGAN 2
SDAA3
0
HANG 32, NGAN 3
KHONG THEO LOI MON
KDJG
SINGER
SELFHELP
4451
2016
3
KDJG1
0
HANG 33, NGAN 1
KDJG2
1
HANG 33, NGAN 2
KDJG3
0
HANG 33, NGAN 3
CHIEC THUYEN NGOAI XA
IEWO
NGUYEN MINH CHAU
VAN HOC
66
1952
3
IEWO1
1
HANG 34, NGAN 1
IEWO2
0
HANG 34, NGAN 2
IEWO3
0
HANG 34, NGAN 3
YOUR NAME
ADAF
NGUYEN VAN K
HAI BUA
3423
2002
3
ADAF1
1
HANG 35, NGAN 1
ADAF2
1
HANG 35, NGAN 2
ADAF3
0
HANG 35, NGNAN 3



================================================
FILE: QUAN_LY_THU_VIEN/Debug/DocGia.txt
================================================
74
5000
NGUYEN TRONG
KHANH
0
0
0
4000
NGUYEN NGON
QUOC
0
1
3
ASDF2
25
6
2018
0
0
0
LAO HAC
0
HANG 10, NGAN 2
QQQQ1
25
6
2018
0
0
0
HOANG TU BANH TRUNG
0
HANG 6, NGAN 1
SFSA3
25
6
2018
0
0
0
SU VIET 12 KHUC TRANG CA
0
HANG 19, NGAN 3
34
NGUYEN VAN
THO
0
1
1
EEEE2
2
6
2018
0
0
0
CHUYEN GIA BAT MA
0
HANG 4, NGAN 1
3800
NGUYEN THI
LINH
1
1
3
ZZZZ3
25
6
2018
0
0
0
TRUYEN KIEU
0
HANG 28, NGAN 3
QQQQ3
25
6
2018
0
0
0
HOANG TU BANH TRUNG
0
HANG 6, NGAN 3
RRRR2
25
6
2018
0
0
0
THAN AN
0
HANG 23, NGAN 2
3700
NGUYEN THANH
MAY
0
0
0
1890
GO VAN
TAI
0
1
2
ADDA3
24
3
2018
0
0
0
PHUT 89
0
HANG 16, NGAN 3
VVVV2
24
6
2018
0
0
0
NGUOI PHAN XU
0
HANG 13, NGAN 2
856
NGUYEN TRONG
TINH
0
0
0
265
NGUYEN THI NGOC
HUYEN
1
1
0
721
NGUYEN THI
THUY
0
1
3
NNNN3
24
6
2018
0
0
0
MY NHAN NGU
0
HANG 12, NGAN 3
EEEE3
24
6
2018
0
0
0
CHUYEN GIA BAT MA
0
HANG 4, NGAN 1
JJJJ2
24
6
2018
0
0
0
HONG LAU MONG
0
HANG 7, NGAN 2
273
TO CONG
HAU
0
1
0
624
NGUYEN DANG THUY
TRANG
1
0
0
564
NGUYEN TRONG
TINH
0
1
0
474
NGUYEN THI
THUOC
1
1
0
691
NGUYEN DANG THUY
TRAM
1
1
0
726
NGUYEN THI
NGOC
0
1
0
795
NGUYEN NGOC
LINH
1
1
0
766
NGUYEN VAN
TOAN
0
1
1
MMMM2
4
6
2018
0
0
0
LOC DINH KY
0
HANG 11, NGAN 2
1247
NGUYEN THI
THUOC
1
1
0
1000
VO NGOC
TIEN
0
0
0
900
NGUYEN THI MAI
THAO
1
0
0
913
NGUYEN VAN
THUAN
0
1
0
1267
VO NGOC
TIEN
0
0
0
1259
NGO VAN
HET
0
1
0
1355
NGUYEN THI
NHI
1
0
0
1399
HUYNH THANH
TUNG
0
1
0
2254
NGUYEN THI
LINH
1
1
3
SFSF1
24
6
2018
0
0
0
ONE PIECE
0
HANG 15, NGAN 1
WWWW1
25
6
2018
0
0
0
SUONG KHOI QUE NHA
0
HANG 18, NGAN 1
GGGG3
25
6
2018
0
0
0
THAN DIEU DAI HIEP
0
HANG 23, NGAN 3
1900
NGUYEN THI MAI
THAO
1
0
0
2243
CAO VAN
DAY
0
1
3
ERER1
25
6
2018
0
0
0
NHA GIA KIM
0
HANG 14, NGAN 1
WSDS2
23
6
2018
0
0
0
THE GODFATHER
0
HANG 24, NGAN 2
KKKK2
21
6
2018
0
0
0
THIEN LONG BAT BO
0
HANG 26, NGAN 2
2104
THACH CANH
NHUT
0
1
3
GGGG2
25
6
2018
0
0
0
THAN DIEU DAI HIEP
0
HANG 23, NGAN 2
IIII2
25
6
2018
0
0
0
BICH HUYET KIEM
0
HANG 2, NGAN 2
FFFF2
25
6
2018
0
0
0
SO KIEU TRUYEN
0
HANG 17, NGAN 2
2034
NGUYEN VAN
THUAN
0
1
0
2108
NGUYEN TIEN
HAT
0
0
0
2294
NGUYEN VAN
THUAN
0
1
0
2752
NGUYEN VAN 
LAI
1
0
0
2736
TO CONG
TRANG
0
1
3
NNNN1
25
6
2018
0
0
0
MY NHAN NGU
0
HANG 12, NGAN 1
FFFF3
25
6
2018
0
0
0
SO KIEU TRUYEN
0
HANG 17, NGAN 3
UUUU1
25
6
2018
0
0
0
TE CONG
0
HANG 22, NGAN 1
2504
NGUYEN THANH
PHONG
0
1
2
ZZZZ1
24
6
2017
0
0
0
TRUYEN KIEU
0
HANG 28, NGAN 1
JJJJ3
24
6
2018
0
0
0
HONG LAU MONG
0
HANG 7, NGAN 3
2307
LE THANH
SANG
0
1
0
2514
NGUYEN THANH
LIN
0
1
3
EEEE5
25
6
2018
0
0
0
CHUYEN GIA BAT MA
0
HANG 4, NGAN 5
DSFF4
25
6
2018
0
0
0
INFINITY WAR
0
HANG 8, NGAN 4
ERER2
25
6
2018
0
0
0
NHA GIA KIM
0
HANG 14, NGAN 2
2950
NGUYEN CONG
VIEN
0
1
3
IEWO1
25
6
2018
0
0
0
CHIEC THUYEN NGOAI XA
0
HANG 34, NGAN 1
JJJJ2
25
6
2018
0
0
0
Y THIEN DO LONG KY
0
HANG 30, NGAN 2
ADAF1
25
6
2018
0
0
0
YOUR NAME
0
HANG 35, NGAN 1
3780
NGUYEN THI
LUA
1
1
3
ADAF2
25
6
2018
0
0
0
YOUR NAME
0
HANG 35, NGAN 2
JJJJ3
25
6
2018
0
0
0
Y THIEN DO LONG KY
0
HANG 30, NGAN 3
KDJG2
25
6
2018
0
0
0
KHONG THEO LOI MON
0
HANG 33, NGAN 2
7134
NGUYEN VAN
THO
0
1
3
DFGA2
25
6
2018
0
0
0
THE WALKING DEAD
0
HANG 25, NGAN 2
WSDS3
25
6
2018
0
0
0
THE GODFATHER
0
HANG 24, NGAN 3
SFSF3
25
6
2018
0
0
0
ONE PIECE
0
HANG 15, NGAN 3
5189
NGO VAN
TAI
0
1
3
NNNN2
25
6
2018
0
0
0
MY NHAN NGU
0
HANG 12, NGAN 2
WWWW2
25
6
2018
0
0
0
SUONG KHOI QUE NHA
0
HANG 18, NGAN 2
GGGG1
25
6
2018
0
0
0
THAN DIEU DAI HIEP
0
HANG 23, NGAN 1
6407
NGUYEN TRONG
KHANH
0
0
0
6309
NGUYEN TRI
VI
0
1
3
ASDF3
25
6
2018
0
0
0
LAO HAC
0
HANG 10, NGAN 3
AAAA4
25
6
2018
0
0
0
TAY DU KY
0
HANG 1, NGAN 4
KKKK1
25
6
2018
0
0
0
THIEN LONG BAT BO
0
HANG 26, NGAN 1
7395
NGUYEN NGOC
LINH
1
0
0
7774
NGUYEN THI
LUA
1
1
0
7613
NGUYEN NGON
QUOC
0
1
0
8041
NGUYEN VAN 
BINH
0
1
3
SFSF2
25
6
2018
0
0
0
ONE PIECE
0
HANG 15, NGAN 2
AAAA1
25
6
2018
0
0
0
TAY DU KY
0
HANG 1, NGAN 1
ZZZZ2
25
5
2018
0
0
0
TRUYEN KIEU
0
HANG 28, NGAN 2
7987
LE NGOC
VAN
0
1
0
8941
NGUYEN VAN 
BINH
0
1
3
IIII1
3
6
2018
0
0
0
BICH HUYET KIEM
0
HANG 2, NGAN 1
EEEE1
20
6
2018
0
0
0
CHUYEN GIA BAT MA
0
HANG 4, NGAN 1
CCCC1
20
6
2018
0
0
0
DAC NHAN TAM
2
HANG 3, NGAN 3
8259
NGO VAN
HET
0
1
0
10243
CAO VAN
DAI
0
1
3
SSSS1
25
6
2018
0
0
0
KINH VAN HOA
0
HANG 9, NGAN 1
SFSA1
25
6
2018
0
0
0
SU VIET 12 KHUC TRANG CA
0
HANG 19, NGAN 1
UUUU3
25
6
2018
0
0
0
TE CONG
0
HANG 22, NGAN 3
9913
NGUYEN VAN
THUAN
0
1
0
9429
NGUYEN NGOC
THANH
0
1
0
15239
NGUYEN THANH
HT
0
1
3
IIII3
25
6
2018
0
0
0
BICH HUYET KIEM
0
HANG 2, NGAN 3
JJJJ1
25
6
2018
0
0
0
HONG LAU MONG
0
HANG 7, NGAN 1
DSFF2
25
6
2018
0
0
0
INFINITY WAR
0
HANG 8, NGAN 2
13767
VO THI TUONG
VI
1
1
0
11443
PHAN THU
TRANG
1
1
0
15739
NGUYEN THANH
THAI
0
0
0
19585
NGUYEN THI
NHI
1
0
0
18106
NGUYEN THI
QUYNH
1
1
3
ADDA2
26
6
2018
0
0
0
PHUT 89
0
HANG 16, NGAN 2
SSSS4
26
6
2018
0
0
0
KINH VAN HOA
0
HANG 9, NGAN 4
FFFF1
26
6
2018
0
0
0
SO KIEU TRUYEN
0
HANG 17, NGAN 1
16788
NGUYEN HUU
NGOC
0
1
2
WSDS1
26
6
2018
0
0
0
THE GODFATHER
0
HANG 24, NGAN 1
QQQQ2
26
6
2018
0
0
0
HOANG TU BANH TRUNG
0
HANG 6, NGAN 2
20752
NGUYEN VAN 
LAI
1
0
0
21950
NGUYEN CONG
VIEN
0
1
1
BBBB3
27
1
2018
0
0
0
THUY HU
0
HANG 2, NGAN 3
22064
THACH CANH
NHUT
0
0
0
22653
NGUYEN THI NGOC
HUYEN
1
1
0
24072
NGUYEN VAN
DO
0
1
0
24972
NGUYEN THANH
DO
0
1
3
BBBB2
25
6
2018
0
0
0
THUY HU
0
HANG 2, NGAN 2
KKKK3
25
6
2018
0
0
0
THIEN LONG BAT BO
0
HANG 26, NGAN 3
AAAA2
25
6
2018
0
0
0
TAY DU KY
0
HANG 1, NGAN 2
26656
NGUYEN THANH
PHUC
0
1
0
25801
NGUYEN HUU
KHA
0
1
0
27608
NGUYEN TIEN
HAT
0
1
0
26709
LE VAN
TAI
0
1
0
32642
NGO VAN
DUONG
0
1
1
UUUU2
27
3
2018
0
0
0
TE CONG
0
HANG 22, NGAN 2
29033
NGUYEN THANH
TRI
0
1
0
30376
NGUYEN VAN
LUU
0
1
0
30139
THANH LONG
TIENG
0
1
0



================================================
FILE: QUAN_LY_THU_VIEN/Debug/introduce.txt
================================================

           __       __  .______   .______          ___      .______     ____    ____ 
          |  |     |  | |   _  \  |   _  \        /   \     |   _  \    \   \  /   / 
          |  |     |  | |  |_)  | |  |_)  |      /  ^  \    |  |_)  |    \   \/   /  
          |  |     |  | |   _  <  |      /      /  /_\  \   |      /      \_    _/   
          |  `----.|  | |  |_)  | |  |\  \----./  _____  \  |  |\  \----.   |  |     
          |_______||__| |______/  | _| `._____/__/     \__\ | _| `._____|   |__|     
                                                                           
                                                
                
            __...--~~~~~-._   _.-~~~~~--...__                                                                          _  
          //               `V'               \\            _ __ ___   __ _ _ __   __ _  __ _  ___ _ __ ___   ___ _ __ | |_
         //                 |                 \\          | '_ ` _ \ / _` | '_ \ / _` |/ _` |/ _ \ '_ ` _ \ / _ \ '_ \| __|
        //__...--~~~~~~-._  |  _.-~~~~~~--...__\\         | | | | | | (_| | | | | (_| | (_| |  __/ | | | | |  __/ | | | |_ 
       //__.....----~~~~._\ | /_.~~~~----.....__\\        |_| |_| |_|\__,_|_| |_|\__,_|\__, |\___|_| |_| |_|\___|_| |_|\__|
      ====================\\|//====================		                       |___/
	                   ---`                                                                                     
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  
                                 


================================================
FILE: QUAN_LY_THU_VIEN/Debug/N16DCCN116_NTPHONG.ilk
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/Debug/QuanLyThuVien.txt
================================================

   ____                      _             _______ _            __      ___            
  / __ \                    | |           |__   __| |           \ \    / (_)           
 | |  | |_   _  __ _ _ __   | |    _   _     | |  | |__  _   _   \ \  / / _  ___ _ __  
 | |  | | | | |/ _` | '_ \  | |   | | | |    | |  | '_ \| | | |   \ \/ / | |/ _ \ '_ \ 
 | |__| | |_| | (_| | | | | | |___| |_| |    | |  | | | | |_| |    \  /  | |  __/ | | |
  \___\_\\__,_|\__,_|_| |_| |______\__, |    |_|  |_| |_|\__,_|     \/   |_|\___|_| |_|
                                    __/ |                                              
                                   |___/                                               



================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Check_Nhap.cpp
================================================
﻿
#include "Check_Nhap.h"

// loai bo khang space ' ' thua trong string.
string ChuanHoaString(string result)
{

	for (size_t i = 1; i < result.length(); i++)
	{
		if (result[0] == ' ')
		{
			result.erase(0, 1);
			i--;
		}
		else if (result[i - 1] == ' ' && result[i] == ' ')
		{
			result.erase(i - 1, 1);
			i--;
		}
		else if (result[result.length() - 1] == ' ')
		{
			result.erase(result.length() - 1, 1);

		}
	}
	return result;
}


void Nhap(uint &result, int choice, int &ordinal, bool &isSave, bool &isEscape)
{
	//cout << result;
	int count = 0;

	// giu lai vi tri ban dau 
	int x = wherex() - 1, y = wherey() - 1;

	if (choice == 1 && result == 3)
	{
		result = 1;
		gotoxy(x, y);
		cout << result << ":  HOAT DONG ";
	}
	while (true)
	{
		while (_kbhit())
		{
			int kb_hit = _getch();
			if ((kb_hit == 48 || kb_hit == 49) && count < 1)
			{
				count++;
				result = kb_hit - 48;
				if (choice == 0)
				{
					// xoa dong thong bao
					gotoxy(X_NOTIFY + 15, Y_NOTIFY);
					cout << setw(42) << setfill(' ') << " ";
					gotoxy(x, y);
					(result == 0) ? cout << result << ":  NAM" : cout << result << ":  NU    ";
				}
				else if (choice == 1)
				{
					// xoa dong thong bao
					gotoxy(X_NOTIFY + 15, Y_NOTIFY);
					cout << setw(42) << setfill(' ') << " ";
					gotoxy(x, y);
					(result == 0) ? cout << result << ":  KHOA      " : cout << result << ":  HOAT DONG ";
				}
			}
			else if (kb_hit == 224)
			{
				kb_hit = _getch();
				// cho nay xay ra hai truong hop
				if (choice == 0)
				{
					if (kb_hit == KEY_UP)
					{
						ordinal = 1;
						return;
					}
					else
					{
						ordinal = 3;
						return;
					}
				}
				else if (choice == 1)
				{
					if (kb_hit == KEY_UP)
					{
						ordinal = 2;
						return;
					}
					else
					{
						ordinal = 0;
						return;
					}
				}
			}
			else if (kb_hit == ENTER)
			{
				if (choice == 0)
				{
					ordinal = 3;
					return;
				}
				else if (choice == 1)
				{
					ordinal = 0;
					return;
				}
			}
			else if (kb_hit == BACKSPACE && count > 0)
			{
				gotoxy(x, y);
				result = 3;
				cout << " " << setw(15) << setfill(' ') << " ";
				count--;
				// chuyen ve vi tri ban dau.
				gotoxy(x, y);
			}
			else if (kb_hit == 0)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_F10)
				{
					isSave = true;
					return;
				}
			}
			else if (kb_hit == ESC)
			{
				isEscape = true;
				return;
			}
			else {
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << "BAN HAY NHAP 0 HOAC 1,Backspace DE XOA !!!";
				normalBGColor();
				gotoxy(x, y);
			}
		}
	}
}

void NhapTen(string &result, int &ordinal, bool &isSave, bool &isEscape)
{
	// bien dem so chu da duoc nhap vao cho result
	cout << result;
	int count = (int)result.length();
	int x, y;
	while (true)
	{
		x = wherex() - 1;
		y = wherey() - 1;

		while (_kbhit())
		{
			int kb_hit = _getch();
			// chi nhan chu thuong hoac  chu in hoa. 
			// chi nhap ten toi da 7 ky tu, vi tu dai nhat tieng viet chi la 7.
			if (((kb_hit >= 65 && kb_hit <= 90) || (kb_hit >= 97 && kb_hit <= 122)) && count < MAX_TEN)
			{
				count++;

				// xoa dong thong bao
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				cout << setw(42) << setfill(' ') << " ";
				gotoxy(x, y);

				// chuyen qua in hoa
				kb_hit = toupper((char)kb_hit);
				cout << (char)kb_hit;
				result += (char)kb_hit;
			}
			else if (kb_hit == 224)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_UP)
				{
					ordinal = 0;
					return;
				}
				else
				{
					ordinal = 2;
					return;
				}
			}
			else if (kb_hit == ENTER)
			{
				ordinal = 2;
				return;
			}
			else if (kb_hit == BACKSPACE && count > 0)
			{
				cout << "\b" << " " << "\b";
				count--;
				result.erase(result.length() - 1, 1);

			}
			else if (kb_hit == 0)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_F10)
				{
					isSave = true;
					return;
				}
			}
			else if (kb_hit == ESC)
			{
				isEscape = true;
				return;
			}
			else {
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << "TOI DA 7 KY TU, CHI LAY KY TU CHU !!!";
				normalBGColor();
				gotoxy(x, y);
			}
		}
	}
}


void NhapHo(string &result, int &ordinal, bool &isSave, bool &isEscape)
{

	// bien dem so chu da duoc nhap vao cho result
	cout << result;
	int count = (int)result.length();
	int x, y;
	// bien co hieu
	int nSpace = 0;

	while (true)
	{
		x = wherex() - 1;
		y = wherey() - 1;
		while (_kbhit())
		{
			int kb_hit = _getch();
			// chi nhan chu thuong hoac  chu in hoa va dau cach
			// chi nhap ho toi da 15 ky tu.
			if (((kb_hit >= 65 && kb_hit <= 90) || (kb_hit >= 97 && kb_hit <= 122) || kb_hit == SPACE)
				&& count < MAX_HO && count >= 0)
			{
				// xoa dong thong bao
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				cout << setw(42) << setfill(' ') << " ";
				gotoxy(x, y);

				if (nSpace == 1 && kb_hit == SPACE)
				{
					count++;
					cout << (char)kb_hit;
					result += (char)kb_hit;
					nSpace = 0;
				}
				else if (kb_hit != SPACE)
				{
					count++;
					kb_hit = toupper((char)kb_hit);
					cout << (char)kb_hit;
					result += (char)kb_hit;
					nSpace = 1;
				}

			}
			else if (kb_hit == 224)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_UP)
				{
					ordinal = 3;
					return;
				}
				else
				{
					ordinal = 1;
					return;
				}
			}
			else if (kb_hit == ENTER)
			{
				ordinal = 1;
				return;
			}
			else if (kb_hit == BACKSPACE && count > 0)
			{
				cout << "\b" << " " << "\b";
				count--;
				result.erase(result.length() - 1, 1);
			}
			else if (kb_hit == 0)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_F10)
				{
					isSave = true;
					return;
				}
			}
			else if (kb_hit == ESC)
			{
				isEscape = true;
				return;
			}
			else {
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << " TOI DA 16 KY TU, CHI LAY KY TU CHU !!!";
				normalBGColor();
				gotoxy(x, y);
			}
		}

	}


}



void NhapTenSach(string &result, int &ordinal, bool &isSave, bool &isEscape)
{
	ShowCur(true);
	// bien dem so chu da duoc nhap vao cho result
	cout << result;
	int count = (int)result.length();
	int x, y;
	// bien co hieu
	int nSpace = 0;

	while (true)
	{

		x = wherex() - 1;
		y = wherey() - 1;
		while (_kbhit())
		{
			int kb_hit = _getch();

			// chi nhan chu thuong hoac  chu in hoa va dau cach va so
			if (((kb_hit >= 65 && kb_hit <= 90) || (kb_hit >= 97 && kb_hit <= 122) 
			|| (kb_hit >=  48 && kb_hit <= 57) || kb_hit == SPACE) && count < MAX_TENSACH && count >= 0)
			{

				// xoa dong thong bao
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				cout << setw(42) << setfill(' ') << " ";
				gotoxy(x, y);

				if (nSpace == 1 && kb_hit == SPACE)
				{
					count++;
					cout << (char)kb_hit;
					result += (char)kb_hit;
					nSpace = 0;
				}
				else if (kb_hit != SPACE)
				{
					count++;
					kb_hit = toupper((char)kb_hit);
					cout << (char)kb_hit;
					result += (char)kb_hit;
					nSpace = 1;
				}

			}
			else if (kb_hit == 224)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_UP)
				{
					ordinal = 5;
					return;
				}
				else
				{
					ordinal = 1;
					return;
				}
			}
			else if (kb_hit == ENTER)
			{
				ordinal = 1;
				return;
			}
			else if (kb_hit == BACKSPACE && count > 0)
			{
				cout << "\b" << " " << "\b";
				count--;
				result.erase(result.length() - 1, 1);
			}
			else if (kb_hit == 0)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_F10)
				{
					isSave = true;
					return;
				}
			}
			else if (kb_hit == ESC)
			{
				isEscape = true;
				return;
			}
			else {
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << "TOI DA 24 KY TU, GOM KY TU CHU VA SO !!!";
				normalBGColor();
				gotoxy(x, y);
			}
		}
	}
}

void NhapTenTacGia(string &result, int &ordinal, bool &isSave, bool &isEscape)
{
	ShowCur(true);
	// bien dem so chu da duoc nhap vao cho result
	 cout << result;
	int count = (int)result.length();
	int x, y;
	// bien co hieu
	int nSpace = 0;

	while (true)
	{

		x = wherex() - 1;
		y = wherey() - 1;
		while (_kbhit())
		{
			int kb_hit = _getch();

			// chi nhan chu thuong hoac  chu in hoa va dau cach
			
			if (((kb_hit >= 65 && kb_hit <= 90) || (kb_hit >= 97 && kb_hit <= 122) || kb_hit == SPACE) 
				&& count < MAX_TENTG && count >= 0)
			{


				// xoa dong thong bao
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				cout << setw(42) << setfill(' ') << " ";
				gotoxy(x, y);

				if (nSpace == 1 && kb_hit == SPACE)
				{
					count++;
					cout << (char)kb_hit;
					result += (char)kb_hit;
					nSpace = 0;
				}
				else if (kb_hit != SPACE)
				{
					count++;
					kb_hit = toupper((char)kb_hit);
					cout << (char)kb_hit;
					result += (char)kb_hit;
					nSpace = 1;
				}

			}
			else if (kb_hit == 224)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_UP)
				{
					ordinal = 1;
					return;
				}
				else
				{
					ordinal = 3;
					return;
				}
			}
			else if (kb_hit == ENTER)
			{
				ordinal = 3;
				return;
			}
			else if (kb_hit == BACKSPACE && count > 0)
			{
				cout << "\b" << " " << "\b";
				count--;
				result.erase(result.length() - 1, 1);


			}
			else if (kb_hit == 0)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_F10)
				{
					isSave = true;
					return;
				}
			}
			else if (kb_hit == ESC)
			{
				isEscape = true;
				return;
			}
			else {
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << "TOI DA 17 KY TU, CHI LAY KY TU CHU !!!";
				normalBGColor();
				gotoxy(x, y);
			}
		}

	}


}

void NhapTheLoaiSach(string &result, int &ordinal, bool &isSave, bool &isEscape)
{
	ShowCur(true);
	// bien dem so chu da duoc nhap vao cho result
	cout << result;
	int count = (int)result.length();
	int x, y;
	// bien co hieu
	int nSpace = 0;

	while (true)
	{

		x = wherex() - 1;
		y = wherey() - 1;
		while (_kbhit())
		{
			int kb_hit = _getch();

			// chi nhan chu thuong hoac  chu in hoa va dau cach
			if (((kb_hit >= 65 && kb_hit <= 90) || (kb_hit >= 97 && kb_hit <= 122) || kb_hit == SPACE) 
				&& count < MAX_THELOAISACH && count >= 0)
			{


				// xoa dong thong bao
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				cout << setw(42) << setfill(' ') << " ";
				gotoxy(x, y);

				if (nSpace == 1 && kb_hit == SPACE)
				{
					count++;
					cout << (char)kb_hit;
					result += (char)kb_hit;
					nSpace = 0;
				}
				else if (kb_hit != SPACE)
				{
					count++;
					kb_hit = toupper((char)kb_hit);
					cout << (char)kb_hit;
					result += (char)kb_hit;
					nSpace = 1;
				}

			}
			else if (kb_hit == 224)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_UP)
				{
					ordinal = 2;
					return;
				}
				else
				{
					ordinal = 4;
					return;
				}
			}
			else if (kb_hit == ENTER)
			{
				ordinal = 4;
				return;
			}
			else if (kb_hit == BACKSPACE && count > 0)
			{
				cout << "\b" << " " << "\b";
				count--;
				result.erase(result.length() - 1, 1);


			}
			else if (kb_hit == 0)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_F10)
				{
					isSave = true;
					return;
				}
			}
			else if (kb_hit == ESC)
			{
				isEscape = true;
				return;
			}
			else {
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << "TOI DA 11 KY TU, CHI LAY KY TU CHU !!!";
				normalBGColor();
				gotoxy(x, y);
			}
		}

	}


}



void nhapSoTrang(uint &nTrang, int &ordinal, bool &isSave, bool &isEscape)
{
	ShowCur(true);
	// dem so chu so
	// cout << nTrang;
	uint temp = nTrang;
	int count = 0;
	int x, y;
	while (temp != 0)
	{
		count++;
		temp /= 10;
	}

	if (count)
	{
		cout << nTrang;
	}
	while (true)
	{

		x = wherex() - 1;
		y = wherey() - 1;
		while (_kbhit())
		{
			int kb_hit = _getch();
			if (kb_hit >= 48 && kb_hit <= 57 && count < 6)
			{

				// xoa dong thong bao
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				cout << setw(42) << setfill(' ') << " ";
				gotoxy(x, y);


				int f = kb_hit - 48;
				cout << f;
				nTrang = nTrang * 10 + (f);
				count++;
			}
			else if (kb_hit == 224)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_UP)
				{
					ordinal = 3;
					return;
				}
				else
				{
					ordinal = 5;
					return;
				}
			}
			else if (kb_hit == ENTER)
			{
				ordinal = 5;
				return;
			}
			else if (kb_hit == BACKSPACE && count >0)
			{
				cout << "\b" << " " << "\b";
				count--;
				nTrang /= 10;
			}
			else if (kb_hit == 0)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_F10)
				{
					isSave = true;
					return;
				}
			}
			else if (kb_hit == ESC)
			{
				isEscape = true;
				return;
			}
			else {
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << "CHI CHAP NHAN KY TU SO VA CHIEU DAI <= 6 ";
				normalBGColor();
				gotoxy(x, y);
			}
		}
	}
		

}

// nhập chữ và sô ibsm...  4 chư số.

void NhapNamXuatBan(uint &nam, int &ordinal, bool &isSave, bool &isEscape)
{

	ShowCur(true);
	// dem so chu so
	uint temp = nam;
	int count =  0;
	int x, y;
	while (temp != 0)
	{
		count++;
		temp /= 10;
	 }
	if (count)
	{
		cout << nam;
	}
	while (true)
	{
		x = wherex() - 1;
		y = wherey() - 1;
		while (_kbhit())
		{
			int kb_hit = _getch();
			if (kb_hit >= 48 && kb_hit <= 57 && count <= 3)
			{
				// xoa dong thong bao
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				cout << setw(42) << setfill(' ') << " ";
				gotoxy(x, y);


				int f = kb_hit - 48;
				cout << f;
				nam = nam * 10 + (f);
				count++;
			}
			else if (kb_hit == 224)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_UP)
				{

					ordinal = 4;
					return;
				}
				else
				{
					ordinal = 0;
					return;
				}
			}
			else if (kb_hit == ENTER)
			{
				
				ordinal = 0;
				return;
			}
			else if (kb_hit == BACKSPACE && count >0)
			{
				cout << "\b" << " " << "\b";
				count--;
				nam /= 10;
			}
			else if (kb_hit == 0)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_F10)
				{
					isSave = true;
					return;
				}
			}
			else if (kb_hit == ESC)
			{
				isEscape = true;
				return;
			}
			else {
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << "CHI CHAP NHAN KY TU SO VA CHIEU DAI <= 4"; 
				normalBGColor();
				gotoxy(x, y);
			}
		}
	}
		

}



void NhapISBN(string &result, int &ordinal, bool &isSave, bool &isEscape)
{
	ShowCur(true);
	// bien dem so chu da duoc nhap vao cho result
	cout << result;
	int count = (int)result.length();
	int x, y;
	while (true)
	{
		x = wherex() - 1;
		y = wherey() - 1;

		while (_kbhit())
		{
			int kb_hit = _getch();
			// chi nhan chu thuong hoac  chu in hoa. 
			// chi nhap ten toi da 7 ky tu, vi tu dai nhat tieng viet chi la 7.
			if (((kb_hit >= 65 && kb_hit <= 90) || (kb_hit >= 97 && kb_hit <= 122)) && count < MAX_ISBN)
			{
				count++;

				// xoa dong thong bao
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				cout << setw(42) << setfill(' ') << " ";
				gotoxy(x, y);

				// chuyen qua in hoa
				kb_hit = toupper((char)kb_hit);
				cout << (char)kb_hit;
				result += (char)kb_hit;
			}
			else if (kb_hit == 224)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_UP)
				{
					ordinal = 0;
					return;
				}
				else
				{
					ordinal = 2;
					return;
				}
			}
			else if (kb_hit == ENTER)
			{
				ordinal = 2;
				return;
			}
			else if (kb_hit == BACKSPACE && count > 0)
			{
				cout << "\b" << " " << "\b";
				count--;
				result.erase(result.length() - 1, 1);

			}
			else if (kb_hit == 0)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_F10)
				{
					isSave = true;
					return;
				}
			}
			else if (kb_hit == ESC)
			{
				isEscape = true;
				return;
			}
			else {
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << "TOI DA 4 KY TU, CHI LAY KY TU CHU !!!";
				normalBGColor();
				gotoxy(x, y);
			}


		}
	}
}

int  ChonSoSachNhap()
{
	int soluong = 3;
	gotoxy(104, 5);
	cout << soluong;

	SetBGColor(4);

	SetColor(BRIGHT_WHITE);
	gotoxy(88, 3);
	cout << "SO LUONG SACH CAN NHAP HIEN TAI  ";
	gotoxy(81, 7);

	SetColor(LIGHT_GREEN);
	cout << "<- Left arrow (-)             ";
	SetColor(LIGHT_GREEN);
	cout << "(+) Right arrow ->";
	SetBGColor(BLUE);
	gotoxy(88, 9);
	cout << "    (Press ENTER to continue)    ";
	normalBGColor();
	while (true)
	{
		while (_kbhit())
		{
			int kb_hit = _getch();
			if (kb_hit == 224)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_RIGHT)
				{
					soluong++;
					gotoxy(104, 5);
					cout << "                    ";
					SetColor(BRIGHT_WHITE);
					gotoxy(104, 5);
					cout << soluong ;
				
				}
				else if (kb_hit == KEY_LEFT)
				{

					if (soluong >= 2)
					{
						soluong--;
						gotoxy(104, 5);
						cout << "                    ";
						SetColor(BRIGHT_WHITE);
						gotoxy(104, 5);
						cout << soluong;
					}
				}
				
			}
			else if (kb_hit == ENTER)
			{
				return soluong;
			}
			else if (kb_hit == ESC)
			{
				return -1;
			}
			
		}
	}
}

void NhapTrangThaiSach(uint &result, int &ordinal, bool &isSave, bool &isEscape, int a, int b)
{
	gotoxy(a, b);
	ShowCur(true);
	int count = 0;
	
	int x = wherex() - 1, y = wherey() - 1;
	if ( result == 3)
	{
		result = 0;
		gotoxy(x, y);
		cout << result << ":  CHO MUON DUOC ";

	}
	while (true)
	{
		while (_kbhit())
		{
			int kb_hit = _getch();
			if ((kb_hit == 48 || kb_hit == 49 || kb_hit == 50) && count < 1)
			{
				count++;
				result = kb_hit - 48;
				// xoa dong thong bao
				gotoxy(a - 7, Y_NOTIFY + 2);
				cout << setw(49) << setfill(' ') << " ";
				gotoxy(x, y);
				if (result == 0)
					cout << result << ":   CHO MUON DUOC ";
				else if (result == 1)
					cout << result << ":   DA DUOC MUON  ";
				else if (result == 2)
					cout << result << ":   DA THANH LY   ";

			}
			else if (kb_hit == 224)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_UP)
				{
					ordinal = 2;
					return;
				}
				else
				{
					ordinal = 2;
					return;
				}
			}
			else if (kb_hit == ENTER)
			{ 
				ordinal = 2;
				return;
			}
			else if (kb_hit == BACKSPACE && count > 0)
			{

				gotoxy(x, y);
				result = 3;
				cout << " " << setw(17) << setfill(' ') << " ";
				count--;
				// chuyen ve vi tri ban dau.
				gotoxy(x, y);
			}
			else if (kb_hit == 0)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_F10)
				{
					isSave = true;
					return;
				}
			}
			else if (kb_hit == ESC)
			{
				isEscape = true;
				return;
			}
			else {
			
				gotoxy(a - 7, Y_NOTIFY + 2);
				SetColor(BLUE);
				cout << "BAN HAY NHAP 0, 1, 2, HOAC Backspace DE XOA !!!";
				normalBGColor();
				gotoxy(x, y);
			}

		}
	}
}



void NhapViTri(string &result, int &ordinal, bool &isSave, bool &isEscape, int a, int b)
{
	gotoxy(a, b);
	ShowCur(true);
	// bien dem so chu da duoc nhap vao cho result
	cout << result;
	int count = (int)result.length();
	int x, y;
	// bien co hieu
	int nSpace = 0;

	while (true)
	{

		x = wherex() - 1;
		y = wherey() - 1;
		while (_kbhit())
		{
			int kb_hit = _getch();

			// chi nhan chu thuong hoac  chu in hoa va dau cach, dau phay, va so.
			if (((kb_hit >= 65 && kb_hit <= 90) || (kb_hit >= 97 && kb_hit <= 122) || (kb_hit >= 48 && kb_hit <= 57 )
				|| kb_hit == SPACE || kb_hit == 44) && count < MAX_TENTG && count >= 0)
			{


				// xoa dong thong bao
				gotoxy(a - 7, Y_NOTIFY + 2);
				cout << setw(48) << setfill(' ') << " ";
				gotoxy(x, y);
				// chuan hoa khoang trong
				if (nSpace == 1 && kb_hit == SPACE)
				{
					count++;
					cout << (char)kb_hit;
					result += (char)kb_hit;
					nSpace = 0;
				}
				else if (kb_hit != SPACE)
				{
					count++;
					kb_hit = toupper((char)kb_hit);
					cout << (char)kb_hit;
					result += (char)kb_hit;
					nSpace = 1;
				}

			}
			else if (kb_hit == 224)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_UP)
				{
					ordinal = 1;
					return;
				}
				else
				{
					ordinal = 1;
					return;
				}
			}
			else if (kb_hit == ENTER)
			{
				ordinal = 1;
				return;
			}
			else if (kb_hit == BACKSPACE && count > 0)
			{
				cout << "\b" << " " << "\b";
				count--;
				result.erase(result.length() - 1, 1);


			}
			else if (kb_hit == 0)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_F10)
				{
					isSave = true;
					return;
				}
			}
			else if (kb_hit == ESC)
			{
				isEscape = true;
				return;
			}
			else {// check vi tri a ne.
				gotoxy(a - 7 , Y_NOTIFY + 2);
				SetColor(BLUE);
				cout << "TOI DA 17  KY TU, BAO GOM CHU, SO VA DAU PHAY !";
				normalBGColor();
				gotoxy(x, y);
			}
			
		}

	}


}


int NhapNgayThang(NGAY_THANG &nt, int x, int y)
{	
	ShowCur(true);
	int flag = 2;

	LayNgayGioHT(nt);
	NGAY_THANG temp;
	temp.ngay = nt.ngay;
	temp.thang = nt.thang;
	temp.nam = nt.nam;

	xuatNgayThang(nt, x, y);
	
	while (true)
	{

		while (_kbhit())
		{
			int kb_hit = _getch();
			if (kb_hit >= 48 && kb_hit <= 57 )
			{
				if (flag == 0 )
				{
					
					int f = kb_hit - 48;
					temp.ngay = temp.ngay * 10 + (f);
					if (temp.ngay > 31)
					{
						temp.ngay /= 10;
						continue;
					}
					gotoxy(x, y);
					cout << temp.ngay;
					
				}
				else if (flag == 1)
				{
					
					int f = kb_hit - 48;
					temp.thang= temp.thang * 10 + (f);
					if (temp.thang > 12)
					{
						temp.thang /= 10;
						continue;
					}
					gotoxy(x + 4, y);
					cout << temp.thang;
				}
				else if (flag == 2)
				{
					
					int f = kb_hit - 48;
					temp.nam = temp.nam * 10 + (f);
					if (temp.nam > 9999)
					{
						temp.nam /= 10;
						continue;
					}
					gotoxy(x + 8, y);
					cout << temp.nam;
				}
				
			}
			
			else if (kb_hit == ENTER)
			{
				if (flag == 0)
				{

					gotoxy(x + 4, y);
					cout << temp.thang ;
					flag = 1;
				}
				else if (flag == 1)
				{

					gotoxy(x + 8, y);
					cout << temp.nam;
					flag = 2;
				}
				else if (flag == 2)
				{

					gotoxy(x  , y);
					cout << temp.ngay;
					flag = 0;
				}
			}
			else if (kb_hit == BACKSPACE && temp.ngay > 0 && temp.thang > 0 && temp.nam > 0)
			{
				cout << "\b" << " " << "\b";
				if (flag == 0 )
				{
					temp.ngay /= 10;
				}
				
				else if (flag == 1)
				{
					temp.thang /= 10;
				}
				else if (flag == 2)
				{
					temp.nam /= 10;
				}
			}
			else if (kb_hit == 0)
			{
				kb_hit = _getch();
				if (kb_hit == KEY_F10)
				{

					flag = ngayHopLe(temp);
					if (flag == 3)
					{
						// xoa dong thong bao
						gotoxy(x - 17, y - 1);
						cout << "                                                  ";
						gotoxy(x, y);
						cout << "                      ";
						gotoxy(x + 1, y + 1);
						cout << "            ";
						gotoxy(x - 17, y - 2);
						cout << "                                                  ";

						// kiem tra truong hop dac biet
						if (KhoangCachNgay(temp) < 0)
						{
							return 1;
						}
						else
						{
							// chuyen du lieu ngay thang tam vao ngay thang chinh
							nt = temp;
							return 2;
						}		
					}
					else if (flag == 0)
					{
						gotoxy(x + 1, y + 1);
						cout << "Sai ngay!  ";
						gotoxy(x, y);
						cout << temp.ngay;
						continue;
					}
					else if (flag == 1)
					{
						gotoxy(x + 1, y + 1);
						cout << "Sai thang! ";
						gotoxy(x + 4, y);
						cout << temp.thang;
						continue;
					}
					else if (flag == 2)
					{
						gotoxy(x + 1, y + 1);
						cout << "Sai nam!   ";
						gotoxy(x + 8, y);
						cout << temp.ngay;
						continue;
					}
				
				}
			}
			else if (kb_hit == ESC)
			{

				// xoa dong thong bao
				gotoxy(x - 17, y - 1);
				cout << "                                                  ";
				gotoxy(x, y);
				cout << "                      ";
				gotoxy(x - 17, y - 2);
				cout << "                                                  ";
				return - 1;
			}
			
		}
	}
}

int  NhapMaDauSach(string &result)
{
	ShowCur(true);
	// bien dem so chu da duoc nhap vao cho result
	cout << result;
	int count = (int)result.length();
	
	while (true)
	{
	

		while (_kbhit())
		{
			int kb_hit = _getch();
			// chi nhan chu thuong hoac  chu in hoa va so
			// chi nhap ten toi da 7 ky tu, vi tu dai nhat tieng viet chi la 7.
			if (((kb_hit >= 65 && kb_hit <= 90) || (kb_hit >= 97 && kb_hit <= 122) || (kb_hit >= 48 && kb_hit <= 57)
			 || kb_hit == 44) && count <= 10 && count >= 0)
			{
				count++;
				// chuyen qua in hoa
				kb_hit = toupper((char)kb_hit);
				cout << (char)kb_hit;
				result += (char)kb_hit;
			}
			else if (kb_hit == ENTER)
			{
				return 1 ;
			}
			else if (kb_hit == BACKSPACE && count > 0)
			{
				cout << "\b" << " " << "\b";
				count--;
				result.erase(result.length() - 1, 1);

			}
			else if (kb_hit == ESC)
			{
				return  -1;
			}


		}
	}
}



int  NhapTenSachTimKiem(string &result)
{
	ShowCur(true);
	// bien dem so chu da duoc nhap vao cho result
	cout << result;
	// bien co hieu
	int nSpace = 0;
	int count = (int)result.length();

	while (true)
	{
		while (_kbhit())
		{
			int kb_hit = _getch();
			// chi nhan chu thuong hoac  chu in hoa va dau cach va so
			if (((kb_hit >= 65 && kb_hit <= 90) || (kb_hit >= 97 && kb_hit <= 122)
				|| (kb_hit >= 48 && kb_hit <= 57) || kb_hit == SPACE) && count < 35 && count >= 0)
			{
				if (nSpace == 1 && kb_hit == SPACE)
				{
					count++;
					cout << (char)kb_hit;
					result += (char)kb_hit;
					nSpace = 0;
				}
				else if (kb_hit != SPACE)
				{
					count++;
					kb_hit = toupper((char)kb_hit);
					cout << (char)kb_hit;
					result += (char)kb_hit;
					nSpace = 1;
				}

			}
			else if (kb_hit == ENTER)
			{
				return 1;
			}
			else if (kb_hit == BACKSPACE && count > 0)
			{
				cout << "\b" << " " << "\b";
				count--;
				result.erase(result.length() - 1, 1);

			}
			else if (kb_hit == ESC)
			{
				return  -1;
			}


		}
	}
}







int  NhapMaDocGia(uint &msdg)
{
	ShowCur(true);
	
	uint temp = msdg;
	int count = 0;

	while (temp != 0)
	{
		count++;
		temp /= 10;
	}

	if (count)
	{
		cout << msdg;
	}
	while (true)
	{
		while (_kbhit())
		{
			int kb_hit = _getch();
			
			if ((kb_hit >= 48 && kb_hit <= 57) 	&& ( count <= 9 && count >= 0))
			{

				int f = kb_hit - 48;
				cout << f;
				msdg = msdg * 10 + (f);
				count++;
			}
			else if (kb_hit == ENTER)
			{
				return 1;
			}
			else if (kb_hit == BACKSPACE && count > 0)
			{

				cout << "\b" << " " << "\b";
				count--;
				msdg /= 10;

			}
			else if (kb_hit == ESC)
			{
				return  -1;
			}
		}
	}
}



================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Check_Nhap.h
================================================
﻿#pragma once
#include "Marcro.h"
#include <iostream>
#include <string>
#include <iomanip>
#include <conio.h>
#include "mylib.h"
#include "Ngay_Thang.h"
using namespace std;


// loai bo khang space ' ' thua trong string.
string ChuanHoaString(string result);

// ham ho tro nhap gioi tinh va trang thai the
void Nhap(uint &result, int choice, int &ordinal, bool &isSave, bool &isEscape);

// ham ho tro nhap ten
void NhapTen(string &result, int &ordinal, bool &isSave, bool &isEscape);

// ham ho tro Nhap Ho
void NhapHo(string &result, int &ordinal, bool &isSave, bool &isEscape);

// ham ho tro Nhap Ten Sach.
void NhapTenSach(string &result, int &ordinal, bool &isSave, bool &isEscape);

// ham ho tro Nhap Ten Tac Gia
void NhapTenTacGia(string &result, int &ordinal, bool &isSave, bool &isEscape);

// ham ho tro nhap The Loai Sach
void NhapTheLoaiSach(string &result, int &ordinal, bool &isSave, bool &isEscape);

// ham ho tro nhap so trang sach
void nhapSoTrang(uint &nTrang, int &ordinal, bool &isSave, bool &isEscape);


// nhập chữ và sô ibsm...  4 chư số.

// ................... ham ho tro nhap Nam XB.............................
void NhapNamXuatBan(uint &nam, int &ordinal, bool &isSave, bool &isEscape);


// ................ ham ho tro nhap Ma Dau Sach............................
void NhapISBN(string &result, int &ordinal, bool &isSave, bool &isEscape);

//................nhap so luong sach can nhap vao ..........................
int  ChonSoSachNhap();

//ham ho tro nhap trang thai sach

void NhapTrangThaiSach(uint &result, int &ordinal, bool &isSave, bool &isEscape, int a, int b);
// ham ho tro nhap vi tri cua sach trong thu vien 
void NhapViTri(string &result, int &ordinal, bool &isSave, bool &isEscape, int a, int b);

int NhapNgayThang(NGAY_THANG &nt, int x, int y);

// ham ho tro nhap ma dau sach trong danh muc sach
int NhapMaDauSach(string &result);

// ham ho tro nhap ten sach tu ban phim de tra cuu thong tin.
int  NhapTenSachTimKiem(string &result);

// ham ho tro nhap vao ma doc gia de muon sach.
int  NhapMaDocGia(uint &msdg);




================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/DauSach.cpp
================================================
﻿#include "stdafx.h"
#include "DauSach.h"


//..........................................define dau sach....................................................
int Empty_DauSach(LIST_DAUSACH  l)
{
	return l.n == -1;
}

int Full_DauSach(LIST_DAUSACH  l)
{
	return l.n == MAX_DAUSACH;
}

string getString(string a)
{
	for (int i = 0; i < (int)a.length(); i++)
	{
		if (a[i] == ' ') {
			a.erase(i, 1);
			i--;
		}
	}
	return a;
}

int Insert_DauSach(LIST_DAUSACH &l, pDAU_SACH &pDS)
{
	if (Full_DauSach(l))
	{
		return 0;
	}
	l.ListDS[++l.n] = pDS;
	return 1;
}


void Delete_DauSach(LIST_DAUSACH &l, int pos)
{
	if (pos > l.n  || Empty_DauSach(l)  ||  l.n == 0)
	{
		return;
	}

	// xoa vi tri cuoi mang
	if (pos == l.n)
	{
		delete l.ListDS[l.n];
		// tranh tinh trang con tro bi treo...
		l.ListDS[l.n--] = NULL;
		return;
	}
	// cho này quan trọng .
	delete l.ListDS[pos];

	for (int temp = pos + 1; temp <= l.n; temp++)
	{
		l.ListDS[temp - 1] = l.ListDS[temp];
	}
	delete l.ListDS[l.n--];

	// tranh tinh trang con tro bi treo...
	l.ListDS[l.n--] = NULL;
	return;
}

// vi toi da chi 100 dau sach ne su dung tim kiem tuyen tinh
bool SearchISBN_DS(LIST_DAUSACH lDS, string ISBN)
{
	for (int i = 0; i <= lDS.n; i++)
	{
		if (lDS.ListDS[i]->info.ISBN == ISBN)
			return true;
	}
	return false;
}

pDAU_SACH SearchTen_DS(LIST_DAUSACH lDS, string tensach)
{
	pDAU_SACH temp = NULL;
	for (int i = 0; i <= lDS.n; i++)
	{
		temp = lDS.ListDS[i];
		if (temp->info.tensach == tensach)
			return temp;
	}
	return NULL;
}

//  nghiên cứu lại chỗ này...tham chiếu hay không?
void swap_DS(pDAU_SACH ds1, pDAU_SACH ds2)
{
	DAU_SACH temp = *ds1;
	*ds1 = *ds2;
	*ds2 = temp;
}

// chỗ này sửa lại dùng quicksort .... dau sach it nen dung selection sort...
void selectionSort_DS(LIST_DAUSACH &lDS)
{
	int i, j, min_idx;
	string temp1, temp2;

	// One by one move boundary of unsorted subarray
	for (i = 0; i <=  lDS.n - 1; i++)
	{
		// Find the minimum element in unsorted array
		min_idx = i;
		for (j = i + 1; j <= lDS.n; j++)
		{
			temp1 = getString(lDS.ListDS[j]->info.tensach);
			temp2 = getString(lDS.ListDS[min_idx]->info.tensach);
			if (temp1 < temp2)
				min_idx = j;
		}
			
		// Swap the found minimum element with the first element
		swap_DS(lDS.ListDS[min_idx],lDS.ListDS[i]);
	}
}

void Update_DauSach(LIST_DAUSACH &lDS, pDAU_SACH &pDS, bool isEdited)
{
	dauSach info;
	// hien con tro nhap
	ShowCur(true);
	normalBGColor();

	int nngang = (int)keyBangNhapDauSach[0].length();
	// cac flag dieu khien qua trinh cap nhat
	int ordinal = 0;
	bool isSave = false;
	bool isEscape = false;

	// cac bien luu tru tam thoi
	string tensach = "";
	string ISBN = "";
	string tacgia = "";
	string theloai = "";
	uint sotrang = 0;
	uint namSB = 0;

	CreateBox(X_NOTIFY + 7, Y_NOTIFY, "NOTI:  ", 52);
	BangNhap(79, yDisplay, nngang, keyBangNhapDauSach, 14);
	BangGuides(79, yDisplay + 20, nngang, keyGuide2, 7);

	if (isEdited)
	{
		tensach = pDS->info.tensach;
		
		ISBN = pDS->info.ISBN;
		tacgia = pDS->info.tacgia;
		theloai = pDS->info.theloai;
		sotrang = pDS->info.sotrang;
		namSB = pDS->info.namSB;

		gotoxy(80 + (nngang / 3), yDisplay + 3);
		cout << tensach;
		gotoxy(80 + (nngang / 3), yDisplay + 5);
		cout << ISBN;
		gotoxy(80 + (nngang / 3), yDisplay + 7);
		cout << tacgia;
		gotoxy(80 + (nngang / 3), yDisplay + 9);
		cout << theloai;
		gotoxy(80 + (nngang / 3), yDisplay + 11);
		cout << sotrang;
		gotoxy(80 + (nngang / 3), yDisplay + 13);
		cout << namSB;
	}

	while (true) {
		switch (ordinal)
		{
		case 0:
			gotoxy(80 + (nngang / 3), yDisplay + 3);
			NhapTenSach(tensach, ordinal, isSave, isEscape);
			break;
		case 1:
			gotoxy(80 + (nngang / 3), yDisplay + 5);
			NhapISBN(ISBN, ordinal, isSave, isEscape);
			break;
		case 2:
			gotoxy(80 + (nngang / 3), yDisplay + 7);
			NhapTenTacGia(tacgia, ordinal, isSave, isEscape);
			break;
		case 3:
			gotoxy(80 + (nngang / 3), yDisplay + 9);
			NhapTheLoaiSach(theloai, ordinal, isSave, isEscape);
			break;
		case 4:
			gotoxy(80 + (nngang / 3), yDisplay + 11);
			nhapSoTrang(sotrang, ordinal, isSave, isEscape);
			break;
		case 5:
			gotoxy(80 + (nngang / 3), yDisplay + 13);
			NhapNamXuatBan(namSB, ordinal, isSave, isEscape);
			break;
		}

		// check Save

		if (isSave)
		{
			// cap nhat lai flag
			isSave = false;

			// check rong;
			if (tensach.length() == 0)
			{
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << "CAC TRUONG DU LIEU KHONG DUOC DE TRONG !!! ";
				normalBGColor();

				// quay lai va dien vao truong du lieu do
				ordinal = 0;
				continue;
			}
			else if (ISBN.length() == 0)
			{
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << "CAC TRUONG DU LIEU KHONG DUOC DE TRONG !!! ";
				normalBGColor();

				// quay lai va dien vao truong du lieu do
				ordinal = 1;
				continue;
			}
			else if (tacgia.length() == 0)
			{
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << "CAC TRUONG DU LIEU KHONG DUOC DE TRONG !!! ";
				normalBGColor();

				// quay lai va dien vao truong du lieu do
				ordinal = 2;
				continue;
			}
			else if (theloai.length() == 0)
			{
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << "CAC TRUONG DU LIEU KHONG DUOC DE TRONG !!! ";
				normalBGColor();

				// quay lai va dien vao truong du lieu do
				ordinal = 3;
				continue;
			}
			else if (sotrang == 0)
			{
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << "CAC TRUONG DU LIEU KHONG DUOC DE TRONG !!! ";
				normalBGColor();
				// quay lai va dien vao truong du lieu do
				ordinal = 4;
				continue;
			}	
			else if (namSB == 0)
			{
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << "CAC TRUONG DU LIEU KHONG DUOC DE TRONG !!!";
				normalBGColor();
				ordinal = 5;
				continue;
			} 
			else if (namSB > (uint)LayNamHT())
			{
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << "NAM XUAT BAN KHONG LON HON NAM HIEN TAI !!!";
				normalBGColor();
				ordinal = 5;
				continue;
			}
			
			if (SearchISBN_DS(lDS, ISBN))
			{
				if (pDS->info.ISBN != ISBN)
				{
					gotoxy(X_NOTIFY + 15, Y_NOTIFY);
					SetColor(BLUE);
					cout << "ISBN VUA NHAP VAO TRUNG VOI ISBN DA CO  !!!";
					normalBGColor();

					// quay lai va dien vao truong du lieu do
					ordinal = 1;
					continue;
				}
			}

			// import data vao info
			info.tensach = ChuanHoaString(tensach);
			info.ISBN = ChuanHoaString(ISBN);
			info.tacgia = ChuanHoaString(tacgia);
			info.theloai = ChuanHoaString(theloai);
			info.sotrang = sotrang;
			info.namSB = namSB;
			
			if (isEdited)
			{
				pDS->info = info;
				normalBGColor();
				return;
			}
			else
			{
				// gan NULL cho con tro trong DS
				initList_DMS(pDS->dms);

				pDS->info = info;
				int temp = Insert_DauSach(lDS, pDS);
				if (temp == 0)
				{
					// thong bao ra.
					for (int i = 0; i < 5; i++)
					{
						SetColor(BLUE);
						gotoxy(X_NOTIFY + 15, Y_NOTIFY);
						Sleep(100);
						cout << "BO NHO DA DAY .KHONG THEM DAU SACH MOI VAO DUOC !";

					}
				}
				else {
					// In dong thong bao .
					for (int i = 0; i < 5; i++)
					{
						SetColor(BLUE);
						gotoxy(X_NOTIFY + 15, Y_NOTIFY);
						Sleep(100);
						cout << "           SUCCESSFULLY !!! ";

					}
				}
				normalBGColor();
				return;
			}
		}

        // thoat	
		if (isEscape)
		{
			return;
		}
	}
		ShowCur(false);
}

int ChooseItems_DS(LIST_DAUSACH &lDS, int &tttrang, int tongtrang)
{
	int pos = 0;
	int kb_hit;
	pos = 0;
	SetColor(LIGHT_GREEN);
	gotoxy(xDisplayDS[0] + 1, yDisplay + 3 + pos);
	cout << "<<";
	gotoxy(xDisplayDS[0] + 26, yDisplay + 3 + pos);
	cout << ">>";

	while (true)
	{
		if (_kbhit())
		{
			kb_hit = _getch();
			if (kb_hit == 224 || kb_hit == 0)
				kb_hit = _getch();

			switch (kb_hit)
			{
			case KEY_UP:
				// xoa muc truoc
				gotoxy(xDisplayDS[0] + 1, yDisplay + 3 + pos);
				cout << "  ";
				gotoxy(xDisplayDS[0] + 26, yDisplay + 3 + pos);
				cout << "  ";
				(pos > 0) ? pos-- : pos = 28;

				// to mau muc moi
				gotoxy(xDisplayDS[0] + 1, yDisplay + 3 + pos);
				cout << "<<";
				gotoxy(xDisplayDS[0] + 26, yDisplay + 3 + pos);
				cout << ">>";
				break;

			case KEY_DOWN:
				// xoa muc truoc
				gotoxy(xDisplayDS[0] + 1, yDisplay + 3 + pos);
				cout << "  ";
				gotoxy(xDisplayDS[0] + 26, yDisplay + 3 + pos);
				cout << "  ";
				(pos < 28) ? pos++ : pos = 0;

				// to mau muc moi
				gotoxy(xDisplayDS[0] + 1, yDisplay + 3 + pos);
				cout << "<<";
				gotoxy(xDisplayDS[0] + 26, yDisplay + 3 + pos);
				cout << ">>";
				break;

			case PAGE_UP:
				if (tttrang > 1)
				{
					tttrang--;
				}
				else
				{
					tttrang = tongtrang;
				}
				Xoa_OutDS_29lines();
				OutputDS_PerPage(lDS, tttrang);
				pos = 0;
				SetColor(LIGHT_GREEN);
				gotoxy(xDisplayDS[0] + 1, yDisplay + 3 + pos);
				cout << "<<";
				gotoxy(xDisplayDS[0] + 26, yDisplay + 3 + pos);
				cout << ">>";
				break;

			case PAGE_DOWN:
				if (tttrang <  tongtrang)
				{
					tttrang++;
				}
				else
				{
					tttrang = 1;
				}
				Xoa_OutDS_29lines();
				OutputDS_PerPage(lDS, tttrang);
				pos = 0;
				SetColor(LIGHT_GREEN);
				gotoxy(xDisplayDS[0] + 1, yDisplay + 3 + pos);
				cout << "<<";
				gotoxy(xDisplayDS[0] + 26, yDisplay + 3 + pos);
				cout << ">>";
				break;

			case ENTER:
				return (pos == 0 && tttrang == 1) ? pos : pos + (tttrang - 1)* NUMBER_LINES;
			}
		}
		ShowCur(false);
		SetColor(WHITE);
		gotoxy(33, 36);
		cout << "Trang " << tttrang << " / " << tongtrang;
		normalBGColor();
	}
}

void Xoa_OutDS_1line(int locate)
{
	gotoxy(xDisplayDS[0] + 1, yDisplay + 3 + locate);
	cout << setw(27) << setfill(' ') << ' ';
	gotoxy(xDisplayDS[1] + 1, yDisplay + 3 + locate);
	cout << setw(4) << setfill(' ') << ' ';
	gotoxy(xDisplayDS[2] + 1, yDisplay + 3 + locate);
	cout << setw(18) << setfill(' ') << ' ';
	gotoxy(xDisplayDS[3] + 1, yDisplay + 3 + locate);
	cout << setw(11) << setfill(' ') << ' ';
	gotoxy(xDisplayDS[4] + 1, yDisplay + 3 + locate);
	cout << setw(6) << setfill(' ') << ' ';
	gotoxy(xDisplayDS[5] + 1, yDisplay + 3 + locate);
	cout << setw(4) << setfill(' ') << ' ';
}

void Xoa_OutDS_29lines()
{
	for (int i = 0; i <NUMBER_LINES; i++)
	{
		Xoa_OutDS_1line(i);
	}
}

void Output_DS(dauSach ds)
{
	ShowCur(false);
	Xoa_OutDS_1line(locate);
	gotoxy(xDisplayDS[0] + 3, yDisplay + 3 + locate);
	cout << ds.tensach;
	gotoxy(xDisplayDS[1] + 1, yDisplay + 3 + locate);
	cout << ds.ISBN;
	gotoxy(xDisplayDS[2] + 1, yDisplay + 3 + locate);
	cout << ds.tacgia;
	gotoxy(xDisplayDS[3] + 1, yDisplay + 3 + locate);
	cout << ds.theloai;

	gotoxy(xDisplayDS[4] + 1, yDisplay + 3 + locate);
	cout << ds.sotrang;
	gotoxy(xDisplayDS[5] + 1, yDisplay + 3 + locate);
	cout << ds.namSB;
	locate++;
}

void OutputDS_PerPage(LIST_DAUSACH &lDS, int index)
{
	Xoa_OutDS_29lines();
	SetColor(WHITE);
	locate = 0;
	index--;
	if (lDS.n == -1)
		return;
	for (int i =  NUMBER_LINES * index;  i < NUMBER_LINES*( 1 + index)  && i <=  lDS.n ; i++)
	{
		Output_DS(lDS.ListDS[i]->info);
	}
}

void Output_ListDStheoTT(LIST_DAUSACH lDS)
{
	system("color 3E");
	clrscr();
	normalBGColor();
	selectionSort_DS(lDS);
	DisplayDS(keyDisplayDS, 6, xDisplayDS);
	normalBGColor();
	gotoxy(10, 1);
	cout << "BANG THONG TIN CAC DAU SACH THEO THU TU TEN SACH TANG DAN";
	int nDS = lDS.n + 1;
	int tttrang, tongtrang;
	tttrang = 1;
	tongtrang = (nDS / NUMBER_LINES) + 1;
	OutputDS_PerPage(lDS, tttrang);

	int check;
	pDAU_SACH temp;
	string tensach = "";

	int kb_hit;
	do
	{
		if (_kbhit())
		{
			kb_hit = _getch();
			if (kb_hit == 224 || kb_hit == 0)
				kb_hit = _getch();
			switch (kb_hit)
			{
			case PAGE_UP:
				(tttrang > 1) ? tttrang-- : tttrang = tongtrang;
				OutputDS_PerPage(lDS, tttrang);
				break;

			case PAGE_DOWN:
				(tttrang <  tongtrang) ? tttrang++ : tttrang = 1;
				OutputDS_PerPage(lDS, tttrang);
				break;

			case KEY_F9:
				VeHinhBangNhap(82, 3,50, "         HAY NHAP VAO TEN SACH CAN TRA CUU");
				gotoxy(92, 5);
				check = NhapTenSachTimKiem(tensach);
				// kiem tra dieu kien tra ve .....
				if (check == -1)
				{
					gotoxy(92, 10);
					cout << "BAN VUA HUY TAC VU TRA CUU !!!";
					_getch();
					return;
				}
				else if (check == 1)
				{
					temp = SearchTen_DS(lDS, tensach);
					if (temp == NULL)
					{
						gotoxy(86, 10);
						cout << "TEN SACH VUA NHAP KHONG CO TRONG THU VIEN !!!";
						_getch();
						XoaMotVung(82, 1, 35, 50);
					}
					else
					{
						SetBGColor(2);
						gotoxy(93, 8);
						cout << "THONG TIN TRA CUU DUOC !";
						gotoxy(82, 10);
						cout << setw(50) << setfill('-') << "-";
						gotoxy(82, 12);
						cout << setw(50) << setfill('-') << "-";
						gotoxy(82, 14);
						cout << setw(50) << setfill('-') << "-";
						gotoxy(82, 16);
						cout << setw(50) << setfill('-') << "-";
						gotoxy(82, 18);
						cout << setw(50) << setfill('-') << "-";
						gotoxy(82, 20);
						cout << setw(50) << setfill('-') << "-";
						gotoxy(82, 22);
						cout << setw(50) << setfill('-') << "-";
						gotoxy(82, 24);
						cout << setw(50) << setfill('-') << "-";
						normalBGColor();
						gotoxy(82, 11);
						cout << "TEN SACH: " << temp->info.tensach;
						gotoxy(82, 13);
						cout << "TAC GIA: " << temp->info.tacgia;
						gotoxy(82, 15);
						cout << "THE LOAI: " << temp->info.theloai;
						gotoxy(82, 17);
						cout << "NAM XUAT BAN: " << temp->info.namSB;
						gotoxy(82, 19);
						cout << "ISBN: " << temp->info.ISBN;
						gotoxy(82 ,21);
						cout << "TONG SO SACH CUA DAU SACH: " << temp->dms.n;
						gotoxy(82, 23); 
						cout << "SO SACH CON TRONG THU VIEN:  " << temp->dms.n - TongSoSachDuocMuon(temp->dms);
						gotoxy(82, 25);
						cout << "CAC MA SACH CON CO TRONG THU VIEN: ";

						// thuc hien in ma sach ra theo dung format.
						int i = 0, j = 0, count = 0;
						for (NODE_DMS* p = temp->dms.pHead; p != NULL; p = p->pNext)
						{
							gotoxy(82 + i, 26 + j);
							if (p->data.ttSach == 0)
							{
								cout << p->data.maSach;
								i += 10;
								count++;
								if (count == 5)
								{
									j++;
									i = 0;
									count = 0;
								}
							}
						}
						_getch();
						XoaMotVung(82, 1, 35, 50);
					}		
				}
			break;

			// thoat
			case ESC:
				return ;
			}
		}
		ShowCur(false);
		gotoxy(2, 35);
		cout << "HotKey: PgUp, PgDn, ESC,      F9  -  TIM THONG TIN SACH ";
		gotoxy(68, 35);
		cout << "Trang " << tttrang << " / " << tongtrang;
	} while (true);
}

void Menu_DauSach(LIST_DAUSACH &lDS)
{
	system("color 3E");
	clrscr();
	gotoxy(35, 1);
	cout << "~~~CAP NHAT DAU SACH~~~ ";

	// nDG la so DG hien co trong danh sach tuyen tinh
	int nDS = lDS.n + 1;
	int choose;
	pDAU_SACH pDS;

	gotoxy(3, yHotkey);
	SetColor(WHITE);
	cout << "HotKey:  ESC - Thoat, F2 - Them, F3 - Sua, F4 - Xoa, F10 - Luu, PgUP, PgDn";
	normalBGColor();

	// thu tu trang
	int tttrang, tongtrang;
	tttrang = 1;
	tongtrang = (nDS / NUMBER_LINES) + 1;

label1: 
	XoaMotVung(79, yDisplay, 30, 53);
	DisplayDS(keyDisplayDS, 6, xDisplayDS);
	OutputDS_PerPage(lDS, tttrang);
	
	int kb_hit;
	do
	{
		if (_kbhit())
		{
			kb_hit = _getch();
			if (kb_hit == 224 || kb_hit == 0)
				kb_hit = _getch();
			switch (kb_hit)
			{
			case PAGE_UP:
				(tttrang > 1) ? tttrang-- : tttrang = tongtrang;
				OutputDS_PerPage(lDS, tttrang);
				break;

			case PAGE_DOWN:
				(tttrang <  tongtrang) ? tttrang++ : tttrang = 1;
				OutputDS_PerPage(lDS, tttrang);
				break;

			case KEY_F2:
				Beep(600, 100);
				pDS = new DAU_SACH;
				if (pDS == NULL)
					goto label1;
				Update_DauSach(lDS, pDS, false);
				goto label1 ;

			case  KEY_F3:
				Beep(600, 100);
				choose = ChooseItems_DS(lDS, tttrang, tongtrang);
				if (choose > lDS.n)
					goto label1;
				Update_DauSach(lDS, lDS.ListDS[choose], true);
				goto label1;

			case KEY_F4:
				Beep(600, 100);
				choose = ChooseItems_DS(lDS, tttrang, tongtrang);
				if (choose > lDS.n)
					goto label1;

				// neu co nguoi muon thi se khong duoc phep xoa .
				if (Check_DMS(lDS.ListDS[choose]->dms.pHead))
				{
					gotoxy(79,20);
					cout << " Dau Sach da co Doc Gia muon nen khong duoc phep xoa !";
					_getch();
					gotoxy(79, 20);
					cout << "                                                      ";
					
					goto label1;
				}
				
				Delete_DauSach(lDS, choose);
				goto label1;
			
				// thoat
			case ESC:
				Beep(600, 100);
				return ;
			}
		}
		ShowCur(false);
		gotoxy(33, 36);
		cout << "Trang " << tttrang << " / " << tongtrang;

	} while (true);
}

//.......................................define danh muc sach....................................
// ..... khoi tao........
void initList_DMS(LIST_DMS& l)
{
	l.n = 0;
	l.pHead = l.pTail = NULL;
}

// kiem tra rong
bool ListDMSIsEmpty(LIST_DMS l)
{
	return l.pHead == NULL;
}

// get node
NODE_DMS* GetNode_DMS(DMS DATA)
{
	NODE_DMS *p = new NODE_DMS;
	if (p == NULL) {
		return NULL;
	}
	p->data = DATA;
	p->pNext = NULL;
	return (p);

}

void AddTailList_DMS(LIST_DMS &l, DMS data)
{
	// tao Node
	NODE_DMS *p = GetNode_DMS(data);
	if (l.pHead == NULL) {
		l.pHead = l.pTail = p;
	}
	else
	{
		l.pTail->pNext = p;
		l.pTail = p;
	}
	l.n++;
}

int position(NODE_DMS *First, string keySearch)
{
	int vitri;
	NODE_DMS * q;
	q = First;
	vitri = 1;
	if (q == NULL)
		return(-1);
	while (q != NULL && q->data.maSach != keySearch)
	{
		q = q->pNext;
		vitri++;
	}
	
	return(vitri);
}

NODE_DMS * nodepointer(NODE_DMS *First, int i)
{
	NODE_DMS * p;
	int vitri = 1;
	p = First;
	while (p != NULL && vitri < i)
	{
		p = p->pNext;
		vitri++;
	}
	return(p);
}


void Delete_first(NODE_DMS *&First)
{
	NODE_DMS *p;
	if (First == NULL)
		return;
	else
	{
		p = First;    // nut can xoa la nut dau
		First = First->pNext;
		delete p;
	}
}

void Delete_after(NODE_DMS *p)
{
	NODE_DMS * q;

	q = p-> pNext;  // q chi nut can xoa
	p->pNext = q-> pNext;
	
	delete q;
}

int Delete_batky(pDAU_SACH &pDS, string keySearch)
{
	int pos;
	pos = position(pDS->dms.pHead, keySearch);
	if (pos > pDS->dms.n   || pos == -1)
	{
		return  -1;
	}
	// truong hop xoa dau
	else if (pos == 1)
	{
		Delete_first(pDS->dms.pHead );
		pDS->dms.n--;
		return 1;
	}
	else
	{  //p chi toi nut truoc nut can xoa
		NODE_DMS  *p = nodepointer(pDS->dms.pHead , pos - 1);
		Delete_after(p);

		// truong hop xoa duoi, thi phai cap nhat lai pTail, rat quan trong cho nay.@@
		if (pos == pDS->dms.n)
		{
			pDS->dms.pTail = p;
		}
		pDS->dms.n--;
		return 1;
	}
}

bool Check_DMS(NODE_DMS* nDMS)
{
	
	for (NODE_DMS* p = nDMS; p != NULL; p = p->pNext)
	{
		// sach da co nguoi muon.
		if (p->data.ttSach == 1)
		{
			return true;
		}
	}
	return false;
}

NODE_DMS* Search_DMS1(pDAU_SACH pDS, string masach)
{
	NODE_DMS* p;
	p = pDS->dms.pHead;
	while (p != NULL && p->data.maSach != masach)
		p = p->pNext;
	return (p);
}

NODE_DMS* Search_DMS2(NODE_DMS* dms, int pos)
{
	int count = -1;

	for (NODE_DMS* temp = dms; temp != NULL; temp = temp->pNext)
	{
		count++;
		if (pos == count)
		{
			return temp;
		}
	}
	return NULL;
}

//NODE_DMS*  Middle(NODE_DMS*  start, NODE_DMS* last)
//{
//	if (start == NULL)
//		return NULL;
//
//	NODE_DMS*  slow = start;
//	NODE_DMS*  fast = start->pNext;
//
//	while (fast != last)
//	{
//		fast = fast->pNext;
//		if (fast != last  && fast != NULL)
//		{
//			slow = slow->pNext;
//			fast = fast->pNext;
//
//		}
//	}
//	return slow;
//}
//
//NODE_DMS*  BinarySearch_DMS(pDAU_SACH pDS, string masach)
//{
//	NODE_DMS *start = pDS->dms.pHead;
//	NODE_DMS *last = NULL;
//	do
//	{
//		//Find middle
//		NODE_DMS * mid = Middle(start, last);
//		// if middle is empty
//		if (mid == NULL)
//			return NULL;
//		// if value is present at middle
//		if (mid->data.maSach == masach)
//			return mid;
//		// if value is more than mid
//		else if (mid->data.maSach < masach)
//			start = mid->pNext;
//		// if value is less than mid
//		else
//			last = mid;
//	} while (last == NULL || last->pNext != start  || last != start);
//	return NULL; // value not present;
//}

int NhapSach(pDAU_SACH &pDS)
{
	DMS info;

	// hien con tro nhap
	ShowCur(true);
	normalBGColor();
	int nngang = (int)keyBangNhapDanhMucSach[0].length();
	CreateBox(40, Y_NOTIFY + 2, "NOTIFICATIONS:  ", 66);
	BangNhap(38, yDisplay + 2, nngang, keyBangNhapDanhMucSach, 8);
	BangGuides(38, yDisplay + 22, nngang, keyGuide3, 4);

	// cac flag dieu khien qua trinh cap nhat
	int ordinal = 1;
	bool isSave = false;
	bool isEscape = false;

	// cac bien luu tru tam thoi
	// ma sach = isbn + stt;   aaaa1..aaaa2....aaaa3....aaaa4
	// to_string(++pDS->dms.n)  chuyen kieu int thanh kieu nguyen.
	int stt = pDS->dms.n;
	string maSach = pDS->info.ISBN + to_string(++stt);
	
	// neu maSach co trung thi tang ma sach len.
	while (Search_DMS1(pDS, maSach) != NULL)
	{
		stt++;
		maSach = pDS->info.ISBN + to_string(stt);
	}

	uint ttSach = 3;
	string viTri = "";

	gotoxy(40 + (nngang / 3), yDisplay + 5);
	cout << maSach;

	while (true)
	{
		switch (ordinal)
		{
		case 1:
			
			NhapTrangThaiSach(ttSach, ordinal, isSave, isEscape, 40 + (nngang / 3), yDisplay + 7);
			break;
		case 2:
			
			NhapViTri(viTri, ordinal, isSave, isEscape, 40 + (nngang / 3), yDisplay + 9);
			break;
		}

		// check Save
		if (isSave)
		{
			// cap nhat lai flag
			isSave = false;

			// check rong;
			if (ttSach == 3)
			{
				gotoxy(55, Y_NOTIFY + 2);
				SetColor(BLUE);
				cout << "CAC TRUONG DU LIEU KHONG DUOC DE TRONG !!! ";
				normalBGColor();

				// quay lai va dien vao truong du lieu do
				ordinal = 1;
				continue;
			}

			if (viTri.length() == 0)
			{
				gotoxy(55, Y_NOTIFY + 2);
				SetColor(BLUE);
				cout << "CAC TRUONG DU LIEU KHONG DUOC DE TRONG !!! ";
				normalBGColor();

				// quay lai va dien vao truong du lieu do
				ordinal = 2;
				continue;
			}

			// import data vao info
			info.maSach = maSach;
			info.ttSach = ttSach;
			info.viTri = viTri;

			AddTailList_DMS(pDS->dms, info);
			return 0;
		}
		if (isEscape)
		{
			return -1;
		}
	}
}

int SuaDanhMucSach(pDAU_SACH &pDS, NODE_DMS* dms)
{
	DMS info;
	// kiem tra dieu kien.
	if (dms->data.ttSach == 1)
		return 2;

	// hien con tro nhap
	ShowCur(true);
	normalBGColor();

	int nngang = (int)keyBangNhapDanhMucSach[0].length();

	CreateBox(67, Y_NOTIFY + 2, "NOTIFICATIONS:  ", 66);
	BangNhap(65, yDisplay + 6, nngang, keyBangNhapDanhMucSach, 8);
	BangGuides(65, yDisplay + 22, nngang, keyGuide3, 4);

	// cac flag dieu khien qua trinh cap nhat
	int ordinal = 1;
	bool isSave = false;
	bool isEscape = false;

	string maSach = dms->data.maSach;
	
	uint ttSach = dms->data.ttSach ;
	string viTri = dms->data.viTri;

	gotoxy(67 + (nngang / 3), yDisplay + 9);
	cout << maSach;
	
	gotoxy(89, yDisplay + 11);
	if (ttSach == 0)
		cout << ttSach << ":   CHO MUON DUOC  ";
	else if (ttSach == 1)
		cout << ttSach << ":   DA DUOC MUON   ";
	else if (ttSach == 2)
		cout << ttSach << ":   DA THANH LY    ";

	gotoxy(89, yDisplay + 13);
	cout << viTri;
	while (true)
	{
		switch (ordinal)
		{
		case 1:
			
			NhapTrangThaiSach(ttSach, ordinal, isSave, isEscape, 89,  yDisplay + 11);
			break;
		case 2:
			
			NhapViTri(viTri, ordinal, isSave, isEscape, 89, yDisplay + 13);
			break;
		}

		// check Save
		if (isSave)
		{
			// cap nhat lai flag
			isSave = false;

			// check rong;
			if (ttSach == 3)
			{
				gotoxy(67, Y_NOTIFY + 2);
				SetColor(BLUE);
				cout << "CAC TRUONG DU LIEU KHONG DUOC DE TRONG !!! ";
				normalBGColor();

				// quay lai va dien vao truong du lieu do
				ordinal = 1;
				continue;
			}

			if (viTri.length() == 0)
			{
				gotoxy(67, Y_NOTIFY + 2);
				SetColor(BLUE);
				cout << "CAC TRUONG DU LIEU KHONG DUOC DE TRONG !!! ";
				normalBGColor();

				// quay lai va dien vao truong du lieu do
				ordinal = 2;
				continue;
			}

			// import data vao info
			info.maSach = maSach;
			info.ttSach = ttSach;
			info.viTri = viTri;

			dms->data = info;
			return 1;
		}
		if (isEscape)
		{
			return -1;
		}
	}

}

void Xoa_OutDMS_1line(int locate)
{
	gotoxy(xDisplayDMS[0] + 1, yDisplay + 3 + locate);
	cout << setw(11) << setfill(' ') << ' ';
	gotoxy(xDisplayDMS[1] + 1, yDisplay + 3 + locate);
	cout << setw(13) << setfill(' ') << ' ';
	gotoxy(xDisplayDMS[2] + 1, yDisplay + 3 + locate);
	cout << setw(34) << setfill(' ') << ' ';
	
}

void Xoa_OutDMS_29lines()
{
	for (int i = 0; i <NUMBER_LINES; i++)
	{
		Xoa_OutDMS_1line(i);
	}
}

int ChooseItems(LIST_DAUSACH &lDS, int &tttrang, int tongtrang)
{
	int pos = 0;
	int kb_hit;
	pos = 0;
	SetColor(LIGHT_GREEN);
	gotoxy(xDisplayDS[0] + 1, yDisplay + 3 + pos);
	cout << "<<";
	gotoxy(xDisplayDS[0] + 26, yDisplay + 3 + pos);
	cout << ">>";

	while (true)
	{
		// mau me, hoa la he...
		gotoxy(20, 1);
		cout << "~~~";
		gotoxy(20, 1);
		Sleep(50);
		cout << "   ";
		gotoxy(62, 1);
		cout << "~~~";
		gotoxy(62, 1);
		Sleep(50);
		cout << "   ";

		if (_kbhit())
		{
			kb_hit = _getch();
			if (kb_hit == 224 || kb_hit == 0)
				kb_hit = _getch();

			switch (kb_hit)
			{
			case KEY_UP:
				// xoa muc truoc
				gotoxy(xDisplayDS[0] + 1, yDisplay + 3 + pos);
				cout << "  ";
				gotoxy(xDisplayDS[0] + 26, yDisplay + 3 + pos);
				cout << "  ";
				(pos > 0) ? pos-- : pos = 28;

				// to mau muc moi
				gotoxy(xDisplayDS[0] + 1, yDisplay + 3 + pos);
				cout << "<<";
				gotoxy(xDisplayDS[0] + 26, yDisplay + 3 + pos);
				cout << ">>";
				break;

			case KEY_DOWN:


				// xoa muc truoc
				gotoxy(xDisplayDS[0] + 1, yDisplay + 3 + pos);
				cout << "  ";
				gotoxy(xDisplayDS[0] + 26, yDisplay + 3 + pos);
				cout << "  ";
				(pos < 28) ? pos++ : pos = 0;

				// to mau muc moi
				gotoxy(xDisplayDS[0] + 1, yDisplay + 3 + pos);
				cout << "<<";
				gotoxy(xDisplayDS[0] + 26, yDisplay + 3 + pos);
				cout << ">>";
				break;

			case PAGE_UP:
				if (tttrang > 1)
				{
					tttrang--;
				}
				else
				{
					tttrang = tongtrang;
				}
				OutputDS_PerPage(lDS, tttrang);
				// hight light dong dau.
				pos = 0;
				SetColor(LIGHT_GREEN);
				gotoxy(xDisplayDS[0] + 1, yDisplay + 3 + pos);
				cout << "<<";
				gotoxy(xDisplayDS[0] + 26, yDisplay + 3 + pos);
				cout << ">>";
				break;

			case PAGE_DOWN:
				if (tttrang <  tongtrang)
				{
					tttrang++;
				}
				else
				{
					tttrang = 1;

				}
				OutputDS_PerPage(lDS, tttrang);

				// high light dong dau.
				pos = 0;
				SetColor(LIGHT_GREEN);
				gotoxy(xDisplayDS[0] + 1, yDisplay + 3 + pos);
				cout << "<<";
				gotoxy(xDisplayDS[0] + 26, yDisplay + 3 + pos);
				cout << ">>";
				break;

			case ENTER:
				return (pos == 0 && tttrang == 1) ? pos : pos + (tttrang - 1)* NUMBER_LINES;

			case ESC:
				return -1;
			}
		}
		ShowCur(false);
		gotoxy(33, 35);
		cout << "Trang " << tttrang << " / " << tongtrang;
	}

}

int ChooseItems1(pDAU_SACH &pDS, int &tttrang, int tongtrang)
{
	int pos = 0;
	int kb_hit;
	pos = 0;
	SetColor(LIGHT_GREEN);
	gotoxy(xDisplayDMS[0] + 1, yDisplay + 3 + pos);
	cout << "<<";
	gotoxy(xDisplayDMS[0] + 10, yDisplay + 3 + pos);
	cout << ">>";

	while (true)
	{
		// mau me, hoa la he...

		gotoxy(12, 1);
		cout << "~~~";
		gotoxy(12, 1);
		Sleep(50);
		cout << "   ";
		gotoxy(54, 1);
		cout << "~~~";
		gotoxy(54, 1);
		Sleep(50);
		cout << "   ";

		if (_kbhit())
		{
			kb_hit = _getch();
			if (kb_hit == 224 || kb_hit == 0)
				kb_hit = _getch();

			switch (kb_hit)
			{
			case KEY_UP:
				// xoa muc truoc
				gotoxy(xDisplayDMS[0] + 1, yDisplay + 3 + pos);
				cout << "  ";
				gotoxy(xDisplayDMS[0] + 10, yDisplay + 3 + pos);
				cout << "  ";
				(pos > 0) ? pos-- : pos = 28;

				// to mau muc moi
				gotoxy(xDisplayDMS[0] + 1, yDisplay + 3 + pos);
				cout << "<<";
				gotoxy(xDisplayDMS[0] + 10, yDisplay + 3 + pos);
				cout << ">>";
				break;

			case KEY_DOWN:

				// xoa muc truoc
				gotoxy(xDisplayDMS[0] + 1, yDisplay + 3 + pos);
				cout << "  ";
				gotoxy(xDisplayDMS[0] + 10, yDisplay + 3 + pos);
				cout << "  ";
				(pos < 28) ? pos++ : pos = 0;

				// to mau muc moi
				gotoxy(xDisplayDMS[0] + 1, yDisplay + 3 + pos);
				cout << "<<";
				gotoxy(xDisplayDMS[0] + 10, yDisplay + 3 + pos);
				cout << ">>";
				break;

			case PAGE_UP:
				if (tttrang > 1)
				{
					tttrang--;
				}
				else
				{
					tttrang = tongtrang;
				}
				Xoa_OutDMS_29lines();
				OutputDMS_PerPage(pDS, tttrang);

				pos = 0;
				SetColor(LIGHT_GREEN);
				gotoxy(xDisplayDMS[0] + 1, yDisplay + 3 + pos);
				cout << "<<";
				gotoxy(xDisplayDMS[0] + 10, yDisplay + 3 + pos);
				cout << ">>";
				break;

			case PAGE_DOWN:
				if (tttrang <  tongtrang)
				{
					tttrang++;
				}
				else
				{
					tttrang = 1;
				}
				Xoa_OutDMS_29lines();
				OutputDMS_PerPage(pDS, tttrang);
				pos = 0;
				SetColor(LIGHT_GREEN);
				gotoxy(xDisplayDMS[0] + 1, yDisplay + 3 + pos);
				cout << "<<";
				gotoxy(xDisplayDMS[0] + 10, yDisplay + 3 + pos);
				cout << ">>";
				break;

			case ENTER:
				return (pos == 0 && tttrang == 1) ? pos : pos + (tttrang - 1)* NUMBER_LINES;

			case ESC:
				return -1;
			}
		}
		ShowCur(false);
		gotoxy(33, 35);
		cout << "Trang " << tttrang << " / " << tongtrang;
	}
}

void Output_DMS(DMS dms)
{
	Xoa_OutDMS_1line(locate);
	gotoxy(xDisplayDMS[0] + 3, yDisplay + 3 + locate);
	cout << dms.maSach;
	gotoxy(xDisplayDMS[1] + 1, yDisplay + 3 + locate);
	if (dms.ttSach == 0)
	{
		cout << "Cho Muon Duoc";
	}
	else if (dms.ttSach == 1)
	{
		cout << "Da Cho Muon";
	}
	else if (dms.ttSach == 2)
	{
		cout << "Da Thanh Ly";
	}
	gotoxy(xDisplayDMS[2] + 10, yDisplay + 3 + locate);
	cout << dms.viTri;
	locate++;
}

void OutputDMS_PerPage(pDAU_SACH pDS, int index)
{
	Xoa_OutDMS_29lines();
	locate = 0;
	if (pDS->dms.pHead == NULL && pDS->dms.pTail == NULL)
		return;
	index--;
	index *= NUMBER_LINES;
	int count = 0;
	NODE_DMS * temp = NULL;
	for ( temp = pDS->dms.pHead ; temp != NULL  && count < index ; temp = temp->pNext)
	{
		count++;
	}
	for (int i = 0; i < NUMBER_LINES && temp != NULL; i++)
	{
		Output_DMS(temp->data);
		temp = temp->pNext;
	}
	return;
}

void Output_ListDMS(pDAU_SACH &pDS)
{
	// thu tu trang
	clrscr();
	int check1;
	int check2;
	int check3;
	int tttrang, tongtrang;
	tttrang = 1;
	tongtrang = ((pDS->dms.n + 1 ) / NUMBER_LINES) + 1;
	NODE_DMS* temp = NULL, *temp1 = NULL;
	gotoxy(8, 1);
	cout << " BANG DANH MUC SACH CUA DAU SACH : " << pDS->info.tensach;

	label:
	DisplayDMS(keyDisplayDMS, 3, xDisplayDMS);
	OutputDMS_PerPage(pDS, tttrang);
	string keySearch = "";

	int kb_hit;
	do
	{
		XoaMotVung(65,2,  30, 67);
		if (_kbhit())
		{
			kb_hit = _getch();
			if (kb_hit == 224 || kb_hit == 0)
				kb_hit = _getch();
			switch (kb_hit)
			{
			case PAGE_UP:
				(tttrang > 1) ? tttrang-- : tttrang = tongtrang;
				OutputDMS_PerPage(pDS, tttrang);
				break;

			case PAGE_DOWN:
				(tttrang <  tongtrang) ? tttrang++ : tttrang = 1;
				OutputDMS_PerPage(pDS, tttrang);
				break;
			
			case  KEY_F3:
				Beep(600, 100);
				VeHinhBangNhap(82, 3, 38, " HAY NHAP VAO MA SACH CAN HIEU CHINH");
				gotoxy(96, 5);
				check1 = NhapMaDauSach(keySearch);

				// kiem tra dieu kien tra ve .....
				if (check1 == -1)
				{
					gotoxy(84, Y_NOTIFY + 12);
					cout << "BAN VUA HUY TAC VU HIEU CHINH !!!";
					_getch();
				}
				else if (check1 == 1)
				{
					temp = Search_DMS1(pDS, keySearch);
					if (temp == NULL)
					{
						gotoxy(77, Y_NOTIFY + 12);
						cout << "BAN VUA NHAP MA SACH " << "'" << keySearch << "'" << " KHONG CO TRONG DU LIEU";
						_getch();
					}
					else
					{
						check3 = SuaDanhMucSach(pDS, temp);

						// kiem tra cac truong hop.
						if (check3 == 1)
						{
							gotoxy(73, Y_NOTIFY + 12);
							cout << "BAN VUA HIEU CHINH THONG TIN SACH CO MA SACH LA: " << keySearch;
							_getch();
						}
						else if (check3 == 2)
						{
							gotoxy(73, Y_NOTIFY + 12);
							cout << "Sach da co Doc Gia muon nen khong duoc phep hieu chinh !";
							_getch();
							gotoxy(73, Y_NOTIFY + 12);
							cout << "                                                        ";
						}
						else
						{
							gotoxy(82, Y_NOTIFY + 12);
							cout << "BAN VUA HUY TAC VU HIEU CHINH !!!";
							_getch();
						}
					}
				}
				
				goto label;

			case KEY_F4:

				Beep(600, 100);
				VeHinhBangNhap(82, 3, 35,  "     HAY NHAP VAO MA SACH DE XOA   ");
				gotoxy(96, 5);
				check1 = NhapMaDauSach(keySearch);

				// kiem tra dieu kien tra ve .....
				if (check1 == -1)
				{
					gotoxy(88, 10);
					cout << "BAN VUA HUY TAC VU XOA !!!";
					_getch();
				}
				else if (check1 == 1)
				{
					temp1 = Search_DMS1(pDS, keySearch);
					// da co doc gia muon.
					if (temp1->data.ttSach == 1)
					{
						gotoxy(78, 20);
						cout << "Sach da co Doc Gia muon nen khong duoc phep xoa !";
						_getch();
						gotoxy(78, 20);
						cout << "                                                      ";
					}
					else
					{
						check2 = Delete_batky(pDS, keySearch);
						if (check2 == -1)
						{
							gotoxy(75, 10);
							cout << "BAN VUA NHAP MA SACH " << "'" << keySearch << "'" << " KHONG CO TRONG DU LIEU";
							_getch();
						}
						else if (check2 == 1)
						{
							gotoxy(82, 10);
							cout << "BAN VUA XOA SACH CO MA SACH LA: " << keySearch;
							_getch();
						}
					}
				}
				goto label;
				
			case ESC:
				Beep(600, 100);
				return;
			}
		}
		ShowCur(false);
		gotoxy(3, 35);
		cout << "HotKey:  F3 - Hieu chinh , F4 - Xoa , ESC - Thoat";
		gotoxy(54, 35);
		cout << "Trang " << tttrang << " / " << tongtrang;

	} while (true);
}

void NhapDanhMucSach(pDAU_SACH &pDS, int sosach)
{
	clrscr();
	system("color 3E");;
	int check1 = 0 ;
	gotoxy(39, 2);
	cout << "BAN DANG NHAP THONG TIN VAO DANH MUC SACH CUA DAU SACH : " << pDS->info.tensach;
	gotoxy(60, 16);
	cout << "SO SACH CAN NHAP: " << sosach << endl;
	gotoxy(51, 17);
	cout << " ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~";
	gotoxy(52, 31);
	cout << " HotKey:   F10 - Luu ,  ESC - Thoat ";

	// nhap sach theo so sach da cho truoc
	for (int i = 0; i < sosach && check1 != -1; i++)
	{
		// nhap sach
		check1 = NhapSach(pDS);

		XoaMotVung(38, yDisplay + 2, 10, (int)keyBangNhapDanhMucSach[0].length());

		gotoxy(60, 18);
		cout << "SO SACH DA NHAP : " << i + 1;		
	}

	Output_ListDMS(pDS);
}

void Menu_DMS(LIST_DAUSACH &lDS)
{
	system("color 3E");
	int choose;
	int nDS = lDS.n + 1;
	int tttrang, tongtrang;
	tttrang = 1;
	tongtrang = (nDS / NUMBER_LINES) + 1;
	int temp = 1;

	do
	{
		clrscr();

		// hien thi bang chua thong tin dau sach
		DisplayDS(keyDisplayDS, 6, xDisplayDS);
		OutputDS_PerPage(lDS, tttrang);

		gotoxy(23, 1);
		SetBGColor(GREEN);
		cout << "CHON DAU SACH DE CAP NHAT DANH MUC SACH";
		normalBGColor();

		// chon dau sach muon nhap sach vao
		choose = ChooseItems(lDS, tttrang, tongtrang);

		// check cac truong hop ...
		if (choose == -1)
		{
			return ;
		}
		else if (choose > lDS.n)
		{

			// xem thử chỗ đầu sách có quay lại ngay cái trang hầu nảy luôn kko
			gotoxy( 2 , yDisplay + 3 + choose % NUMBER_LINES);
			cout << setw(27) << setfill(' ') << ' ';
			continue;
		}
		
		if (lDS.ListDS[choose]->dms.pHead != NULL   && lDS.ListDS[choose]->dms.n == - 1)
		{
			continue;
		}

		// chon so sach nhap
		int sosach = ChonSoSachNhap();
		if (sosach == -1)
		{
			XoaMotVung(81, 3, 20, 50);
			continue ;
		}
		else
		{
			// bat dau nhap thong tin sach
			NhapDanhMucSach(lDS.ListDS[choose], sosach);
		}
	} while (true);
}

int TongSoSachDuocMuon(LIST_DMS dms)
{
	int dem = 0;
	NODE_DMS *temp = NULL;
	for (temp = dms.pHead; temp != NULL; temp = temp->pNext)
	{
		//  tinh ca sach da muon va da muon nhung lam mat.
		if (temp->data.ttSach == 1   ||  temp->data.ttSach == 2)
		{
			dem++;
		}
	}
	return dem;
}

void Sort_Top10(TopSach *top10, int q, int r)
{
	TopSach temp;
	int i = q;
	int j = r;
	//Lấy phần tử giữa của dãy cần sắp thứ tự làm chốt
	int x = top10[(q + r) / 2].sosachmuon;

	do
	{  // Phân đoạn dãy con a[q],..., a[r]
		while (top10[i].sosachmuon > x)
			i++; //Tìm phần tử đầu tiên có trị nhỏ hơn hay bằng x 
		while (top10[j].sosachmuon < x)
			j--; //Tìm phần tử đầu tiên có trị lớn hơn hay bằng x

		if (i <= j)   // Hoan vi
		{
			temp = top10[i];
			top10[i] = top10[j];
			top10[j] = temp;
			i++;
			j--;
		}
	} while (i <= j);

	if (q<j) 	// phần thứ nhất có từ 2 phần tử trở lên
		Sort_Top10(top10, q, j);
	if (i < r)   	// phần thứ ba có từ 2 phần tử trở lên
		Sort_Top10(top10, i, r);
}

void Top10Sach(LIST_DAUSACH lDS)
{
	system("color 3E");
	clrscr();
	int count = 0;
	TopSach *top10 = new TopSach[lDS.n + 1];

	// nhap thong tin vao mang.
	for (int i = 0; i <= lDS.n; i++)
	{
		top10[i].tensach = lDS.ListDS[i]->info.tensach;
		top10[i].sosachmuon = TongSoSachDuocMuon(lDS.ListDS[i]->dms);
	}

	Sort_Top10(top10, 0, lDS.n);
	// in thong tin ra  console
	gotoxy(50, 2);
	SetBGColor(GREEN);
	cout << "TOP 10 DAU SACH CO SO LUOC MUON NHIEU NHAT ";
	normalBGColor();
	int j = 0;
	while (top10[j].sosachmuon != 0 && j < 10   ||  top10[j].sosachmuon == top10[j + 1].sosachmuon  && top10[j].sosachmuon != 0)
	{
		SetColor(WHITE);
		gotoxy(xDisplayTop10[1] + 3, yDisplayTop10 + 2 + j);
		cout << top10[j].tensach;
		gotoxy(xDisplayTop10[2] + 16, yDisplayTop10 + 2 + j);
		cout << top10[j].sosachmuon;
		gotoxy(xDisplayTop10[0] + 7, yDisplayTop10 + 2 + j);
		j++;
		cout << j;
		
	}

	DisplayTop10(keyDisplayTop10, 3, xDisplayTop10, j + 2);
	_getch();
	// xoa vung nho....
	delete[] top10;
}



================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/DauSach.h
================================================
﻿#pragma once
#include "mylib.h"
#include "Ve_Hinh.h"
#include "Check_Nhap.h"
#include "GlobalVariable.h"
#include "Ngay_Thang.h"
#include "Marcro.h"




//............................. danh muc sach................................
struct DanhMucSach
{
	string maSach;
	uint ttSach ;
	string viTri;
};
typedef struct DanhMucSach DMS;

struct NodeDMS
{
	DMS data;
	struct NodeDMS* pNext;
};
typedef struct NodeDMS NODE_DMS;

struct ListDMS
{
	int n = -1;
	NODE_DMS *pHead, *pTail;
};
typedef struct ListDMS LIST_DMS;



//....................dau sach..................................
struct dausach
{
	string tensach;
	string ISBN;
	string tacgia;
	string theloai;
	uint sotrang;
	uint namSB;

};
typedef struct dausach dauSach;

struct DauSach
{
	dauSach info;
	LIST_DMS dms;

};
typedef struct DauSach DAU_SACH;
typedef struct DauSach*  pDAU_SACH;

struct ListDauSach
{
	// n + 1 = so phan tu , n = chi so index.
	int n = -1;
	// mang con tro dung cap phat dong, vung nho heap
	//pDAU_SACH *ListDS = new pDAU_SACH[MAX_DAUSACH];

	// vi so luong dau sach chi co 100 nen dung mang cap phat tinh luon, vung nho stack.
	pDAU_SACH ListDS[MAX_DAUSACH];
};
typedef struct ListDauSach LIST_DAUSACH;
// typedef struct ListDauSach* pLIST_DAUSACH;


// tao ra kieu truct TopSach de xu ly in ra 10 sach co luoc muon nhieu nhat.
struct  TopSach
{
	string tensach;
	int sosachmuon;
};


//............................................protocol Dau Sach..............................................
// Phep toan Empty
int Empty_DauSach(LIST_DAUSACH  l);

//Phep toan Full: 
int Full_DauSach(LIST_DAUSACH  l);

//..................... loai bo khoang trang.........................
string getString(string a);

// Them mot phan tu vao trong danh sach
int Insert_DauSach(LIST_DAUSACH &l, pDAU_SACH &pDS);

void Delete_DauSach(LIST_DAUSACH &l, int pos);

bool SearchISBN_DS(LIST_DAUSACH lDS, string ISBN);

// tim kiem thong tin dau sach the ten dau sach, co tra ve con co chi nut tim thay, khong tra vê NULL
pDAU_SACH SearchTen_DS(LIST_DAUSACH lDS, string tensach);

void swap_DS(pDAU_SACH ds1, pDAU_SACH ds2);

// .................. vi dau sach toi da 100 phan tu nen su dung selection sort ...........................
void selectionSort_DS(LIST_DAUSACH &lDS);

// ............... ham ho tro cap nhat doc gia...................................
void Update_DauSach(LIST_DAUSACH &lDS, pDAU_SACH &pDS, bool isEdited = false);

int ChooseItems_DS(LIST_DAUSACH &lDS, int &tttrang, int tongtrang);

void Xoa_OutDS_1line(int locate);

void Xoa_OutDS_29lines();

void Output_DS(dauSach ds);

void OutputDS_PerPage(LIST_DAUSACH &lDS, int index);

void Output_ListDStheoTT(LIST_DAUSACH lDS);

//..................quan ly menu dau sach.........................................
void Menu_DauSach(LIST_DAUSACH &lDS);

// ..........................protocol danh muc sach...........................................
// ..... khoi tao........
void initList_DMS(LIST_DMS& l);

// kiem tra rong
bool ListDMSIsEmpty(LIST_DMS l);

// get node
NODE_DMS* GetNode_DMS(DMS DATA);

void AddTailList_DMS(LIST_DMS &l, DMS data);

// xac dinh vi tri cua nut co gia tri ma sach bang keySearch trong danh sach lien ket
int position(NODE_DMS *First, string keySearch);

// xac dinh con tro cua nut thu i trong danh sach lien ket
NODE_DMS * nodepointer(NODE_DMS *First, int i);

// Phep toan Delete_first: xoa nut o dau danh sach lien ket
void Delete_first(NODE_DMS *&First);

// xoa nut sau nut p
void Delete_after(NODE_DMS *p);

// xoa 1 node bat ky trong danh sach lien ket.
int Delete_batky(pDAU_SACH &pDS, string keySearch);

// ham kiem tra sach co ai muon hay chua, co thi tra ve true, ko thì false.
bool Check_DMS(NODE_DMS* nDMS);

// tim kiem theo pp tim kiem tuyen tinh, ko thay tra ve NULL, neu thay tra ve con co chi nut tim thay
NODE_DMS*   Search_DMS1(pDAU_SACH pDS, string masach);

NODE_DMS*  Search_DMS2(NODE_DMS* dms, int pos);

int NhapSach(pDAU_SACH &pDS);

int SuaDanhMucSach(pDAU_SACH &pDS, NODE_DMS* dms);

void Xoa_OutDMS_1line(int locate);

void Xoa_OutDMS_29lines();

int ChooseItems(LIST_DAUSACH &lDS, int &tttrang, int tongtrang);

int ChooseItems1(pDAU_SACH &pDS, int &tttrang, int tongtrang);

void Output_DMS(DMS dms);

void OutputDMS_PerPage(pDAU_SACH pDS, int index);

void Output_ListDMS(pDAU_SACH &pDS);

void NhapDanhMucSach(pDAU_SACH &pDS, int sosach);

//..................quan ly menu danh muc sach...................
void Menu_DMS(LIST_DAUSACH &lDS);

// tong so sach duoc muon cua mot dau sach.
int TongSoSachDuocMuon(LIST_DMS dms);

// xu ly thao tac in ra 10 sach co luoc muon nhieu nhat.
void Sort_Top10(TopSach *top10, int q, int r);

void Top10Sach(LIST_DAUSACH lDS);



================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/DauSach.txt
================================================
38
BICH HUYET KIEM
IIII
KIM DUNG
VO HIEP
143343
1955
9
IIII1
1
HANG 2, NGAN 1
IIII2
1
HANG 2, NGAN 2
IIII3
1
HANG 2, NGAN 3
IIII4
0
HANG 2, NGAN 4
IIII5
0
HANG 2, NGAN 5
IIII6
0
HANG 2, NGAN 6
IIII7
0
HANG 2, NGAN 7
IIII8
0
HANG 2, NGAN 8
IIII9
0
HANG 2, NGAN 9
BO GIA
WSSW
MARIO PUZO
TIEU THUYET
5641
2008
6
WSSW1
0
HANG 36, NGAN 1
WSSW2
0
HANG 36, NGAN 2
WSSW3
0
HANG 36, NGAN 3
WSSW4
0
HANG 36, NGAN 4
WSSW5
0
HANG 36, NGAN 5
WSSW6
0
HANG 36, NGAN 6
CHUYEN GIA BAT MA
EEEE
CHAU TINH RI
HAI BUA
32422
1995
9
EEEE1
1
HANG 4, NGAN 1
EEEE2
1
HANG 4, NGAN 1
EEEE3
1
HANG 4, NGAN 1
EEEE4
0
HANG 4, NGAN 4
EEEE5
1
HANG 4, NGAN 5
EEEE6
0
HANG 4, NGAN 6
EEEE7
0
HANG 4, NGAN 7
EEEE8
0
HANG 4, NGAN 8
EEEE9
0
HANG 4, NGAN 9
DAC NHAN TAM
CCCC
DALE CAMEGIE
SELF HELP
300
1968
9
CCCC1
1
HANG 3, NGAN 1
CCCC2
0
HANG 3, NGAN 2
CCCC3
0
HANG 3, NGAN 3
CCCC4
0
HANG 3, NGAN 4
CCCC5
0
HANG 3, NGAN 5
CCCC6
0
HANG 3, NGAN 6
CCCC7
0
HANG 3, NGAN 7
CCCC8
0
HANG 3, NGAN 8
CCCC9
0
HANG 3, NGAN 9
DOI BONG THIEU LAM
PPPP
CHAU TINH TRI
HAI BUA
234234
2001
6
PPPP1
0
HANG 5, NGAN 1
PPPP2
0
HANG 5, NGAN 2
PPPP3
0
HANG 5, NGAN 3
PPPP4
0
HANG 5, NGAN 4
PPPP5
0
HANG 5, NGAN 5
PPPP6
0
HANG 5, NGAN 6
HOANG TU BANH TRUNG
QQQQ
CHAU TINH TRI
HAI BUA
343434
1998
6
QQQQ1
1
HANG 6, NGAN 1
QQQQ2
1
HANG 6, NGAN 2
QQQQ3
1
HANG 6, NGAN 3
QQQQ4
0
HANG 6, NGAN 4
QQQQ5
0
HANG 6, NGAN 5
QQQQ6
0
HANG 6, NGAN 6
HONG LAU MONG
JJJJ
KIM DUNG
VO HIEP
54665
1910
6
JJJJ1
1
HANG 7, NGAN 1
JJJJ2
1
HANG 7, NGAN 2
JJJJ3
1
HANG 7, NGAN 3
JJJJ4
0
HANG 7,NGAN 4
JJJJ5
0
HANG 7, NGAN 5
JJJJ6
0
HANG 7, NGAN 6
INFINITY WAR
DSFF
MARVEL COMICS
MARVEL
343
2018
9
DSFF1
0
HANG 8, NGAN 1
DSFF2
1
HANG 8, NGAN 2
DSFF3
0
HANG 8, NGAN 3
DSFF4
1
HANG 8, NGAN 4
DSFF5
0
HANG 8, NGAN 5
DSFF6
0
HANG 8, NGAN 6
DSFF7
0
HANG 8, NGAN 7
DSFF8
0
HANG 8,, NGAN 8
DSFF9
0
HANG 8, NGAN 9
KINH VAN HOA
SSSS
NGUYEN NHAT ANH
HOC DUONG
23423
2007
12
SSSS1
1
HANG 9, NGAN 1
SSSS2
0
HANG 9, NGAN 2
SSSS3
0
HANG 9, NGAN 3
SSSS4
1
HANG 9, NGAN 4
SSSS5
0
HANG 9, NGAN 5
SSSS6
0
HANG 9, NGAN 6
SSSS7
0
HANG 9, NGAN 7
SSSS8
0
HANG 9, NGAN 8
SSSS9
0
HANG 9, NGAN 9
SSSS10
0
HANG 10, NGAN 10
SSSS11
0
HANG 10, NGAN 11
SSSS12
0
HANG 10, NGAN 12
LAO HAC
ASDF
NAM CAO
VAN HOC
134
1945
6
ASDF1
0
HANG 10, NGAN 1
ASDF2
1
HANG 10, NGAN 2
ASDF3
1
HANG 10, NGAN 3
ASDF4
0
HANG 10, NGAN 4
ASDF5
0
HANG 10, NGAN 5
ASDF6
0
HANG 10, NGAN 6
LOC DINH KY
MMMM
KIM DUNG
VO HIEP
234234
1969
6
MMMM1
0
HANG 11, NGAN 1
MMMM2
1
HANG 11, NGAN 2
MMMM3
0
HANG 11, NGAN 3
MMMM4
0
HANG 11, NGAN 4
MMMM5
0
HANG 11, NGAN 5
MMMM6
0
HANG 11, NGAN 6
MY NHAN NGU
NNNN
CHAU TINH TRI
HAI BUA
242342
2015
6
NNNN1
1
HANG 12, NGAN 1
NNNN2
1
HANG 12, NGAN 2
NNNN3
1
HANG 12, NGAN 3
NNNN4
0
HANG 12, NGAN 4
NNNN5
0
HANG 12, NGAN 5
NNNN6
0
HANG 12, NGAN 6
NGUOI PHAN XU
VVVV
PHAN QUAN
HINH SU
332432
2018
6
VVVV1
0
HANG 13, NGAN 1
VVVV2
1
HANG 13, NGAN 2
VVVV3
0
HANG 13, NGAN 3
VVVV4
0
HANG 13, NGAN 4
VVVV5
0
HANG 13, NGAN 5
VVVV6
0
HANG 13, NGAN 6
NHA GIA KIM
ERER
PAULO COELHO
TIEU THUYET
545
1989
6
ERER1
1
HANG 14, NGAN 1
ERER2
1
HANG 14, NGAN 2
ERER3
0
HANG 14, NGAN 3
ERER4
0
HANG 14, NGAN 4
ERER5
0
HANG 14, NGAN 5
ERER6
0
HANG 14, NGAN 6
ONE PIECE
SFSF
ODA EIICHIRO
VH HIEN DAI
8869
1998
3
SFSF1
1
HANG 15, NGAN 1
SFSF2
1
HANG 15, NGAN 2
SFSF3
1
HANG 15, NGAN 3
PHUT 89
ADDA
LE CONG VINH
TU TRUYEN
323
2018
3
ADDA1
0
HANG 16, NGAN 1
ADDA2
1
HANG 16, NGAN 2
ADDA3
1
HANG 16, NGAN 3
SO KIEU TRUYEN
FFFF
NGO CAM NGUYEN
CO TRANG
344353
2017
3
FFFF1
1
HANG 17, NGAN 1
FFFF2
1
HANG 17, NGAN 2
FFFF3
1
HANG 17, NGAN 3
SUONG KHOI QUE NHA
WWWW
NGUYEN NHAT ANH
THO
343
2016
6
WWWW1
1
HANG 18, NGAN 1
WWWW2
1
HANG 18, NGAN 2
WWWW3
0
HANG 18, NGAN 3
WWWW4
0
HANG 18, NGAN 4
WWWW5
0
HANG 18, NGAN 5
WWWW6
0
HANG 18, NGAN 6
SU VIET 12 KHUC TRANG CA
SFSA
NGUYEN VAN A
LICH SU
234234
2017
6
SFSA1
1
HANG 19, NGAN 1
SFSA2
0
HANG 19, NGAN 2
SFSA3
1
HANG 19, NGAN 3
SFSA4
0
HANG 19, NGAN 4
SFSA5
0
HANG 19, NGAN 5
SFSA6
0
HANG 19, NGAN 6
TAM QUOC DIEN NGHIA
HHHH
LA QUAN TRUNG
TIEU THUYET
234234
1345
6
HHHH1
0
HANG 21, NGAN 1
HHHH2
0
HANG 21, NGAN 2
HHHH3
0
HANG 21, NGAN 3
HHHH4
0
HANG 21, NGAN 4
HHHH5
0
HANG 21, NGAN 5
HHHH6
0
HANG 21, NGAN 6
TAY DU KY
AAAA
NGO THUA AN
THAN THOAI
22322
1986
34
AAAA1
1
HANG 1, NGAN 1
AAAA2
1
HANG 1, NGAN 2
AAAA3
0
HANG 1, NGAN 3
AAAA4
1
HANG 1, NGAN 4
AAAA5
0
HANG 1, NGAN 5
AAAA6
0
HANG 1, NGAN 6
AAAA7
0
HANG 1, NGAN 7
AAAA8
0
HANG 1, NGAN 8
AAAA9
0
HANG 1, NGAN 9
AAAA10
0
HANG 1, NGAN 10
AAAA11
0
HANG 1, NGAN 11
AAAA12
0
HANG 1, NGAN 12
AAAA13
0
HANG 1, NGAN 13
AAAA14
0
HANG 1, NGAN 14
AAAA15
0
HANG 1, NGAN 15
AAAA16
0
HANG 1, NGAN 16
AAAA17
0
HANG 1, NGAN 17
AAAA18
0
HANG 1, NGAN 18
AAAA19
0
HANG 1, NGAN 19
AAAA20
0
HANG 1, NGAN 20
AAAA21
0
HANG 1, NGAN 21
AAAA22
0
HANG 1, NGAN 22
AAAA23
0
HANG 1, NGAN 23
AAAA24
0
HANG 1, NGAN 24
AAAA25
0
HANG 1, NGAN 25
AAAA26
0
HANG 1, NGAN 26
AAAA27
0
HANG 1, NGAN 27
AAAA28
0
HANG 1, NGAN 28
AAAA29
0
HANG 1, NGAN 29
AAAA30
0
HANG 1, NGAN 30
AAAA31
0
HANG 1, NGAN 31
AAAA32
0
HANG 1, NGAN 32
AAAA33
0
HANG 1, NGAN 33
AAAA34
0
HANG 1, NGAN 34
TE CONG
UUUU
CHAU TINH TRI
HAI BUA
34234
1993
6
UUUU1
1
HANG 22, NGAN 1
UUUU2
1
HANG 22, NGAN 2
UUUU3
1
HANG 22, NGAN 3
UUUU4
0
HANG 22, NGAN 4
UUUU5
0
HANG 22, NGAN 5
UUUU6
0
HANG 22, NGAN 6
THAN AN
RRRR
CHAU TINH TRI
HAI BUA
23423
1996
6
RRRR1
0
HANG 23, NGAN 1
RRRR2
1
HANG 23, NGAN 2
RRRR3
0
HANG 23, NGAN 3
RRRR4
0
HANG 23, NGAN 4
RRRR5
0
HANG 23, NGAN 5
RRRR6
0
HANG 23, NGAN 6
THAN DIEU DAI HIEP
GGGG
KIM DUNG
VO HIEP
343434
1986
3
GGGG1
1
HANG 23, NGAN 1
GGGG2
1
HANG 23, NGAN 2
GGGG3
1
HANG 23, NGAN 3
THE GIOI PHANG
DFFA
FRIEDMAN
CHINH TRI
820
2006
0
THE GODFATHER
WSDS
MARIO PUZO
TIEU THUYET
343434
1972
3
WSDS1
1
HANG 24, NGAN 1
WSDS2
1
HANG 24, NGAN 2
WSDS3
1
HANG 24, NGAN 3
THE WALKING DEAD
DFGA
FRANK DARABONT
KINH DI
242343
2012
6
DFGA1
0
HANG 25, NGAN 1
DFGA2
1
HANG 25, NGAN 2
DFGA3
0
HANG 25, NGAN 3
DFGA4
0
HANG 25, NGAN 4
DFGA5
0
HANG 23, NGAN 59
DFGA6
0
HANG 23, NGAN 6
THIEN LONG BAT BO
KKKK
KIM DUNG
VO HIEP
232132
1963
6
KKKK1
1
HANG 26, NGAN 1
KKKK2
1
HANG 26, NGAN 2
KKKK3
1
HANG 26, NGAN 3
KKKK4
0
HANG 26, NGAN 4
KKKK5
0
HANG 24, NGAN 5
KKKK6
0
HANG 26, NGAN 6
THUY HU
BBBB
THI NAI AM
TIEU THUYET
32423
1933
35
BBBB1
0
HANG 2, NGAN 1
BBBB2
1
HANG 2, NGAN 2
BBBB3
1
HANG 2, NGAN 3
BBBB4
0
HANG 2, NGAN 4
BBBB5
0
HANG 2, NGAN 5
BBBB6
0
HANG 2, NGAN 6
BBBB7
0
HANG 2, NGAN 7
BBBB8
0
HANG 2, NGAN 8
BBBB9
0
HANG 2, NGAN 9
BBBB10
0
HANG 2, NGAN 10
BBBB11
0
HANG 2, NGAN 11
BBBB12
0
HANG 2, NGAN 12
BBBB13
0
HANG 2, NGAN 13
BBBB14
0
HANG 2, NGAN 14
BBBB15
0
HANG 2, NGAN 15
BBBB16
0
HANG 2, NGAN 16
BBBB17
0
HANG 2, NGAN 17
BBBB18
0
HANG 2, NGAN 18
BBBB19
0
HANG 2, NGAN 19
BBBB20
0
HANG 2, NGAN 20
BBBB21
0
HANG 2, NGAN 21
BBBB22
0
HANG 2, NGAN 22
BBBB23
0
HANG 2, NGAN 23
BBBB24
0
HANG 2, NGAN 24
BBBB25
0
HANG 2, NGAN 25
BBBB26
0
HANG 2, NGAN 26
BBBB27
0
HANG 2, NGAN 27
BBBB28
0
HANG 2, NGAN 28
BBBB29
0
HANG 2, NGAN 29
BBBB30
0
HANG 2, NGAN 30
BBBB31
0
HANG 2, NGAN 31
BBBB32
0
HANG 2, NGAN 32
BBBB33
0
HANG 2, NGAN 33
BBBB34
0
HANG 2, NGAN 34
BBBB35
0
HANG 2, NGAN 35
TIEU NGAO GIAN HO
LLLL
KIM DUNG
VO HIEP
234234
1967
3
LLLL1
0
HANG 27, NGAN 1
LLLL2
0
HANG 27, NGAN 2
LLLL3
0
HANG 27, NGAN 3
TRUYEN KIEU
ZZZZ
NGUYEN DU
THO
132321
1906
3
ZZZZ1
1
HANG 28, NGAN 1
ZZZZ2
1
HANG 28, NGAN 2
ZZZZ3
1
HANG 28, NGAN 3
TUYET DINH CONG PHU
OOOO
CHAU TINH TRI
HAI BUA
23232
2004
3
OOOO1
0
HANG 29, NGAN 1
OOOO2
0
HANG 29, NGAN 2
OOOO3
0
HANG 29, NGAN 3
Y THIEN DO LONG KY
JJJJ
KIM DUNG
VO HIEP
345332
1961
3
JJJJ1
0
HANG 30, NGAN 1
JJJJ2
1
HANG 30, NGAN 2
JJJJ3
1
HANG 30, NGAN 3
LUOC SU THOI GIAN
SDFA
S HHAWKING
KHOA HOC PT
286
2008
3
SDFA1
0
HANG 31, NGAN 1
SDFA2
0
HANG 31, NGAN 2
SDFA3
0
HANG 31, NGAN 3
NHA GIA KIM
SDAA
COELHO
VAN HOC HD
2066
2016
3
SDAA1
0
HANG 32, NGAN 1
SDAA2
0
HANG 32, NGAN 2
SDAA3
0
HANG 32, NGAN 3
KHONG THEO LOI MON
KDJG
SINGER
SELFHELP
4451
2016
3
KDJG1
0
HANG 33, NGAN 1
KDJG2
1
HANG 33, NGAN 2
KDJG3
0
HANG 33, NGAN 3
CHIEC THUYEN NGOAI XA
IEWO
NGUYEN MINH CHAU
VAN HOC
66
1952
3
IEWO1
1
HANG 34, NGAN 1
IEWO2
0
HANG 34, NGAN 2
IEWO3
0
HANG 34, NGAN 3
YOUR NAME
ADAF
NGUYEN VAN K
HAI BUA
3423
2002
3
ADAF1
1
HANG 35, NGAN 1
ADAF2
1
HANG 35, NGAN 2
ADAF3
0
HANG 35, NGNAN 3



================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/DocGia.txt
================================================
74
5000
NGUYEN TRONG
KHANH
0
0
0
4000
NGUYEN NGON
QUOC
0
1
3
ASDF2
25
6
2018
0
0
0
LAO HAC
0
HANG 10, NGAN 2
QQQQ1
25
6
2018
0
0
0
HOANG TU BANH TRUNG
0
HANG 6, NGAN 1
SFSA3
25
6
2018
0
0
0
SU VIET 12 KHUC TRANG CA
0
HANG 19, NGAN 3
34
NGUYEN VAN
THO
0
1
1
EEEE2
2
6
2018
0
0
0
CHUYEN GIA BAT MA
0
HANG 4, NGAN 1
3800
NGUYEN THI
LINH
1
1
3
ZZZZ3
25
6
2018
0
0
0
TRUYEN KIEU
0
HANG 28, NGAN 3
QQQQ3
25
6
2018
0
0
0
HOANG TU BANH TRUNG
0
HANG 6, NGAN 3
RRRR2
25
6
2018
0
0
0
THAN AN
0
HANG 23, NGAN 2
3700
NGUYEN THANH
MAY
0
0
0
1890
GO VAN
TAI
0
1
2
ADDA3
24
3
2018
0
0
0
PHUT 89
0
HANG 16, NGAN 3
VVVV2
24
6
2018
0
0
0
NGUOI PHAN XU
0
HANG 13, NGAN 2
856
NGUYEN TRONG
TINH
0
0
0
265
NGUYEN THI NGOC
HUYEN
1
1
0
721
NGUYEN THI
THUY
0
1
3
NNNN3
24
6
2018
0
0
0
MY NHAN NGU
0
HANG 12, NGAN 3
EEEE3
24
6
2018
0
0
0
CHUYEN GIA BAT MA
0
HANG 4, NGAN 1
JJJJ2
24
6
2018
0
0
0
HONG LAU MONG
0
HANG 7, NGAN 2
273
TO CONG
HAU
0
1
0
624
NGUYEN DANG THUY
TRANG
1
0
0
564
NGUYEN TRONG
TINH
0
1
0
474
NGUYEN THI
THUOC
1
1
0
691
NGUYEN DANG THUY
TRAM
1
1
0
726
NGUYEN THI
NGOC
0
1
0
795
NGUYEN NGOC
LINH
1
1
0
766
NGUYEN VAN
TOAN
0
1
1
MMMM2
4
6
2018
0
0
0
LOC DINH KY
0
HANG 11, NGAN 2
1247
NGUYEN THI
THUOC
1
1
0
1000
VO NGOC
TIEN
0
0
0
900
NGUYEN THI MAI
THAO
1
0
0
913
NGUYEN VAN
THUAN
0
1
0
1267
VO NGOC
TIEN
0
0
0
1259
NGO VAN
HET
0
1
0
1355
NGUYEN THI
NHI
1
0
0
1399
HUYNH THANH
TUNG
0
1
0
2254
NGUYEN THI
LINH
1
1
3
SFSF1
24
6
2018
0
0
0
ONE PIECE
0
HANG 15, NGAN 1
WWWW1
25
6
2018
0
0
0
SUONG KHOI QUE NHA
0
HANG 18, NGAN 1
GGGG3
25
6
2018
0
0
0
THAN DIEU DAI HIEP
0
HANG 23, NGAN 3
1900
NGUYEN THI MAI
THAO
1
0
0
2243
CAO VAN
DAY
0
1
3
ERER1
25
6
2018
0
0
0
NHA GIA KIM
0
HANG 14, NGAN 1
WSDS2
23
6
2018
0
0
0
THE GODFATHER
0
HANG 24, NGAN 2
KKKK2
21
6
2018
0
0
0
THIEN LONG BAT BO
0
HANG 26, NGAN 2
2104
THACH CANH
NHUT
0
1
3
GGGG2
25
6
2018
0
0
0
THAN DIEU DAI HIEP
0
HANG 23, NGAN 2
IIII2
25
6
2018
0
0
0
BICH HUYET KIEM
0
HANG 2, NGAN 2
FFFF2
25
6
2018
0
0
0
SO KIEU TRUYEN
0
HANG 17, NGAN 2
2034
NGUYEN VAN
THUAN
0
1
0
2108
NGUYEN TIEN
HAT
0
0
0
2294
NGUYEN VAN
THUAN
0
1
0
2752
NGUYEN VAN 
LAI
1
0
0
2736
TO CONG
TRANG
0
1
3
NNNN1
25
6
2018
0
0
0
MY NHAN NGU
0
HANG 12, NGAN 1
FFFF3
25
6
2018
0
0
0
SO KIEU TRUYEN
0
HANG 17, NGAN 3
UUUU1
25
6
2018
0
0
0
TE CONG
0
HANG 22, NGAN 1
2504
NGUYEN THANH
PHONG
0
1
2
ZZZZ1
24
6
2017
0
0
0
TRUYEN KIEU
0
HANG 28, NGAN 1
JJJJ3
24
6
2018
0
0
0
HONG LAU MONG
0
HANG 7, NGAN 3
2307
LE THANH
SANG
0
1
0
2514
NGUYEN THANH
LIN
0
1
3
EEEE5
25
6
2018
0
0
0
CHUYEN GIA BAT MA
0
HANG 4, NGAN 5
DSFF4
25
6
2018
0
0
0
INFINITY WAR
0
HANG 8, NGAN 4
ERER2
25
6
2018
0
0
0
NHA GIA KIM
0
HANG 14, NGAN 2
2950
NGUYEN CONG
VIEN
0
1
3
IEWO1
25
6
2018
0
0
0
CHIEC THUYEN NGOAI XA
0
HANG 34, NGAN 1
JJJJ2
25
6
2018
0
0
0
Y THIEN DO LONG KY
0
HANG 30, NGAN 2
ADAF1
25
6
2018
0
0
0
YOUR NAME
0
HANG 35, NGAN 1
3780
NGUYEN THI
LUA
1
1
3
ADAF2
25
6
2018
0
0
0
YOUR NAME
0
HANG 35, NGAN 2
JJJJ3
25
6
2018
0
0
0
Y THIEN DO LONG KY
0
HANG 30, NGAN 3
KDJG2
25
6
2018
0
0
0
KHONG THEO LOI MON
0
HANG 33, NGAN 2
7134
NGUYEN VAN
THO
0
1
3
DFGA2
25
6
2018
0
0
0
THE WALKING DEAD
0
HANG 25, NGAN 2
WSDS3
25
6
2018
0
0
0
THE GODFATHER
0
HANG 24, NGAN 3
SFSF3
25
6
2018
0
0
0
ONE PIECE
0
HANG 15, NGAN 3
5189
NGO VAN
TAI
0
1
3
NNNN2
25
6
2018
0
0
0
MY NHAN NGU
0
HANG 12, NGAN 2
WWWW2
25
6
2018
0
0
0
SUONG KHOI QUE NHA
0
HANG 18, NGAN 2
GGGG1
25
6
2018
0
0
0
THAN DIEU DAI HIEP
0
HANG 23, NGAN 1
6407
NGUYEN TRONG
KHANH
0
0
0
6309
NGUYEN TRI
VI
0
1
3
ASDF3
25
6
2018
0
0
0
LAO HAC
0
HANG 10, NGAN 3
AAAA4
25
6
2018
0
0
0
TAY DU KY
0
HANG 1, NGAN 4
KKKK1
25
6
2018
0
0
0
THIEN LONG BAT BO
0
HANG 26, NGAN 1
7395
NGUYEN NGOC
LINH
1
0
0
7774
NGUYEN THI
LUA
1
1
0
7613
NGUYEN NGON
QUOC
0
1
0
8041
NGUYEN VAN 
BINH
0
1
3
SFSF2
25
6
2018
0
0
0
ONE PIECE
0
HANG 15, NGAN 2
AAAA1
25
6
2018
0
0
0
TAY DU KY
0
HANG 1, NGAN 1
ZZZZ2
25
5
2018
0
0
0
TRUYEN KIEU
0
HANG 28, NGAN 2
7987
LE NGOC
VAN
0
1
0
8941
NGUYEN VAN 
BINH
0
1
3
IIII1
3
6
2018
0
0
0
BICH HUYET KIEM
0
HANG 2, NGAN 1
EEEE1
20
6
2018
0
0
0
CHUYEN GIA BAT MA
0
HANG 4, NGAN 1
CCCC1
20
6
2018
0
0
0
DAC NHAN TAM
2
HANG 3, NGAN 3
8259
NGO VAN
HET
0
1
0
10243
CAO VAN
DAI
0
1
3
SSSS1
25
6
2018
0
0
0
KINH VAN HOA
0
HANG 9, NGAN 1
SFSA1
25
6
2018
0
0
0
SU VIET 12 KHUC TRANG CA
0
HANG 19, NGAN 1
UUUU3
25
6
2018
0
0
0
TE CONG
0
HANG 22, NGAN 3
9913
NGUYEN VAN
THUAN
0
1
0
9429
NGUYEN NGOC
THANH
0
1
0
15239
NGUYEN THANH
HT
0
1
3
IIII3
25
6
2018
0
0
0
BICH HUYET KIEM
0
HANG 2, NGAN 3
JJJJ1
25
6
2018
0
0
0
HONG LAU MONG
0
HANG 7, NGAN 1
DSFF2
25
6
2018
0
0
0
INFINITY WAR
0
HANG 8, NGAN 2
13767
VO THI TUONG
VI
1
1
0
11443
PHAN THU
TRANG
1
1
0
15739
NGUYEN THANH
THAI
0
0
0
19585
NGUYEN THI
NHI
1
0
0
18106
NGUYEN THI
QUYNH
1
1
3
ADDA2
26
6
2018
0
0
0
PHUT 89
0
HANG 16, NGAN 2
SSSS4
26
6
2018
0
0
0
KINH VAN HOA
0
HANG 9, NGAN 4
FFFF1
26
6
2018
0
0
0
SO KIEU TRUYEN
0
HANG 17, NGAN 1
16788
NGUYEN HUU
NGOC
0
1
2
WSDS1
26
6
2018
0
0
0
THE GODFATHER
0
HANG 24, NGAN 1
QQQQ2
26
6
2018
0
0
0
HOANG TU BANH TRUNG
0
HANG 6, NGAN 2
20752
NGUYEN VAN 
LAI
1
0
0
21950
NGUYEN CONG
VIEN
0
1
1
BBBB3
27
1
2018
0
0
0
THUY HU
0
HANG 2, NGAN 3
22064
THACH CANH
NHUT
0
0
0
22653
NGUYEN THI NGOC
HUYEN
1
1
0
24072
NGUYEN VAN
DO
0
1
0
24972
NGUYEN THANH
DO
0
1
3
BBBB2
25
6
2018
0
0
0
THUY HU
0
HANG 2, NGAN 2
KKKK3
25
6
2018
0
0
0
THIEN LONG BAT BO
0
HANG 26, NGAN 3
AAAA2
25
6
2018
0
0
0
TAY DU KY
0
HANG 1, NGAN 2
26656
NGUYEN THANH
PHUC
0
1
0
25801
NGUYEN HUU
KHA
0
1
0
27608
NGUYEN TIEN
HAT
0
1
0
26709
LE VAN
TAI
0
1
0
32642
NGO VAN
DUONG
0
1
1
UUUU2
27
3
2018
0
0
0
TE CONG
0
HANG 22, NGAN 2
29033
NGUYEN THANH
TRI
0
1
0
30376
NGUYEN VAN
LUU
0
1
0
30139
THANH LONG
TIENG
0
1
0



================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/DSDocGia.cpp
================================================
﻿#include "DSDocGia.h"

void initTREE_DG(TREE_DG &t)
{
	nDG = 0;
	t = NULL;
}

bool IsEmpty(TREE_DG t)
{
	return t == NULL;
}

NODE_DG* GetNode_DG(DOC_GIA dg)
{
	NODE_DG *p = new NODE_DG;
	if (p == NULL) {
		return NULL;
	}
	// khoi tao danh muc sach trong node doc gia
	initList_MT(p->mt);
	p->DG = dg;
	p->pLeft = p->pRight = NULL;
	return (p);
}

void InsertDTtoTree(TREE_DG &t, DOC_GIA dg)
{
	/// tang doc gia len 1
	if (t == NULL) {
		t = GetNode_DG(dg);
		++nDG;
	}
	else if (t->DG.MADG > dg.MADG)
	{
		InsertDTtoTree(t->pLeft, dg);
	}
	else if (t->DG.MADG < dg.MADG)
	{
		InsertDTtoTree(t->pRight, dg);
	}
}

int countDG(TREE_DG tree)
{
	int c = 1;             // ban than node duoc dem la 1;
	if (tree == NULL)
		return 0;
	else
	{
		c += countDG(tree->pLeft);
		c += countDG(tree->pRight);
		return c;
	}
}

bool Check_MADG(TREE_DG  t, uint MADG)
{
	if (t == NULL) {
		return false;
	}
	else if (t->DG.MADG == MADG)
	{
		return true;
	}
	else if (MADG < t->DG.MADG)
	{
		return Check_MADG(t->pLeft, MADG);
	}
	else
	{
		return Check_MADG(t->pRight, MADG);
	}
}

uint Random()
{
	srand((uint)time(0));
	int x;
	// bo ham rand() vao vong lap moi khong bi loi tang dan, hay giam dan.
	for (int i = 0; i < 500; i++)
	{
		x = rand();
	}
	return x;
}

uint Random_MADG(TREE_DG t)
{
	uint temp;
	do
	{
		temp = Random();
	} while (Check_MADG(t, temp));  // check trung , neu trung thi random lai
	return temp;
}

NODE_DG* FindMin(TREE_DG t)
{
	while (t->pLeft != NULL) t = t->pLeft;
	return (t);
}

NODE_DG* Find_DG(TREE_DG t, uint MADG)
{
	while (t != NULL && t->DG.MADG != MADG)
	{
		if (MADG < t->DG.MADG)
		{
			t = t->pLeft;
		}
		else t = t->pRight;
	}
	return (t);
}

bool IsDeleted_DG(TREE_DG &t, DOC_GIA dg)
{
	if (t == NULL)
		return false;
	else
	{
		if (dg.MADG > t->DG.MADG)
			return IsDeleted_DG(t->pRight, dg);
		else if (dg.MADG < t->DG.MADG)
			 return IsDeleted_DG(t->pLeft, dg);
		else // Wohoo... I found you, Get ready to be deleted
		{
			//case 1: No child
			if (t->pLeft == NULL && t->pRight == NULL)
			{
				delete t; // dangling pointer
				t = NULL;
				nDG--;
			}
			else if (t->pLeft == NULL)// case 2: One child
			{
				NODE_DG* temp = t;
				t = t->pRight;
				delete temp;
				nDG--;
			}
			else if (t->pRight == NULL)
			{
				NODE_DG* temp = t;
				t = t->pLeft;
				delete temp;
				nDG--;
			}// Case 3: 2 children
			else {
				NODE_DG* temp = FindMin(t->pRight);

				// copy du lieu vao .
				t->DG = temp->DG;
				t->mt = temp->mt;
				return IsDeleted_DG(t->pRight, temp->DG);
			}
			return true;
		}
	}
}

void Xoa_OutDG_1line(int locate)
{
	gotoxy(xDisplayDG[0] + 1, yDisplay + 3 + locate);
	cout << setw(xDisplayDG[1] - xDisplayDG[0] - 1) << setfill(' ') << ' ';
	gotoxy(xDisplayDG[1] + 1, yDisplay + 3 + locate);
	cout << setw(xDisplayDG[2] - xDisplayDG[1] - 1) << setfill(' ') << ' ';
	gotoxy(xDisplayDG[2] + 4, yDisplay + 3 + locate);
	cout << setw(xDisplayDG[3] - xDisplayDG[2] - 5) << setfill(' ') << ' ';
	gotoxy(xDisplayDG[3] + 3, yDisplay + 3 + locate);
	cout << setw(xDisplayDG[4] - xDisplayDG[3] - 3) << setfill(' ') << ' ';
	gotoxy(xDisplayDG[4] + 3, yDisplay + 3 + locate);
	cout << setw(xDisplayDG[5] - xDisplayDG[4] - 3) << setfill(' ') << ' ';
}

void Xoa_OutDg_29lines()
{
	for (int i = 0; i <NUMBER_LINES; i++)
	{
		Xoa_OutDG_1line(i);
	}
}

void Output_DG(NODE_DG* dg)
{
	Xoa_OutDG_1line(locate);
	gotoxy(xDisplayDG[0] + 3, yDisplay + 3 + locate);
	cout << dg->DG.MADG;
	gotoxy(xDisplayDG[1] + 1, yDisplay + 3 + locate);
	cout << dg->DG.ho;
	gotoxy(xDisplayDG[2] + 4, yDisplay + 3 + locate);
	cout << dg->DG.ten;
	gotoxy(xDisplayDG[3] + 3, yDisplay + 3 + locate);
	(dg->DG.gioitinh == 0) ? cout << "NAM" : cout << "NU";

	gotoxy(xDisplayDG[4] + 3, yDisplay + 3 + locate);
	(dg->DG.trangthaithe == 0) ? cout << "KHOA" : cout << "HOAT DONG";
	locate++;
}


// loai bo khoang cach.
string Get_TenHO(DOC_GIA dg)
{
	int i = 0;
	string token;
	token = dg.ten;
	while (dg.ho[i] != ' ')
	{
		token += dg.ho[i++];
	}
	return token;
}

void Create_ArrMADG(TREE_DG t, uint* arr)
{
	if (t == NULL)
		return;
	Create_ArrMADG(t->pLeft, arr); // visit left subtree
	arr[index++] = t->DG.MADG;
	Create_ArrMADG(t->pRight, arr);// visit right subtree
}

void Create_ArrTenHo(TREE_DG t, TEN_HO* arr)
{
	if (t == NULL)
		return;
	Create_ArrTenHo(t->pLeft, arr); // visit left subtree
	arr[index].hoten = Get_TenHO(t->DG);
	arr[index++].MADG = t->DG.MADG;
	Create_ArrTenHo(t->pRight, arr);// visti right subtree
}

void Creat_TEMPLIST(TREE_DG t, LIST_TEMPLIST &l, int &index)
{
	if (t == NULL)
		return;
	Creat_TEMPLIST(t->pLeft, l, index);
	AddTailList_TEMPLIST(l, index++, t->DG.MADG);
	Creat_TEMPLIST(t->pRight, l, index);
}

void Swap_TenHo(TEN_HO &a, TEN_HO &b)
{
	TEN_HO temp;
	temp = a;
	a = b;
	b = temp;
}

void QuicKsort_ARRTenHo(TEN_HO *th, int left, int right)
{
	TEN_HO key = th[(left + right) / 2];
	int i = left, j = right;
	do {
		while (th[i].hoten < key.hoten)
			i++;
		while (th[j].hoten > key.hoten)
			j--;
		if (i <= j) {
			if (i < j) Swap_TenHo(th[i], th[j]);
			i++;
			j--;
		}
	} while (i <= j);
	if (left < j) QuicKsort_ARRTenHo(th, left, j);
	if (right > i) QuicKsort_ARRTenHo(th, i, right);
}

void Update_DG(TREE_DG &t, DOC_GIA &dg, bool isEdited)
{
	// hien con tro nhap
	ShowCur(true);
	normalBGColor();

	// cac flag dieu khien qua trinh cap nhat
	int ordinal = 0;
	bool isSave = false;
	bool isEscape = false;

	// chieu dai bang nhap
	int nngang = (int)keyBangNhapDG[0].length();

	// cac bien luu tru tam thoi
	string ho = "";
	string ten = "";
	uint phai = 3, ttthe = 3;
	uint MADG;

	CreateBox(X_NOTIFY, Y_NOTIFY, "NOTIFICATIONS:  ", 59);
	BangNhap(xDisplayDG[5] + 7, yDisplay, nngang, keyBangNhapDG, 12);
	BangGuides(xDisplayDG[5] + 7, yDisplay + 20, nngang, keyGuide1, 6);

	if (isEdited)
	{
		ho = dg.ho;
		ten = dg.ten;
		phai = dg.gioitinh;
		ttthe = dg.trangthaithe;
		MADG = dg.MADG;
		gotoxy((xDisplayDG[5] + 7 + nngang / 2), yDisplay + 3);
		cout << MADG;
		gotoxy((xDisplayDG[5] + 7 + nngang / 2), yDisplay + 5);
		cout << ho;
		gotoxy((xDisplayDG[5] + 7 + nngang / 2), yDisplay + 7);
		cout << ten;
		gotoxy((xDisplayDG[5] + 7 + nngang / 2), yDisplay + 9);
		(phai == 0) ? cout << phai << ":  NAM" : cout << phai << ":  NU";
		gotoxy((xDisplayDG[5] + 7 + nngang / 2), yDisplay + 11);
		(ttthe == 0) ? cout << ttthe << ":  KHOA" : cout << ttthe << ":  HOAT DONG";
	}
	if (!isEdited)
	{
		gotoxy((xDisplayDG[5] + 7 + nngang / 2), yDisplay + 3);
		MADG = Random_MADG(t);
		cout << MADG;
	}

	while (true) {

		switch (ordinal)
		{
		case 0:
			gotoxy((xDisplayDG[5] + 7 + nngang / 2), yDisplay + 5);
			NhapHo(ho, ordinal, isSave, isEscape);
			break;
		case 1:
			gotoxy((xDisplayDG[5] + 7 + nngang / 2), yDisplay + 7);
			NhapTen(ten, ordinal, isSave, isEscape);
			break;
		case 2:
			gotoxy((xDisplayDG[5] + 7 + nngang / 2), yDisplay + 9);
			Nhap(phai, NHAP_PHAI, ordinal, isSave, isEscape);
			break;
		case 3:
			gotoxy((xDisplayDG[5] + 7 + nngang / 2), yDisplay + 11);
			Nhap(ttthe, NHAP_TRANG_THAI, ordinal, isSave, isEscape);
			break;
		}
		// check Save
		if (isSave)
		{
			// cap nhat lai flag
			isSave = false;

			// check rong;
			if (ho.length() == 0)
			{
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << "CAC TRUONG DU LIEU KHONG DUOC DE TRONG !!! ";
				normalBGColor();

				// quay lai va dien vao truong du lieu do
				ordinal = 0;
				continue;
			}
			else if (ten.length() == 0)
			{
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << "CAC TRUONG DU LIEU KHONG DUOC DE TRONG !!! ";
				normalBGColor();

				// quay lai va dien vao truong du lieu do
				ordinal = 1;
				continue;
			}
			else if (phai == 3)
			{
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << "CAC TRUONG DU LIEU KHONG DUOC DE TRONG !!! ";
				normalBGColor();
				// quay lai va dien vao truong du lieu do
				ordinal = 2;
				continue;
			}
			else if (ttthe == 3)
			{
				gotoxy(X_NOTIFY + 15, Y_NOTIFY);
				SetColor(BLUE);
				cout << "CAC TRUONG DU LIEU KHONG DUOC DE TRONG !!! ";
				normalBGColor();
				ordinal = 3;
				continue;
			}
			
			dg.MADG = MADG;
			dg.ho = ChuanHoaString(ho);
			dg.ten = ChuanHoaString(ten);
			dg.gioitinh = phai;
			dg.trangthaithe = ttthe;

			if (isEdited)
			{	
				NODE_DG* p;

				// ma doc gia khong doi
				p = Find_DG(t, MADG);
				p->DG = dg;	
			}
			else
			{
				InsertDTtoTree(t, dg);
			}

			// In dong thong bao .
			for (int i = 0; i < 5; i++)
			{
					SetColor(BLUE);
					gotoxy(X_NOTIFY + 15, Y_NOTIFY);
					Sleep(100);
					cout << "           SUCCESSFULLY !!! ";
			}
			normalBGColor();
			XoaMotVung(xDisplayDG[5] + 7, yDisplay, 30, 60);
			return;
		}

		if (isEscape)
		{
			XoaMotVung(xDisplayDG[5] + 7, yDisplay, 30, 60);
			return;
		}
	}
	ShowCur(false);
}

void OutputDG_PerPage1(TREE_DG t, TEN_HO *arr, int index)
{
	Xoa_OutDg_29lines();
	locate = 0;
	index--;
	NODE_DG* temp = NULL;

	if (t == NULL)
		return;
	else
	{
		for (int i =  NUMBER_LINES * index; i < NUMBER_LINES*( 1 +  index) && i < nDG; i++)
		{
			temp = Find_DG(t, arr[i].MADG);
			Output_DG(temp);
		}
	}
	
}

void Output_ListDG1(TREE_DG t, TEN_HO *arr)
{
	ShowCur(false);
	nDG = countDG(t);

	// thu tu trang
	int tttrang, tongtrang;
	tttrang = 1;
	tongtrang = (nDG / NUMBER_LINES) + 1;
	OutputDG_PerPage1(t, arr, tttrang);

	int kb_hit;
	do
	{
		if (_kbhit())
		{
			kb_hit = _getch();
			if (kb_hit == 224 || kb_hit == 0)
				kb_hit = _getch();
			switch (kb_hit)
			{
			case PAGE_UP:

				(tttrang > 1) ? tttrang-- : tttrang = tongtrang;
				OutputDG_PerPage1(t, arr, tttrang);
				break;
			case PAGE_DOWN:

				(tttrang < tongtrang) ? tttrang++ : tttrang = 1;
				OutputDG_PerPage1(t, arr, tttrang);
				break;

			case ESC:
				return;
			}
		}
		gotoxy(3, 35);
		cout << "HotKey: PgUp, PgDn, ESC, KEYUP, KEYDOWN ";
		gotoxy(55, 35);
		cout << "Trang " << tttrang << " / " << tongtrang;
	} while (true);
}

void OutputDG_PerPage2(TREE_DG t, uint* arr, int index)
{
	Xoa_OutDg_29lines();
	locate = 0;
	NODE_DG* temp = NULL;
	index--;
	for (int i = 0 + NUMBER_LINES * index; i < (NUMBER_LINES + NUMBER_LINES * index) && i < nDG; i++)
	{
		temp = Find_DG(t, arr[i]);
		Output_DG(temp);

	}
}

void Output_ListDG2(TREE_DG t, uint *arr)
{
	ShowCur(false);
	nDG = countDG(t);
	// thu tu trang
	int tttrang, tongtrang;
	tttrang = 1;
	tongtrang = (nDG / NUMBER_LINES) + 1;
	OutputDG_PerPage2(t, arr, tttrang);

	int kb_hit;
	do
	{
		if (_kbhit())
		{
			kb_hit = _getch();
			if (kb_hit == 224 || kb_hit == 0)
				kb_hit = _getch();
			switch (kb_hit)
			{

			case PAGE_UP:
				(tttrang > 1) ? tttrang-- : tttrang = tongtrang;
				OutputDG_PerPage2(t, arr, tttrang);
				break;

			case PAGE_DOWN:
				(tttrang < tongtrang) ? tttrang++ : tttrang = 1;
				OutputDG_PerPage2(t, arr, tttrang);
				break;

			case  ESC:
				return;
			}
		}
		gotoxy(3, 35);
		cout << "HotKey: PgUp, PgDn, ESC, KEYUP, KEYDOWN ";
		gotoxy(55, 35);
		cout << "Trang " << tttrang << " / " << tongtrang;
	} while (true);
}

void OutputDG_PerPage(TREE_DG t, LIST_TEMPLIST l, int index)
{
	Xoa_OutDg_29lines();
	SetColor(WHITE);
	locate = 0;
	NODE_TEMPLIST * temp1 = NULL;
	NODE_DG* temp2 = NULL;
	index--;
	for (int i = NUMBER_LINES * index; i < NUMBER_LINES * (index + 1) ; i++)
	{
		temp1 = BinarySearch_TEMPLIST(l, i);
		if (temp1 == NULL)
		{
			return;
		}
		temp2 = Find_DG(t, temp1->tl.MADG);
		Output_DG(temp2);
	}
}

int ChooseItems(TREE_DG &t, LIST_TEMPLIST &l, int tttrang, int tongtrang)
{
	int pos = 0;
	int kb_hit;
	pos = 0;
	SetColor(LIGHT_GREEN);
	gotoxy(xDisplayDG[0] + 1, yDisplay + 3 + pos);
	cout << "<<";
	gotoxy(xDisplayDG[0] + 2 + 6, yDisplay + 3 + pos);
	cout << ">>";
	while (true)
	{
		if (_kbhit())
		{
			kb_hit = _getch();
			if (kb_hit == 224 || kb_hit == 0)
				kb_hit = _getch();

			switch (kb_hit)
			{
			case KEY_UP:
				// xoa muc truoc
				gotoxy(xDisplayDG[0] + 1, yDisplay + 3 + pos);
				cout << "  ";
				gotoxy(xDisplayDG[0] + 2 + 6, yDisplay + 3 + pos);
				cout << "  ";

				(pos > 0) ? pos-- : pos = 28;

				// to mau muc moi
				gotoxy(xDisplayDG[0] + 1, yDisplay + 3 + pos);
				cout << "<<";
				gotoxy(xDisplayDG[0] + 2 + 6, yDisplay + 3 + pos);
				cout << ">>";
				break;

			case KEY_DOWN:
				// xoa muc truoc
				gotoxy(xDisplayDG[0] + 1, yDisplay + 3 + pos);
				cout << "  ";
				gotoxy(xDisplayDG[0] + 2 + 6, yDisplay + 3 + pos);
				cout << "  ";

				(pos < NUMBER_LINES - 1) ? pos++ : pos = 0;

				// to mau muc moi
				gotoxy(xDisplayDG[0] + 1, yDisplay + 3 + pos);
				cout << "<<";
				gotoxy(xDisplayDG[0] + 2 + 6, yDisplay + 3 + pos);
				cout << ">>";
				break;

			case PAGE_UP:
				if (tttrang > 1)
				{
					tttrang--;
				}
				else
				{
					tttrang = tongtrang;
				}
				OutputDG_PerPage(t, l, tttrang);

				// high light hang dau.
				pos = 0;
				SetColor(LIGHT_GREEN);
				gotoxy(xDisplayDG[0] + 1, yDisplay + 3 + pos);
				cout << "<<";
				gotoxy(xDisplayDG[0] + 2 + 6, yDisplay + 3 + pos);
				cout << ">>";
				break;

			case PAGE_DOWN:
				if (tttrang <  tongtrang)
				{
					tttrang++;
				}
				else
				{
					tttrang = 1;

				}
				
				OutputDG_PerPage(t, l, tttrang);

				// high light hang dau.
				pos = 0;
				SetColor(LIGHT_GREEN);
				gotoxy(xDisplayDG[0] + 1, yDisplay + 3 + pos);
				cout << "<<";
				gotoxy(xDisplayDG[0] + 2 + 6, yDisplay + 3 + pos);
				cout << ">>";
				break;

			case ENTER:

				// tra ve vi tri pos.
				return (pos == 0 && tttrang == 1) ? pos : pos + (tttrang - 1)* NUMBER_LINES;
			}
		}
		ShowCur(false);
		SetColor(WHITE);
		gotoxy(30, 36);
		cout << "Trang " << tttrang << " / " << tongtrang;
		normalBGColor();
	}
}

int Output_ListDG(TREE_DG &t, LIST_TEMPLIST &l, DOC_GIA &dg,  int &tttrang)
{
	NODE_TEMPLIST * temp1 = NULL;
	NODE_DG* temp2 = NULL;
	int choose;
	bool check;

	// nDG la so DG hien co trong cay
	nDG = countDG(t);

	// thu tu trang
	int  tongtrang;
	tongtrang = (nDG / NUMBER_LINES) + 1;
	OutputDG_PerPage(t, l, tttrang);

	int kb_hit;
	do
	{
		if (_kbhit())
		{
			kb_hit = _getch();
			if (kb_hit == 224 || kb_hit == 0)
				kb_hit = _getch();
			switch (kb_hit)
			{
			case PAGE_UP:

				(tttrang > 1) ? tttrang-- : tttrang = tongtrang;
				OutputDG_PerPage(t, l, tttrang);
				break;

			case PAGE_DOWN:
				(tttrang <  tongtrang) ? tttrang++ : tttrang = 1;
				OutputDG_PerPage(t, l, tttrang);
				break;

			// them
			case KEY_F2:
				Beep(600, 100);
				Update_DG(t, dg, false);
				ClearAll_TEMPLIST(l);
				return 1;

			// hieu chinh
			case  KEY_F3:
				Beep(600, 100);
				choose = ChooseItems(t, l, tttrang, tongtrang);
				temp1 = BinarySearch_TEMPLIST(l, choose);
				
				// check cac truong hop.
				if (temp1 == NULL)
				{
					return 1;
				}
				else
				{
					temp2 = Find_DG(t, temp1->tl.MADG);
					Update_DG(t, temp2->DG, true);
					ClearAll_TEMPLIST(l);
					return 1;
				}
				
			// xoa
			case KEY_F4:
				Beep(600, 100);
				choose = ChooseItems(t, l, tttrang, tongtrang);
				temp1 = BinarySearch_TEMPLIST(l, choose);

				// truong hop khong chon doc gia nao.
				if (temp1 == NULL)
				{
					return 1;
				}
				else
				{
					temp2 = Find_DG(t, temp1->tl.MADG);
					if (SoSachDangMuon(temp2->mt) > 0)
					{
						gotoxy(75, 20);
						cout << "Doc Gia da muon sach nen khong duoc phep xoa !";
						_getch();
						gotoxy(75, 20);
						cout << "                                                      ";
						return 1;
					}
					else
					{
						// chỗ biến check này để thông báo là check thành công.....
						check = IsDeleted_DG(t, temp2->DG);
						ClearAll_TEMPLIST(l);
						return 1;
					}
				}

			case ESC:
				Beep(600, 100);
				ClearAll_TEMPLIST(l);
				return 0;
			}
		}
		ShowCur(false);
		gotoxy(30, 36);
		cout << "Trang " << tttrang << " / " << tongtrang;
	} while (true);
}

void Menu_DocGia(TREE_DG &t)
{
	clrscr();
	normalBGColor();
	int tttrang = 1;
	int esc = 1;

	do
	{
		clrscr();
		gotoxy(26, 1);
		cout << "~~~CAP NHAT DOC GIA~~~ ";

		gotoxy(3, yHotkey );
		SetColor(WHITE);
		cout << "ESC-Thoat, F2 - Them, F3 - Sua, F4 - Xoa, F10 - Luu, PgUP, PgDn";

		normalBGColor();
		DOC_GIA dg;
		int index = 0;

		// cho nay thay doi cau truc DSLK TEMPLIST bang Mang cap phat dong hay hon...
		LIST_TEMPLIST l;
		initList_TEMPLIST(l);
		Creat_TEMPLIST(t, l, index);
		DisplayDG(keyDisplayDG, 5, xDisplayDG);
		esc = Output_ListDG(t, l, dg, tttrang);
	} while (esc );
}

void InDocGia(TREE_DG t)
{
	clrscr();
	normalBGColor();
	ShowCur(false);

	int c = 0;
	int chosen = 0;
	while (c != ESC)
	{
		clrscr();
		SetColor(BRIGHT_WHITE);
		gotoxy(xINDOCGIA, yINDOCGIA);
		cout << " THEO THU TU TEN_HO TANG DAN ";
		gotoxy(xINDOCGIA, yINDOCGIA + 2);
		cout << " THEO THU TU MA_DG TANG DAN  ";
		while (c != ENTER)
		{
			SetColor(LIGHT_GREEN);
			gotoxy(xINDOCGIA - 3, yINDOCGIA + chosen);
			cout << "->";
			gotoxy(xINDOCGIA + 30, yINDOCGIA + chosen);
			cout << "<-";
			c = _getch();

			if (c == KEY_UP || c == KEY_DOWN)
			{
				gotoxy(xINDOCGIA - 3, yINDOCGIA + chosen);
				cout << "   ";
				gotoxy(xINDOCGIA + 30, yINDOCGIA + chosen);
				cout << "   ";

				if (chosen == 0)
				{
					chosen = 2;
				}
				else if (chosen == 2)
				{
					chosen = 0;
				}
			}
			else if (c == ESC)
			{
				return;
			}
		}
		if (chosen == 0)
		{
			index = 0;
			TEN_HO* ArrTenHo = new TEN_HO[nDG];
			Create_ArrTenHo(t, ArrTenHo);
			DisplayDG(keyDisplayDG, 5, xDisplayDG);
			QuicKsort_ARRTenHo(ArrTenHo, 0, nDG - 1);
			Output_ListDG1(t, ArrTenHo);

			// xoa vung nho
			delete[] ArrTenHo;
		}
		else if (chosen == 2)
		{
			index = 0;

			// su dung cap phat dong.
			uint* arrMADG = new uint[nDG];
			DisplayDG(keyDisplayDG, 5, xDisplayDG);
			Create_ArrMADG(t, arrMADG);
			Output_ListDG2(t, arrMADG);

			// xoa vung nho
			delete[]arrMADG;
		}
		c = 0;
		chosen = 0;
	}
}

void Sort_QuaHan(QuaHan *ArrQuaHan, int q, int r)
{
	QuaHan temp;
	int i = q;
	int j = r;
	//Lấy phần tử giữa của dãy cần sắp thứ tự làm chốt
	int x = ArrQuaHan[(q + r) / 2].songayquahan;
	do
	{  // Phân đoạn dãy con a[q],..., a[r]
		while (ArrQuaHan[i].songayquahan > x)
			i++; //Tìm phần tử đầu tiên có trị nhỏ hơn hay bằng x
		while (ArrQuaHan[j].songayquahan < x)
			j--;   //Tìm phần tử đầu tiên có trị lớn hơn hay bằng x

		if (i <= j)   // Hoan vi
		{
			temp = ArrQuaHan[i];
			ArrQuaHan[i] = ArrQuaHan[j];
			ArrQuaHan[j] = temp;
			i++;
			j--;
		}
	} while (i <= j);

	if (q<j) 	// phần thứ nhất có từ 2 phần tử trở lên
		Sort_QuaHan(ArrQuaHan, q, j);
	if (i < r)   	// phần thứ ba có từ 2 phần tử trở lên
		Sort_QuaHan(ArrQuaHan, i, r);
}


void DanhSachQuaHan(TREE_DG t)
{
	system("color 3E");
	clrscr();
	int nDG_MAX = countDG(t);

	// tao mang phu de xu ly.
	QuaHan *ArrQuaHan = new QuaHan[nDG_MAX];

	int ndg = 0;

	//Duyệt cây theo thứ tự NLR (Preorder): Giai thuat khong de quy.
	const int STACKSIZE = 500;
	NODE_DG* Stack[STACKSIZE];
	int sp = -1;	// Khoi tao Stack rong
	NODE_DG* p = t;
	while (p != NULL)
	{
		// cap nhat du lieu vao mang.
		ArrQuaHan[ndg].MADG = p->DG.MADG;
		ArrQuaHan[ndg].songayquahan = SoNgayQuaHan(p->mt);
		ndg++;

		if (p->pRight != NULL)
			Stack[++sp] = p->pRight;
		if (p->pLeft != NULL)
			p = p->pLeft;
		else if (sp == -1)
			break;
		else p = Stack[sp--];
	}

	// quicksort ArrQuaHan theo thu tu giam dan.
	Sort_QuaHan(ArrQuaHan, 0, ndg - 1);

	// in thong tin ra ngoai man hinh.
	string text = "DANH SACH DOC GIA MUON QUA HAN ";
	CreateBox(48, 2, text, (int)text.length());
	SetBGColor(GREEN);
	
	gotoxy(47, 2);
	cout << "DANH SACH DOC GIA MUON QUA HAN ";
	gotoxy(3, 5);
	cout << "STT";
	gotoxy(10, 5);
	cout << "MA DOC GIA";
	gotoxy(25, 5);
	cout << "HO DOC GIA";
	gotoxy(48, 5);
	cout << "TEN DOC GIA";
	gotoxy(65, 5);
	cout << "GIOI TINH";
	gotoxy(80, 5);
	cout << "TRANG THAI THE";
	gotoxy(100, 5);
	cout << "TONG SO NGAY QUA HAN";
	normalBGColor();
	SetColor(WHITE);

	// in danh sach doc gia muon qua han theo thoi gian giam dan.
	int j = 0;
	for (int i = 0; i < ndg; i++)
	{
		if (ArrQuaHan[i].songayquahan > 0)
		{
			NODE_DG* p = Find_DG(t, ArrQuaHan[i].MADG);
			gotoxy(12, 6 + j);
			cout << p->DG.MADG;
			gotoxy(25, 6 + j);
			cout << p->DG.ho;
			gotoxy(50, 6 + j);
			cout << p->DG.ten;
			gotoxy(67, 6 + j);
			(p->DG.gioitinh == 0) ? cout << "NAM" : cout << "NU";
			gotoxy(82, 6 + j);
			(p->DG.trangthaithe == 0) ? cout << "KHOA" : cout << "HOAT DONG";
			gotoxy(108, 6 + j);
			cout << SoNgayQuaHan(p->mt);
			gotoxy(4, 6 + j);
			j++;
			cout << j;
		}
	}
	_getch();
	delete[] ArrQuaHan;
}



================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/DSDocGia.h
================================================
﻿#pragma once
#include <iostream>
#include "XuLyTam.h"
#include "Muon_Tra.h"
#include <string>
#include "GlobalVariable.h"
#include "Check_Nhap.h"
#include "Ve_Hinh.h"
#include "mylib.h"

using std::cout;
using std::string;

struct DocGia
{
	
	uint MADG;
	// std::string ho;
	string ho;
	string ten;
	
	uint gioitinh;
	uint trangthaithe;
	
};
typedef struct DocGia DOC_GIA;

struct NodeDG
{
	DOC_GIA DG;
	struct NodeDG *pLeft;
	struct NodeDG *pRight;
	LIST_MT mt;
};
typedef struct NodeDG NODE_DG;
typedef NODE_DG* TREE_DG;



//................................
struct QuaHan
{
	uint MADG;
	int songayquahan;
};

//................................

// khoi tao
void initTREE_DG(TREE_DG &t);

// kiem tra rong
bool IsEmpty(TREE_DG t);

// get node
NODE_DG* GetNode_DG(DOC_GIA dg);

//  them node vao tree DG
void InsertDTtoTree(TREE_DG &t, DOC_GIA dg);

// dem so luong doc gia
int countDG(TREE_DG tree);

// kiem tra MSDG co ton tai hay khong.
bool Check_MADG(TREE_DG  t, uint MADG);

// tra ve 1 so nguyen ngau nhien tu dong;
uint Random();

// Ham tra ve  MSDG la so nguyen ngau nhien tu dong va khong trung.
uint Random_MADG(TREE_DG t);

// find Min
NODE_DG* FindMin(TREE_DG t);

// tim doc gia bang ma doc gia, co tra ve dia chi , khong tra ve NULL
NODE_DG* Find_DG(TREE_DG t, uint MADG);

// neu xoa dc, thuc hien xoa roi tra ve true , khong tra ve false
bool IsDeleted_DG(TREE_DG &t, DOC_GIA dg);

//xoa  Output mot doc gia.
void Xoa_OutDG_1line(int locate);

// xoa Output 29 doc gia
void Xoa_OutDg_29lines();

// xuat thong tin cua mot DG ra man hinh console
void Output_DG(NODE_DG* dg);

// lay ten va ho
string Get_TenHO(DOC_GIA dg);

//Ap dung duyet theo thu tu Inoder de cac phan tu trong mang theo thu tu tang dan.
void Create_ArrMADG(TREE_DG t, uint* arr);

void Create_ArrTenHo(TREE_DG t, TEN_HO* arr);

// tao danh sach tam de xu ly.
void Creat_TEMPLIST(TREE_DG t, LIST_TEMPLIST &l, int &index);

void Swap_TenHo(TEN_HO &a, TEN_HO &b);

void QuicKsort_ARRTenHo(TEN_HO *th, int left, int right);

// ham cap nhat thong tin DG
void Update_DG(TREE_DG &t, DOC_GIA &dg, bool isEdited = false);

// output
void OutputDG_PerPage1(TREE_DG t, TEN_HO *arr, int index);

//  ham xuat ds DG theo thu tu ten ho tang dan
void OutputDG_PerPage2(TREE_DG t, uint* arr, int index);

// ham xuat danh sach DG theo thu tu MADG tang dan
void Output_ListDG2(TREE_DG t, uint *arr);

void OutputDG_PerPage(TREE_DG t, LIST_TEMPLIST l, int index);

int ChooseItems(TREE_DG &t, LIST_TEMPLIST &l, int tttrang, int tongtrang);

// ham xuat thong tin DG 
int Output_ListDG(TREE_DG &t, LIST_TEMPLIST &l, DOC_GIA &dg, int &tttrang);

void Menu_DocGia(TREE_DG &t);

void InDocGia(TREE_DG t);

// quick sort mang theo thu tu keyword giam dan
void Sort_QuaHan(QuaHan *ArrQuaHan, int q, int r);

//Duyệt cây theo thứ tự NLR (Preorder): Giai thuat khong de quy.
void DanhSachQuaHan(TREE_DG t);


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/GlobalVariable.cpp
================================================
#include "GlobalVariable.h"

int locate  = 0;
int index   = 0;
int nDG  = 0 ;
bool done = false;
string tensach = "";
string masach = "";
string vitrisach = "";
char dongthongbao[] = "          Press Any Key to continue !!!";


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/GlobalVariable.h
================================================
﻿#pragma once
#include <string>

using std::string;


// global variable
extern int locate ;
extern int index;
extern int nDG ;
extern bool done;
extern string tensach;
extern string masach;
extern string vitrisach;
extern char dongthongbao[];



// xem thử xóa choox này được không..... xóa thư viện này...


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/introduce.txt
================================================

           __       __  .______   .______          ___      .______     ____    ____ 
          |  |     |  | |   _  \  |   _  \        /   \     |   _  \    \   \  /   / 
          |  |     |  | |  |_)  | |  |_)  |      /  ^  \    |  |_)  |    \   \/   /  
          |  |     |  | |   _  <  |      /      /  /_\  \   |      /      \_    _/   
          |  `----.|  | |  |_)  | |  |\  \----./  _____  \  |  |\  \----.   |  |     
          |_______||__| |______/  | _| `._____/__/     \__\ | _| `._____|   |__|     
                                                                           
                                                
                
            __...--~~~~~-._   _.-~~~~~--...__                                                                          _  
          //               `V'               \\            _ __ ___   __ _ _ __   __ _  __ _  ___ _ __ ___   ___ _ __ | |_
         //                 |                 \\          | '_ ` _ \ / _` | '_ \ / _` |/ _` |/ _ \ '_ ` _ \ / _ \ '_ \| __|
        //__...--~~~~~~-._  |  _.-~~~~~~--...__\\         | | | | | | (_| | | | | (_| | (_| |  __/ | | | | |  __/ | | | |_ 
       //__.....----~~~~._\ | /_.~~~~----.....__\\        |_| |_| |_|\__,_|_| |_|\__,_|\__, |\___|_| |_| |_|\___|_| |_|\__|
      ====================\\|//====================		                       |___/
	                   ---`                                                                                     
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  
                                 


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Marcro.h
================================================
﻿#pragma once

//constant
#define MAX_DAUSACH  100

// Cac HotKey
// Quay con tro ve 1 don vi char
#define BACKSPACE 8
// OK
#define ENTER 13
// thoat truc tiep va ve Menu chinh
#define ESC  27
// Di len
#define KEY_UP 72
// Di xuong
#define KEY_DOWN 80
// Di qua trai
#define KEY_LEFT 75
// Di qua phai 
#define KEY_RIGHT 77
// Luu
#define KEY_F2 60
// Xoa
#define KEY_F3 61
// Hieu chinh
#define KEY_F4 62
// Save
#define KEY_F10 68
// Cuon page xuong duoi
#define PAGE_DOWN 81
// Cuon page len tren
#define PAGE_UP 73
// Khoang trang
#define SPACE  32
//  Tim kiem
#define KEY_F9 67

// Tro ve
#define TAB 9

// thay unsigned int thanh uint
typedef unsigned int uint;

// ma mau
#define AQUA 3
#define PURPLE 5
#define LIGHT_AQUA 11
#define LIGHT_YELLOW 14
#define LIGHT_GREEN 10 
#define BLACK 0
#define WHITE 7
#define GREEN 2
#define BRIGHT_WHITE 15
#define BLUE 1
#define LIGHT_RED 12


// size man hinh
#define GWIDTH 1100
#define GHEIGHT 650

// vi tri in ten, mssv, lop
#define xTen 53
#define yTen 22

// vitri khung loading
#define xLoading 15
#define yLoading 33


// vi tri menu chinh
#define xMainMenu 10
#define yMainMenu 12

// vi tri dong chu chay
#define xChuChay 45
#define yChuChay 30

//toa do max
#define xMax 132
#define yMax 35

//goc toa do
#define xOrdinal 0
#define yOrdinal 0

// Max Ma doc gia
#define Max_MADG 99999
// Min Ma doc Gia
#define Min_MADG 0

// toa do x cua SubMainMenus
#define xSubMainMenus1 40
#define xSubMainMenus2 52
#define xSubMainMenus3 52


// toa do y cua  bang hien thi
#define yDisplay 2

#define yDisplayMT 18

#define yDisplayTop10 5

// toa do t cua cac hoat key F2, F3, F4, F10
#define yHotkey 35

// vi tri Tieu de 
#define xTitle 97
#define yTitle 5

// chieu dai dai nhat cua ten
#define MAX_TEN 7

// chieu dai dai nhat cua ho 
#define MAX_HO 16

//chieu dai dai nhat cua ten sach
#define MAX_TENSACH 24

// chieu dai dai nhat cua ten tac gia
#define MAX_TENTG 17

// chieu dai dai nhat cua ISBN
#define MAX_ISBN 4

// chieu dai dai nhat cua the loai sach
#define MAX_THELOAISACH 11

// the de nhap trang thai va nhap phai
#define NHAP_TRANG_THAI 1
#define NHAP_PHAI 0

// vi tri dong chu thong bao
#define X_NOTIFY 74
#define Y_NOTIFY 19

// vi tri subMainMenu4 

#define xINDOCGIA 80
#define yINDOCGIA 20


// so luong dong xuat hien trong 1 bang thong tin
#define NUMBER_LINES  29


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Muon_Tra.cpp
================================================
﻿#include "Muon_Tra.h"

void initList_MT(LIST_MT &l)
{
	l.pHead = l.pTail = NULL;
	l.n = 0;
}

bool ListMTIsEmpty(LIST_DMS l)
{
	return l.pHead == NULL;
}

NODE_MT* GetNode_MT(MUON_TRA DATA)
{
	NODE_MT *p = new NODE_MT;
	if (p == NULL) {
		return NULL;
	}
	p->data = DATA;
	p->pNext = NULL;
	return (p);
}

void AddHeadList_MT(LIST_MT &l, MUON_TRA data)
{
	// tao Node
	NODE_MT *p = GetNode_MT(data);
	if (l.pHead == NULL) {
		l.pHead = l.pTail = p;
	}
	else
	{
		p->pNext = l.pHead;
		l.pHead = p;

	}
	++l.n;
}

void AddTailList_MT(LIST_MT &l, MUON_TRA data)
{
	// tao Node
	NODE_MT *p = GetNode_MT(data);
	if (l.pHead == NULL) {
		l.pHead = l.pTail = p;
	}
	else
	{
		l.pTail->pNext = p;
		l.pTail = p;
	}
	++l.n;
}

void ClearAll_ListMT(LIST_MT &l)
{
	NODE_MT * p;
	while (l.pHead != NULL)
	{
		p = l.pHead;
		l.pHead = l.pHead->pNext;
		delete p;
	}
}

bool SearchTenSach_MT(LIST_MT lMT, string tensach)
{
	for (NODE_MT * p = lMT.pHead; p != NULL; p = p->pNext)
	{
		if ((p->data.tensach == tensach && p->data.trangthai == 0) || (p->data.tensach == tensach && p->data.trangthai == 2))
		{
			return true;
		}
	}
	return false;
}

int SoSachDangMuon(LIST_MT lMT)
{
	int i = 0;
	for (NODE_MT * p = lMT.pHead; p != NULL; p = p->pNext)
	{
		if (p->data.trangthai == 0 || p->data.trangthai == 2)
		{
			i++;
		}
	}
	return i;
}

// ham kiem tra doc gia co lam mat sach hay khong? .Co thi tra lai 1, khong thi tra lai 0.
int MatSach(LIST_MT lMT)
{
	for (NODE_MT * p = lMT.pHead; p != NULL; p = p->pNext)
	{
		if ( p->data.trangthai == 2)
		{
			return 1;
		}
	}
	return 0;
}

int SoNgayMuon_Max(LIST_MT lMT)
{
	int max = 0;
	int nngay;
	for (NODE_MT * p = lMT.pHead; p != NULL; p = p->pNext)
	{
		if ((p->data.trangthai == 0) || (p->data.trangthai == 2))
		{
			nngay = KhoangCachNgay(p->data.ngaymuon);
			if (max < nngay)
			{
				max = nngay;
			}
		}
	}
	return max;

}

int SoNgayQuaHan(LIST_MT lMT)
{
	int nNgayMuonMax = SoNgayMuon_Max(lMT);
	return nNgayMuonMax - 15;
}

void Output_MT(NODE_MT * p, int i)
{
	gotoxy(XDisplayMT[0] + 2, 21 + i);
	cout << p->data.tensach;
	gotoxy(XDisplayMT[1] + 2, 21 + i);
	cout << p->data.MASACH;

	xuatNgayThang(p->data.ngaymuon, XDisplayMT[2] + 2, 21 + i);

	xuatNgayThang(p->data.ngaytra, XDisplayMT[3] + 3, 21 + i);

	gotoxy(XDisplayMT[4] + 9, 21 + i);
	cout << KhoangCachNgay(p->data.ngaymuon);
	gotoxy(XDisplayMT[5] + 6, 21 + i);
	cout << p->data.vitrisach;

	gotoxy(XDisplayMT[6] + 2, 21 + i);
	if (p->data.trangthai == 2)
		cout << " Lam Mat Sach";
	else if (KhoangCachNgay(p->data.ngaymuon) > 15)
		cout << " M. Qua 15 ngay";
	else if (p->data.trangthai == 0)
		cout << " Dang Muon";
	else if (p->data.trangthai == 1)
		cout << " Da Tra";
}

void XoaDisplay_MT(int i)
{
	gotoxy(XDisplayMT[0] + 1, 21 + i);
	cout << setw(XDisplayMT[1] - XDisplayMT[0] - 1) << setfill(' ') << " "; 
	gotoxy(XDisplayMT[1] + 1, 21 + i);
	cout << setw(XDisplayMT[2] - XDisplayMT[1] - 1) << setfill(' ') << " ";
	gotoxy(XDisplayMT[2] + 1, 21 + i);
	cout << setw(XDisplayMT[3] - XDisplayMT[2] - 1) << setfill(' ') << " ";
	gotoxy(XDisplayMT[3] + 1, 21 + i);
	cout << setw(XDisplayMT[4] - XDisplayMT[3] - 1) << setfill(' ') << " ";
	gotoxy(XDisplayMT[4] + 1, 21 + i);
	cout << setw(XDisplayMT[5] - XDisplayMT[4] - 1) << setfill(' ') << " ";
	gotoxy(XDisplayMT[5] + 1, 21 + i);
	cout << setw(XDisplayMT[6] - XDisplayMT[5] - 1) << setfill(' ') << " ";
	gotoxy(XDisplayMT[6] + 1, 21 + i);
	cout << setw(XDisplayMT[7] - XDisplayMT[6] - 1) << setfill(' ') << " ";
}

void OutputList_MT(LIST_MT lMT)
{
	int i = 0;

	// xoa display dau sach
	for (int j = 0; j < 3; j++)
	{
		XoaDisplay_MT(j);
	}

	// thuc hien ouput
	for (NODE_MT * p = lMT.pHead; p != NULL; p = p->pNext)
	{
		if ( p->data.trangthai == 0 || p->data.trangthai == 2)
		{
			Output_MT(p, i);
			i++;
		}
	}
}

void EffectiveMenu_MT(LIST_MT lMT, int pos, int flag)
{
	int i = 0;
	ShowCur(false);

	// get so sach dang muon trong danh sach.
	int n = SoSachDangMuon(lMT);

	// 0 --> 2;  2---> 1;  1---> 0
	if (flag == 1)
	{
		for (NODE_MT * p = lMT.pHead; p != NULL; p = p->pNext)
		{
			if (p->data.trangthai == 0 || p->data.trangthai == 2)
			{
				if (i == pos)
				{
					SetBGColor(GREEN);
					SetColor(BLACK);
					Output_MT(p, i);
					normalBGColor();
				}
				if (i == (pos + n - 1) % n)
				{
					
					SetColor(WHITE);
					Output_MT(p, i);
				}
				i++;
			}
		}
	}
	else if (flag == 2) {

		// 0 ---> 1; 1 ---> 2; 2 ---> 0
		for (NODE_MT * p = lMT.pHead; p != NULL; p = p->pNext)
		{
			if (p->data.trangthai == 0 || p->data.trangthai == 2)
			{
				if (i == pos)
				{
					SetBGColor(GREEN);
					SetColor(BLACK);
					Output_MT(p, i);
					normalBGColor();
				}
				if (i == (pos + 1) % n)
				{
					SetColor(WHITE);
					Output_MT(p, i);
				}
				i++;
			}
		}
	}
}

int chonItem_MT(LIST_MT lMT)
{
	int currpos = 0;
	ShowCur(false);

	// get so sach dang muon trong danh sach.
	int n = SoSachDangMuon(lMT);

	if (n == 0)
		return -1;

	// high light muc dau.
	int i = 0;
	for (NODE_MT * p = lMT.pHead; p != NULL, i != 1; p = p->pNext)
	{
		if (p->data.trangthai == 0 || p->data.trangthai == 2)
		{
			if (i == 0)
			{
				SetBGColor(GREEN);
				SetColor(BLACK);
				Output_MT(p, i);
				normalBGColor();
				i++;
			}
		}
	}
	// xu ly.
	int kb_hit;
	while (true)
	{
		if (_kbhit())
		{
			kb_hit = _getch();
			if (kb_hit == 224 || kb_hit == 0)
			{
				kb_hit = _getch();
			}
			switch (kb_hit)
			{
			case KEY_UP:
				if (currpos > 0)
				{
					currpos = currpos - 1;
				}
				else {

					currpos = n - 1;  // vi tri hien tai bang so so sach muon.
				}
				EffectiveMenu_MT(lMT, currpos, 2);
				break;

			case KEY_DOWN: 
				if (currpos <  n - 1)
				{
					currpos = currpos + 1;
				}
				else {
					currpos = 0;
				}
				EffectiveMenu_MT(lMT, currpos, 1);
				break;

			case ENTER: //enter
				Beep(600, 100);
				return currpos;
			}
		}
	}
}



================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Muon_Tra.h
================================================
#pragma once
#include "Ngay_Thang.h"
#include "DauSach.h"


struct MuonTra 
{
	string MASACH;
	NGAY_THANG ngaymuon;
	NGAY_THANG ngaytra;
	uint trangthai = 0;

	// them vao... khong co trong yeu cau
	string tensach;
	string vitrisach;
	
};
typedef struct MuonTra MUON_TRA;

struct NodeMuonTra
{
	MUON_TRA data;
	struct NodeMuonTra *pNext;
};
typedef struct NodeMuonTra NODE_MT;

struct ListMT
{
	// so phan tu
	int n;
	NODE_MT *pHead;
	NODE_MT *pTail;

};
typedef struct ListMT LIST_MT;

// ..... khoi tao........
void initList_MT(LIST_MT &l);

// kiem tra rong
bool ListMTIsEmpty(LIST_DMS l);

// get node
NODE_MT* GetNode_MT(MUON_TRA DATA);

void AddHeadList_MT(LIST_MT &l, MUON_TRA data);

void AddTailList_MT(LIST_MT &l, MUON_TRA data);


// thieu cai them sau nua	

void ClearAll_ListMT(LIST_MT &l);

bool SearchTenSach_MT(LIST_MT lMT, string tensach);

int SoSachDangMuon(LIST_MT lMT);

// ham kiem tra doc gia co lam mat sach hay khong? .Co thi tra lai 1, khong thi tra lai 0.
int MatSach(LIST_MT lMT);

int SoNgayMuon_Max(LIST_MT lMT);

int SoNgayQuaHan(LIST_MT lMT);

void Output_MT(NODE_MT * p, int i);

void XoaDisplay_MT(int i);

void OutputList_MT(LIST_MT lMT);

void EffectiveMenu_MT(LIST_MT lMT, int pos, int flag);

int chonItem_MT(LIST_MT lMT);


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/mylib.cpp
================================================
#include "mylib.h"

void resizeConsole(int width, int height)
{
	HWND console = GetConsoleWindow();
	RECT r;
	GetWindowRect(console, &r);
	MoveWindow(console, r.left, r.top, width, height, TRUE);
}

int wherex(void)
{
	HANDLE hConsoleOutput;
	hConsoleOutput = GetStdHandle(STD_OUTPUT_HANDLE);
	CONSOLE_SCREEN_BUFFER_INFO screen_buffer_info;
	GetConsoleScreenBufferInfo(hConsoleOutput, &screen_buffer_info);
	return screen_buffer_info.dwCursorPosition.X + 1;
}

int wherey(void)
{
	HANDLE hConsoleOutput;
	hConsoleOutput = GetStdHandle(STD_OUTPUT_HANDLE);
	CONSOLE_SCREEN_BUFFER_INFO screen_buffer_info;
	GetConsoleScreenBufferInfo(hConsoleOutput, &screen_buffer_info);
	return screen_buffer_info.dwCursorPosition.Y + 1;
}

// HANDLE hCon = GetStdHandle(STD_OUTPUT_HANDLE);
void gotoxy(int x, int y)
{
	COORD coord;
	coord.X = x;
	coord.Y = y;
	SetConsoleCursorPosition(
		GetStdHandle(STD_OUTPUT_HANDLE),
		coord
	);
}

void ShowCur(bool CursorVisibility)
{
	HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);
	CONSOLE_CURSOR_INFO cursor = { 1, CursorVisibility };
	SetConsoleCursorInfo(handle, &cursor);
}

void SetColor(WORD color)
{
	HANDLE hConsoleOutput;
	hConsoleOutput = GetStdHandle(STD_OUTPUT_HANDLE);
	CONSOLE_SCREEN_BUFFER_INFO screen_buffer_info;
	GetConsoleScreenBufferInfo(hConsoleOutput, &screen_buffer_info);

	WORD wAttributes = screen_buffer_info.wAttributes;
	color &= 0x000f;
	wAttributes &= 0xfff0;
	wAttributes |= color;

	SetConsoleTextAttribute(hConsoleOutput, wAttributes);
}

void SetBGColor(WORD color)
{
	HANDLE hConsoleOutput;
	hConsoleOutput = GetStdHandle(STD_OUTPUT_HANDLE);

	CONSOLE_SCREEN_BUFFER_INFO screen_buffer_info;
	GetConsoleScreenBufferInfo(hConsoleOutput, &screen_buffer_info);

	WORD wAttributes = screen_buffer_info.wAttributes;
	color &= 0x000f;
	color <<= 4;
	wAttributes &= 0xff0f;
	wAttributes |= color;

	SetConsoleTextAttribute(hConsoleOutput, wAttributes);
}

void cls(HANDLE hConsole)
{
	COORD coordScreen = { 0, 0 };    // home for the cursor 
	DWORD cCharsWritten;
	CONSOLE_SCREEN_BUFFER_INFO csbi;
	DWORD dwConSize;

	// Get the number of character cells in the current buffer. 

	if (!GetConsoleScreenBufferInfo(hConsole, &csbi))
		return;
	dwConSize = csbi.dwSize.X * csbi.dwSize.Y;

	// Fill the entire screen with blanks.

	if (!FillConsoleOutputCharacter(hConsole, (TCHAR) ' ',
		dwConSize, coordScreen, &cCharsWritten))
		return;

	// Get the current text attribute.
	if (!GetConsoleScreenBufferInfo(hConsole, &csbi))
		return;

	// Set the buffer's attributes accordingly.
	if (!FillConsoleOutputAttribute(hConsole, csbi.wAttributes,
		dwConSize, coordScreen, &cCharsWritten))
		return;

	// Put the cursor at its home coordinates.
	SetConsoleCursorPosition(hConsole, coordScreen);
}

void clrscr()
{
	HANDLE hCon = GetStdHandle(STD_OUTPUT_HANDLE);
	cls(hCon);
}

//bool GetKey(int key)
//{
//	return GetAsyncKeyState(key);
//}

void normalTextColor() {
	SetColor(LIGHT_YELLOW);
}

void normalBGColor()
{
	SetColor(LIGHT_YELLOW);
	SetBGColor(AQUA);
}

char getCursorChar()    /// Function which returns character on console's cursor position 
{
	char c = '\0';
	CONSOLE_SCREEN_BUFFER_INFO con;
	HANDLE hcon = GetStdHandle(STD_OUTPUT_HANDLE);
	if (hcon != INVALID_HANDLE_VALUE &&
		GetConsoleScreenBufferInfo(hcon, &con))
	{
		DWORD read = 0;
		if (!ReadConsoleOutputCharacterA(hcon, &c, 1,
			con.dwCursorPosition, &read) || read != 1
			)
			c = '\0';
	}
	return c;
}


char readChar(int x, int y)  /// Function which reads character at specific coordinates
{
	gotoxy(x, y);
	char ccccc = getCursorChar();
	return ccccc;
}


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/mylib.h
================================================
﻿#pragma once
#include <Windows.h>
#include "Marcro.h"
#include "GlobalVariable.h"


// thay doi kich thuoc cua so console
void resizeConsole(int width, int height);

//tra ve vi tri toa do x hien tai cua con tro dang dung(tren cot doc)
int wherex(void);

// tra ve vi tri toa do y hien tai cua con tro dang dung(tren cot ngang)
int wherey(void);

// ....... set mau cua nen chu....................
void SetBGColor(WORD color);

// dua con tro den toa do x:y
void gotoxy(int x, int y);

// An/ Hien con tro nhap nhay trong console
void ShowCur(bool CursorVisibility);

// Dat mau cho chu
void SetColor(WORD color);

//Xoa toan bo noi dung cua so console
void cls(HANDLE hConsole);

void clrscr();


// chu chuyen ve mau vang
void normalTextColor();
 
// nen chu chuyen ve xanh  va chu chuyen ve mau vang
void normalBGColor();


/// Function which returns character on console's cursor position 
char getCursorChar();    


/// Function which reads character at specific coordinates
char readChar(int x, int y); 



================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/N16DCCN116_NTPHONG.cpp
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/N16DCCN116_NTPHONG.vcxproj
================================================
<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{ED6E284B-BA4E-44A3-A7EF-1300EC03BD70}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>N16DCCN116NTPHONG</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.16299.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="DauSach.h" />
    <ClInclude Include="DSDocGia.h" />
    <ClInclude Include="GlobalVariable.h" />
    <ClInclude Include="Muon_Tra.h" />
    <ClInclude Include="Ve_Hinh.h" />
    <ClInclude Include="mylib.h" />
    <ClInclude Include="Marcro.h" />
    <ClInclude Include="Ngay_Thang.h" />
    <ClInclude Include="Check_Nhap.h" />
    <ClInclude Include="XuLyTam.h" />
    <ClInclude Include="Xu_Ly.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="Check_Nhap.cpp" />
    <ClCompile Include="DauSach.cpp" />
    <ClCompile Include="DSDocGia.cpp" />
    <ClCompile Include="GlobalVariable.cpp" />
    <ClCompile Include="Muon_Tra.cpp" />
    <ClCompile Include="mylib.cpp" />
    <ClCompile Include="N16DCCN116_NTPHONG.cpp" />
    <ClCompile Include="Ngay_Thang.cpp" />
    <ClCompile Include="Ve_Hinh.cpp" />
    <ClCompile Include="XuLyTam.cpp" />
    <ClCompile Include="Xu_Ly.cpp" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/N16DCCN116_NTPHONG.vcxproj.filters
================================================
﻿<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup>
    <Filter Include="Source Files">
      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>
      <Extensions>cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx</Extensions>
    </Filter>
    <Filter Include="Header Files">
      <UniqueIdentifier>{93995380-89BD-4b04-88EB-625FBE52EBFB}</UniqueIdentifier>
      <Extensions>h;hh;hpp;hxx;hm;inl;inc;xsd</Extensions>
    </Filter>
    <Filter Include="Resource Files">
      <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>
      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="Marcro.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="Check_Nhap.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="mylib.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="Ve_Hinh.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="Xu_Ly.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="DauSach.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="Ngay_Thang.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="Muon_Tra.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="DSDocGia.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="GlobalVariable.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="XuLyTam.h">
      <Filter>Header Files</Filter>
    </ClInclude>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="N16DCCN116_NTPHONG.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="DSDocGia.cpp">
      <Filter>Resource Files</Filter>
    </ClCompile>
    <ClCompile Include="XuLyTam.cpp">
      <Filter>Resource Files</Filter>
    </ClCompile>
    <ClCompile Include="Xu_Ly.cpp">
      <Filter>Resource Files</Filter>
    </ClCompile>
    <ClCompile Include="Ngay_Thang.cpp">
      <Filter>Resource Files</Filter>
    </ClCompile>
    <ClCompile Include="Ve_Hinh.cpp">
      <Filter>Resource Files</Filter>
    </ClCompile>
    <ClCompile Include="Muon_Tra.cpp">
      <Filter>Resource Files</Filter>
    </ClCompile>
    <ClCompile Include="DauSach.cpp">
      <Filter>Resource Files</Filter>
    </ClCompile>
    <ClCompile Include="Check_Nhap.cpp">
      <Filter>Resource Files</Filter>
    </ClCompile>
    <ClCompile Include="GlobalVariable.cpp">
      <Filter>Resource Files</Filter>
    </ClCompile>
    <ClCompile Include="mylib.cpp">
      <Filter>Resource Files</Filter>
    </ClCompile>
  </ItemGroup>
</Project>


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Ngay_Thang.cpp
================================================
#include "Ngay_Thang.h"

bool namNhuan(int year)
{
	return (((year % 4 == 0) && (year % 100 != 0)) ||
		(year % 400 == 0));
}

int ngayHopLe(NGAY_THANG nt)
{
	// return 0 chi ngay sai, 1 chi thang sai , 2 chi nam sai va 3 chi ngay gio dung format
	
	if (nt.nam > MAX_NAM || nt.nam < MIN_NAM)
		return 2;
	if (nt.thang < 1 || nt.thang > 12)
		return 1;
	if (nt.ngay < 1 || nt.ngay > 31)
		return 0;

	// xu ly thang 2 voi nam  nhuan
	if (nt.thang == 2)
	{
		if (namNhuan(nt.nam))
		{
			if (nt.ngay > 29)
				return 0;
		}
		else
		{
			if (nt.ngay > 28)
			{
				return 0;
			}
		}
	}
	if ((nt.thang == 4 || nt.thang == 6 || nt.thang == 9 || nt.thang == 11) && (nt.ngay > 30))
	{
		return 0;
	}
	return 3;
}

void xuatNgayThang(NGAY_THANG dt, int x, int y)
{
	gotoxy(x, y);
	cout << dt.ngay << " /";
	gotoxy(x + 4, y);
	cout << dt.thang << " /";
	gotoxy(x + 8, y);
	cout << dt.nam;
}

void LayNgayGioHT(NGAY_THANG &d)
{
	//    int ngay,thang,nam ;
	tm today;
	time_t ltime;
	time(&ltime);
	// today = localtime( &ltime );
	localtime_s(&today, &ltime);
	d.ngay = today.tm_mday;
	d.thang = today.tm_mon + 1;
	d.nam = today.tm_year + 1900;
}

int LayNamHT()
{
	tm today;
	time_t ltime;
	time(&ltime);
	// today = localtime( &ltime );
	localtime_s(&today, &ltime);
	return (today.tm_year + 1900);
}

int tinhNgay(NGAY_THANG dt)
{
	if (dt.thang < 3) {
		dt.nam--;
		dt.thang += 12;
	}
	return 365 * dt.nam + dt.nam / 4 - dt.nam / 10 + dt.nam / 400 + (153 * dt.thang - 457) / 5 + dt.ngay - 306;
}

int KhoangCachNgay(NGAY_THANG nt1)
{
	NGAY_THANG nt2;
	LayNgayGioHT(nt2);
	return (tinhNgay(nt2) - tinhNgay(nt1));
}

int SoSanhNgay(NGAY_THANG nt1, NGAY_THANG nt2)
{
	return (tinhNgay(nt2) - tinhNgay(nt1));
}



================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Ngay_Thang.h
================================================
#pragma once

#include <time.h>
#include <iostream>
#include "mylib.h"
#include "Marcro.h"
using std::cout;

// 1800 <  NAM < 9999
const int MAX_NAM = 9999;
const int MIN_NAM = 1800;

struct NgayThang
{
	uint ngay;
	uint thang;
	uint nam;
};
typedef struct NgayThang NGAY_THANG;

// kiem tra nam nhuan
bool namNhuan(int year);

// kiem tra ngay hop format hay khong?
int ngayHopLe(NGAY_THANG nt);

//xuat ngay thang
void xuatNgayThang(NGAY_THANG dt, int x, int y);

//  lay ngay gio he thong
void LayNgayGioHT(NGAY_THANG &d);

// lay nam tu he thong
int LayNamHT();

//ham tra ve  so ngay 
// nguon: http://mathforum.org/library/drmath/view/66535.html
int tinhNgay(NGAY_THANG dt);

// ham tinh khoang cach so ngay giua hai ngay da cho.
int KhoangCachNgay(NGAY_THANG nt1);


int SoSanhNgay(NGAY_THANG nt1, NGAY_THANG nt2);


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/QuanLyThuVien.txt
================================================

   ____                      _             _______ _            __      ___            
  / __ \                    | |           |__   __| |           \ \    / (_)           
 | |  | |_   _  __ _ _ __   | |    _   _     | |  | |__  _   _   \ \  / / _  ___ _ __  
 | |  | | | | |/ _` | '_ \  | |   | | | |    | |  | '_ \| | | |   \ \/ / | |/ _ \ '_ \ 
 | |__| | |_| | (_| | | | | | |___| |_| |    | |  | | | | |_| |    \  /  | |  __/ | | |
  \___\_\\__,_|\__,_|_| |_| |______\__, |    |_|  |_| |_|\__,_|     \/   |_|\___|_| |_|
                                    __/ |                                              
                                   |___/                                               



================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/stdafx.cpp
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/stdafx.h
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/targetver.h
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Ve_Hinh.cpp
================================================
#include "Ve_Hinh.h"

string keyMainMenu[5] = { " ***MENU CHINH*** ", "QUAN LY DOC GIA", "QUAN LY DAU SACH ", "QUAN LY SACH", "THOAT" };

string keySubMainMenu3[3] = { "      ~~~ TRA SACH ~~~      ",
								"~~~ SACH MUON NHIEU NHAT ~~~",
								"      ~~~ MUON SACH ~~~     " };
								
string keySubMainMenu2[3] = { "   ~~~ CAP NHAT DAU SACH ~~~  ",
							" ~~~ HIEN THI CAC DAU SACH ~~~" ,
							" ~~~CAP NHAT DANH MUC SACH ~~~"};


string keySubMainMenu1[3] = { "           ~~~ CAP NHAT DOC GIA ~~~                ",
							"    ~~~ HIEN THI DANH SACH TAT CA DOC GIA ~~~      ",
							" ~~~ HIEN THI DS CAC DOC GIA MUON SACH QUA HAN ~~~ " };


string keyBangNhapDauSach[14] = {   "               ~~~CAP NHAT DAU SACH~~~               ",
									"                                                     ",
									" Ten Sach     :",
									"                                                     ",
									" ISBN         :",
									"                                                     ",
									" Tac Gia      :",
									"                                                     ",
									" The Loai     :",
									"                                                     ",
									" So Trang     :",
									"                                                     ",
									" Nam Xuat Ban :",
									"                                                     " };


string keyBangNhapDanhMucSach[8] = {"                    ~~~CAP NHAT DANH MUC SACH~~~                   ",
								    "                                                                   ",
								   " Ma Sach           :",
								   "                                                                   ",
								   " Trang Thai[0,1,2] :",
								   "                                                                   ",
								   " Vi tri cua sach   :",
								   "                                                                   " };

string keyBangNhapDG[12] = { "               ~~~ CAP NHAT DOC GIA ~~~                     ",
							"                                                            ",
							" Ma Doc Gia   :",
							"                                                            ",
							" Ho Doc Gia   :",
							"                                                            ",
							" Ten Doc Gia  :",
							"                                                            ",
							" Phai [0, 1]  :",
							"                                                            ",
							" TT the [0, 1]:",
							"                                                            ", };



string keyDisplayDG[5] = { "MA DG", "     HO DG", "TEN DG", "PHAI  ", "TT THE" };

string keyDisplayDS[6] = {"        DAU SACH", "ISBN", "    TAC GIA", "  THE LOAI ", " SO TRG ", " NXB"};

string keyDisplayDMS[3] = { "MA SACH", "TRANG THAI", "            VI TRI" };

string keyDisplayMT[7] = { "          TEN SACH", "MA SACH", "   NGAY MUON", "   NGAY TRA", "SO NGAY DA MUON", "        VI TRI SACH", "  TRANG THAI"};

string keyDisplayTop10[3] = { "   SO THU TU", "          TEN SACH", " SO LUOT MUON SACH THUOC DAU SACH" };

string keyGuide1[6] = { "                       ~~~GUIDES~~~                         ",
						"-> MA DOC GIA    : Duoc chuong trinh lay ngau nhien.        ",
						"-> HO DOC GIA    : Toi da 16 ky tu, chi lay ky tu chu.      ",
						"-> TEN DOC GIA   : Toi da 7 ky tu, chi lay ky tu chu.       ",
						"-> PHAI          : 0 =  NAM, 1 = NU.                        ",
						"-> TRANG THAI THE: 0 = The bi khoa, 1 = The dang hoat dong. " };

string keyGuide2[7] = { "                     ~~~GUIDES~~~                   ",
						"-> TEN SACH     : Toi da 24 ky tu, gom co chu va so ",
						"-> ISBN         : Toi da 4 ky tu, chi lay ky tu chu ",
						"-> TAC GIA      : Toi da 17 ky tu, chi lay ky tu chu" ,
						"-> THE LOAI     : Toi da 11 ky tu, chi lay ky tu chu" ,
						"-> SO TRANG     : So trang khong qua 999999         " ,
						"-> NAM XUAT BAN : Nam XB khong lon hon nam hien tai " };


string keyGuide3[4] = { "                         ~~~GUIDES~~~                             ",
					   "-> MA SACH  :  Ma Sach duoc danh tu dong                           ",
					   "-> TT       :0  = cho muon duoc, 1 = da duoc muon, 2 = da thanh ly",
					   "-> VI TRI   : Toi da 17 ky tu, chi lay ky tu chu, so va dau phay   "};


int xDisplayDG[6] = { 3,13, 32,46,53,65 };
int xDisplayDS[7] = { 1, 29, 34, 53, 65, 72 , 78 };
int xDisplayDMS[4] = { 2, 14,29,64 };
int XDisplayMT[8] = { 2, 30, 39, 55, 70, 88, 115, 132};
int xDisplayTop10[4] = { 30, 45, 77, 112 };

int xMainMenus[5] = { 8,34,60, 89,113 };
int ySubMainMenus1[3] = { 20, 24, 28};
int ySubMainMenus2[3] = { 22, 26, 30 };
int ySubMainMenus3[3] = { 20,23,26 };

void CreateBox(int x, int y, string text, int length)
{
	gotoxy(x - 2, y - 1);
	cout << char(201) << setw(length) << setfill(char(205)) << char(205) << char(187);

	gotoxy(x - 2, y);
	cout << char(186) << text << setw(length - text.length() + 1) << setfill(' ') << char(186);

	gotoxy(x - 2, y + 1);
	cout << char(200) << setw(length) << setfill(char(205)) << char(205) << char(188);
}

void chuChay(char dChu[], int x, int y)
{
	SetColor(WHITE);
	ShowCur(false);
	char c[40];
	int length = (int)strlen(dChu);
	for (int i = 0; i < length; i++) {
		strncpy(c, dChu + i, 40);  // copy tu phan tu thu i den cuoi chuoi
		c[39] = '\0';
		Sleep(100);
		gotoxy(x, y);
		cout << "                                       ";
		gotoxy(x, y); // vi tri de in dong chu chay
		cout << c;
		if (i == length - 1) i = 0;  // chay vo han

		if (_kbhit()) {
			normalBGColor();
			return;  // Co phim nhan vao thi dung
		}
	}
}

void VeHinhBangNhap(int x, int y, int dorong, string str)
{
	SetBGColor(LIGHT_AQUA);
	SetColor(BLUE);
	gotoxy(x, y - 1);
	cout << setw(dorong) << setfill(' ') << " ";
	gotoxy(x, y );
	cout << setw(dorong) << setfill(' ') << " ";
	gotoxy(x, y + 1);
	cout << setw(dorong) << setfill(' ') << " ";
	gotoxy(x + (int)str.length()/ 3, y + 1);
	cout << setw((int)str.length() / 3  + 3) << setfill('~') << "~";
	
	gotoxy(x, y );
	cout << str;
	gotoxy(x, y + 2);
	cout << setw(4) << setfill(' ') << " ";
	gotoxy(x + dorong - 4, y + 2);
	cout << setw(4) << setfill(' ') << " ";
	gotoxy(x, y + 3);
	cout << setw(dorong) << setfill(' ') << " ";
	normalBGColor();
}

void CayLoading(int Color)
{
	SetColor(Color);
	for (int i = xLoading; i <= xLoading + 100; i++)
	{
		gotoxy(i, yLoading);
		Sleep(15);
		cout << char(219);
	}
}

void VeKhungMenu()
{
	ShowCur(false);
	int i;
	gotoxy(xOrdinal, yOrdinal);
	// ve hang ngang tren
	for (i = 0; i <= xMax; i++)
	{
		SetColor(WHITE);
		cout << char(219);
	}

	// ve hang ngang duoi
	gotoxy(xOrdinal, yOrdinal + 15);
	for (i = 0; i <= xMax; i++)
	{
		SetColor(WHITE);
		cout << char(219);
	}

	// ve hang doc trai
	for (int i = 0; i < yOrdinal + 15; i++)
	{
		gotoxy(xOrdinal, yOrdinal + i);
		SetBGColor(WHITE);
		cout << "  ";
	}

	// ve hang doc phai
	for (int i = 0; i < yOrdinal + 15; i++)
	{
		gotoxy(xMax - 1, yOrdinal + i);
		SetBGColor(WHITE);
		cout << "   ";
	}
}

void XoaMotDong(int width)
{
	SetBGColor(AQUA);
	cout << " " << setw(width) << setfill(' ') << " ";
}

void XoaMotVung(int x, int y, int ndoc, int width)
{
	for (int i = 0; i < ndoc; i++)
	{
		gotoxy(x, y + i);
		XoaMotDong(width);
	}
}

void HighLight(string key, int index, int newColor, int oldColor)
{
	// den dia chi can highlight
	gotoxy(xMainMenus[index] - 1, yMainMenu);
	SetBGColor(newColor);
	SetColor(WHITE);
	cout << key;
	SetBGColor(oldColor);
}

void HighLight1(string key, int index, int x, int y[], int newColor, int oldColor)
{
	// den dia chi can highlight
	gotoxy(x - 1, y[index]);
	SetBGColor(newColor);
	SetColor(WHITE);
	cout << key;
	SetBGColor(oldColor);
}

void MainMenu(string key[], int nKey)
{
	normalBGColor();
	for (int i = 0; i < nKey; i++)
	{
		CreateBox(xMainMenus[i], yMainMenu, key[i],(int)key[i].length());
	}
}

void SubMainMenu1(string key[], int nKey)
{
	normalBGColor();
	SetBGColor(BLACK);
	for (int i = 0; i < nKey; i++)
	{
		CreateBox(xSubMainMenus1, ySubMainMenus1[i], key[i], (int)key[i].length());
	}
	HighLight1(keySubMainMenu1[0], 0, xSubMainMenus1, ySubMainMenus1, GREEN, AQUA);
	ShowCur(false);
}

void SubMainMenu2(string key[], int nKey)
{
	normalBGColor();
	SetBGColor(BLACK);
	for (int i = 0; i < nKey; i++)
	{
		CreateBox(xSubMainMenus2, ySubMainMenus2[i], key[i], (int)key[i].length());
	}
	HighLight1(keySubMainMenu2[0], 0, xSubMainMenus2, ySubMainMenus2, GREEN, AQUA);
	ShowCur(false);
}

void SubMainMenu3(string key[], int nKey)
{
	normalBGColor();
	SetBGColor(BLACK);
	for (int i = 0; i < nKey; i++)
	{
		CreateBox(xSubMainMenus3, ySubMainMenus3[i], key[i],(int)key[i].length());
	}
	HighLight1(keySubMainMenu3[0], 0, xSubMainMenus3, ySubMainMenus3, GREEN, AQUA);
	ShowCur(false);
}

void EffectiveMenu(int pos, int flag)
{
	// 0 --> 3; 3 --> 2;   2---> 1;  1---> 0
	if (flag == 1)
	{
		ShowCur(false);
		gotoxy(xMainMenus[pos + 1] - 1, yMainMenu);
		SetBGColor(GREEN);
		SetColor(WHITE);
		cout << keyMainMenu[pos + 1];

		gotoxy(xMainMenus[(pos + 3) % 4 + 1] - 1, yMainMenu);
		normalBGColor();
		cout << keyMainMenu[(pos + 3) % 4 + 1];
	}
	else if (flag == 2) {

		// 0 ---> 1; 1 ---> 2; 2 ----> 3 ; 3 ---> 0
		ShowCur(false);

		gotoxy(xMainMenus[pos + 1] - 1, yMainMenu);
		SetBGColor(GREEN);
		SetColor(WHITE);
		cout << keyMainMenu[pos + 1];

		gotoxy(xMainMenus[(pos + 1) % 4 + 1] - 1, yMainMenu);
		normalBGColor();
		cout << keyMainMenu[(pos + 1) % 4 + 1];
	}
}

void EffectiveSubMenu(string key[], int xSubMenu, int ykey[], int nkey, int pos, int flag)
{
	// 0 --> 3; 3 --> 2;   2---> 1;  1---> 0
	if (flag == 1)
	{
		ShowCur(false);

		gotoxy(xSubMenu - 1, ykey[pos]);
		SetBGColor(GREEN);
		SetColor(WHITE);
		cout << key[pos];

		gotoxy(xSubMenu - 1, ykey[(pos + nkey - 1) % nkey]);
		SetBGColor(BLACK);
		SetColor(LIGHT_YELLOW);
		cout << key[(pos + nkey - 1) % nkey];
	}
	else if (flag == 2) 
	{
		// 0 ---> 1; 1 ---> 2; 2 ----> 3 ; 3 ---> 0
		ShowCur(false);

		gotoxy(xSubMenu - 1, ykey[pos]);
		SetBGColor(GREEN);
		SetColor(WHITE);
		cout << key[pos];

		gotoxy(xSubMenu - 1, ykey[(pos + 1) % nkey]);
		SetBGColor(BLACK);
		SetColor(LIGHT_YELLOW);
		cout << key[(pos + 1) % nkey];
	}
}

int ChooseMainMenu(int nKey)
{
	int currposMainMenu = -1;
	ShowCur(false);

	int kb_hit;
	while (true)
	{
		if (_kbhit())
		{
			kb_hit = _getch();
			if (kb_hit == 224 || kb_hit == 0)
			{
				kb_hit = _getch();
			}

			switch (kb_hit)
			{
			case KEY_LEFT:

				Beep(500, 50);
				if (currposMainMenu > 0)
				{
					currposMainMenu = currposMainMenu - 1;
				}
				else {
					currposMainMenu = nKey - 2;
				}

				EffectiveMenu(currposMainMenu, 2);
				break;

			case KEY_RIGHT: //key right
				Beep(400, 50);
				if (currposMainMenu < nKey - 2)
				{
					currposMainMenu = currposMainMenu + 1;
				}
				else {
					currposMainMenu = 0;//move to first value in menu system
				}
				EffectiveMenu(currposMainMenu, 1);
				break;

			case ENTER: //enter
				Beep(600, 50);
				return currposMainMenu;

			}
		}
	}

}


int ChooseSubMenu(string key[], int xSubMenu, int ykey[], int nkey)
{
	int currposSubMainMenu = 0;
	ShowCur(false);

	int kb_hit;
	while (true)
	{
		if (_kbhit())
		{
			kb_hit = _getch();
			if (kb_hit == 224 || kb_hit == 0)
				kb_hit = _getch();

			switch (kb_hit)
			{
			case KEY_UP:
				if (currposSubMainMenu > 0)
				{
					currposSubMainMenu = currposSubMainMenu - 1;
				}
				else {
					currposSubMainMenu = nkey - 1;
				}

				EffectiveSubMenu(key, xSubMenu, ykey, nkey, currposSubMainMenu, 2);
				Beep(300, 10);
				break;

			case KEY_DOWN:
				if (currposSubMainMenu < nkey - 1)
				{
					currposSubMainMenu = currposSubMainMenu + 1;
				}
				else {
					currposSubMainMenu = 0;
				}

				EffectiveSubMenu(key, xSubMenu, ykey, nkey, currposSubMainMenu, 1);
				Beep(250, 10);
				break;

			case ESC:

				return -1;

			case ENTER:
				Beep(600, 10);
				return currposSubMainMenu;
			}
		}
	}
}

// ham hien thi bang thong tin
void DisplayDG(string key[], int nKey, int xDisplay[])
{
	ShowCur(true);
	normalBGColor();

	// hien thi cac danh muc trong bang hien thi
	for (int i = 0; i < nKey; i++)
	{
		gotoxy(xDisplay[i] + 3, yDisplay + 1);
		cout << key[i];
	}

	//hien thi cot hai ben 
	SetColor(WHITE);
	for (int j = yDisplay; j <= yDisplay + 32; j++)
	{
		for (int i = 0; i < nKey + 1; i++)
		{
			gotoxy(xDisplay[i], j);

			cout << char(186);
		}
	}

	//hien thi dong hai ben
	for (int i = xDisplay[0]; i <= xDisplay[nKey]; i++)
	{
		gotoxy(i, yDisplay);
		if (i == xDisplay[1] || i == xDisplay[2] || i == xDisplay[3] || i == xDisplay[4])
			cout << char(203);//nga 3
		else if (i == xDisplay[0])
		{
			cout << char(201); //moc phai
		}
		else if (i == xDisplay[nKey])
		{
			cout << char(187);//moc trai
		}
		else
		{
			cout << char(205); //duong thang ngang
		}

		gotoxy(i, yDisplay + 2);
		if (i == xDisplay[1] || i == xDisplay[2] || i == xDisplay[3] || i == xDisplay[4])
			cout << char(206); //nga 4
		else if (i == xDisplay[0])
		{
			cout << char(204); //nga 3 sang phai
		}
		else if (i == xDisplay[nKey])
		{
			cout << char(185);//nga 3 sang trai
		}
		else
		{
			cout << char(205); //duong thang ngang
		}

		gotoxy(i, yDisplay + 32);
		if (i == xDisplay[nKey])
		{
			cout << char(188); //nga 3 sang trai
		}
		else if (i == xDisplay[1] || i == xDisplay[2] || i == xDisplay[3] || i == xDisplay[4])
			cout << char(202);
		else if (i == xDisplay[0])
			cout << char(200); //nga 3 sang phai
		else
		{
			cout << char(205); //duong thang ngang
		}
	}
}

void DisplayDS(string key[], int nKey, int xDisplay[])
{
	normalBGColor();

	// hien thi cac danh muc trong bang hien thi
	for (int i = 0; i < nKey; i++)
	{
		gotoxy(xDisplay[i] + 1, yDisplay + 1);
		cout << key[i];
	}

	//hien thi cot hai ben 
	SetColor(WHITE);
	for (int j = yDisplay; j <= yDisplay + 32; j++)
	{
		for (int i = 0; i < nKey + 1; i++)
		{
			gotoxy(xDisplay[i], j);

			cout << char(186);
		}
	}

	//hien thi dong hai ben
	for (int i = xDisplay[0]; i <= xDisplay[nKey]; i++)
	{

		gotoxy(i, yDisplay);
		if (i == xDisplay[1] || i == xDisplay[2] || i == xDisplay[3] || i == xDisplay[4]  || i == xDisplay[5])
			cout << char(203);//nga 3
		else if (i == xDisplay[0])
		{
			cout << char(201); //moc phai
		}
		else if (i == xDisplay[nKey])
		{
			cout << char(187);//moc trai
		}
		else
		{
			cout << char(205); //duong thang ngang
		}

		gotoxy(i, yDisplay + 2);
		if (i == xDisplay[1] || i == xDisplay[2] || i == xDisplay[3] || i == xDisplay[4] || i == xDisplay[5])
			cout << char(206); //nga 4
		else if (i == xDisplay[0])
		{
			cout << char(204); //nga 3 sang phai
		}
		else if (i == xDisplay[nKey])
		{
			cout << char(185);//nga 3 sang trai
		}
		else
		{
			cout << char(205); //duong thang ngang
		}

		gotoxy(i, yDisplay + 32);
		if (i == xDisplay[0])
		{
			cout << char(200); //qeo sang phai
		}
		else if (i == xDisplay[nKey])
		{
			cout << char(188); //qeo sang trai
		}
		else if (i == xDisplay[1] || i == xDisplay[2] || i == xDisplay[3] || i == xDisplay[4] || i == xDisplay[5])
			cout << char(202);
		else
		{
			cout << char(205); //duong thang ngang
		}
	}
}

// ham hien thi bang thong tin
void DisplayDMS(string key[], int nKey, int xDisplay[])
{
	ShowCur(true);
	normalBGColor();

	// hien thi cac danh muc trong bang hien thi
	for (int i = 0; i < nKey; i++)
	{
		gotoxy(xDisplay[i] + 3, yDisplay + 1);
		cout << key[i];
	}

	//hien thi cot hai ben 
	SetColor(WHITE);
	for (int j = yDisplay; j <= yDisplay + 32; j++)
	{
		for (int i = 0; i < nKey + 1; i++)
		{
			gotoxy(xDisplay[i], j);

			cout << char(186);
		}
	}

	//hien thi dong hai ben
	for (int i = xDisplay[0]; i <= xDisplay[nKey]; i++)
	{

		gotoxy(i, yDisplay);
		if (i == xDisplay[1] || i == xDisplay[2] || i == xDisplay[3])
			cout << char(203);//nga 3
		else if (i == xDisplay[0])
		{
			cout << char(201); //moc phai
		}
		else if (i == xDisplay[nKey])
		{
			cout << char(187);//moc trai
		}
		else
		{
			cout << char(205); //duong thang ngang
		}

		gotoxy(i, yDisplay + 2);
		if (i == xDisplay[1] || i == xDisplay[2] || i == xDisplay[3] )
			cout << char(206); //nga 4
		else if (i == xDisplay[0])
		{
			cout << char(204); //nga 3 sang phai
		}
		else if (i == xDisplay[nKey])
		{
			cout << char(185);//nga 3 sang trai
		}
		else
		{
			cout << char(205); //duong thang ngang
		}

		gotoxy(i, yDisplay + 32);
		if (i == xDisplay[nKey])
		{
			cout << char(188); //nga 3 sang trai
		}
		else if (i == xDisplay[1] || i == xDisplay[2] || i == xDisplay[3] )
			cout << char(202);
		else if (i == xDisplay[0])
			cout << char(200); //nga 3 sang phai
		else
		{
			cout << char(205); //duong thang ngang
		}
	}
}

void DisplayMT(string key[], int nKey, int xDisplay[])
{
	normalBGColor();
	ShowCur(false);
	// hien thi cac danh muc trong bang hien thi
	for (int i = 0; i < nKey; i++)
	{
		gotoxy(xDisplay[i] + 1, yDisplayMT + 1);
		cout << key[i];
	}

	//hien thi cot hai ben 
	SetColor(WHITE);
	for (int j = yDisplayMT; j <= yDisplayMT + 6; j++)
	{
		for (int i = 0; i < nKey + 1; i++)
		{
			gotoxy(xDisplay[i], j);
			cout << char(186);
		}
	}

	//hien thi dong hai ben
	for (int i = xDisplay[0]; i <= xDisplay[nKey]; i++)
	{

		gotoxy(i, yDisplayMT);
		if (i == xDisplay[1] || i == xDisplay[2] || i == xDisplay[3] || i == xDisplay[4] || i == xDisplay[5] || i == xDisplay[6])
			cout << char(203);//nga 3
		else if (i == xDisplay[0])
		{
			cout << char(201); //moc phai
		}
		else if (i == xDisplay[nKey])
		{
			cout << char(187);//moc trai
		}
		else
		{
			cout << char(205); //duong thang ngang
		}

		gotoxy(i, yDisplayMT + 2);
		if (i == xDisplay[1] || i == xDisplay[2] || i == xDisplay[3] || i == xDisplay[4] || i == xDisplay[5] || i == xDisplay[6])
			cout << char(206); //nga 4
		else if (i == xDisplay[0])
		{
			cout << char(204); //nga 3 sang phai
		}
		else if (i == xDisplay[nKey])
		{
			cout << char(185);//nga 3 sang trai
		}
		else
		{
			cout << char(205); //duong thang ngang
		}

		gotoxy(i, yDisplayMT + 6);
		if (i == xDisplay[0])
		{
			cout << char(200); //qeo sang phai
		}
		else if (i == xDisplay[nKey])
		{
			cout << char(188); //qeo sang trai
		}
		else if (i == xDisplay[1] || i == xDisplay[2] || i == xDisplay[3] || i == xDisplay[4] || i == xDisplay[5] || i == xDisplay[6])
			cout << char(202);
		else
		{
			cout << char(205); //duong thang ngang
		}
	}
}

void DisplayTop10(string key[], int nKey, int xDisplay[], int ndoc)
{
	normalBGColor();
	ShowCur(false);
	// hien thi cac danh muc trong bang hien thi
	for (int i = 0; i < nKey; i++)
	{
		gotoxy(xDisplay[i] + 1, yDisplayTop10 );
		cout << key[i];
	}

	//hien thi cot hai ben 
	SetColor(WHITE);
	for (int j = yDisplayTop10; j <= yDisplayTop10 + ndoc; j++)
	{
		for (int i = 0; i < nKey + 1; i++)
		{
			gotoxy(xDisplay[i], j);
			cout << char(186);
		}
	}

	//hien thi dong hai ben
	for (int i = xDisplay[0]; i <= xDisplay[nKey]; i++)
	{

		gotoxy(i, yDisplayTop10 - 1);
		if (i == xDisplay[1] || i == xDisplay[2] || i == xDisplay[3] )
			cout << char(203);//nga 3
		else if (i == xDisplay[0])
		{
			cout << char(201); //moc phai
		}
		else if (i == xDisplay[nKey])
		{
			cout << char(187);//moc trai
		}
		else
		{
			cout << char(205); //duong thang ngang
		}

		gotoxy(i, yDisplayTop10 + 1);
		if (i == xDisplay[1] || i == xDisplay[2] || i == xDisplay[3] )
			cout << char(206); //nga 4
		else if (i == xDisplay[0])
		{
			cout << char(204); //nga 3 sang phai
		}
		else if (i == xDisplay[nKey])
		{
			cout << char(185);//nga 3 sang trai
		}
		else
		{
			cout << char(205); //duong thang ngang
		}

		gotoxy(i, yDisplayTop10 + ndoc);
		if (i == xDisplay[0])
		{
			cout << char(200); //qeo sang phai
		}
		else if (i == xDisplay[nKey])
		{
			cout << char(188); //qeo sang trai
		}
		else if (i == xDisplay[1] || i == xDisplay[2] || i == xDisplay[3] )
			cout << char(202);
		else
		{
			cout << char(205); //duong thang ngang
		}

	}
}

void BangNhap(int x, int y, int nngang, string key[], int nkey)
{
	int i;
	// ve khung
	SetBGColor(BLACK);
	SetColor(WHITE);
	for (i = 0; i < nkey + 2; i++)
	{
		gotoxy(x, y + i);
		if (i == 0)
		{
			cout << char(218) << setw(nngang) << setfill(char(196)) << char(191);
		}
		else if (i == nkey + 1)
		{
			cout << char(192) << setw(nngang) << setfill(char(196)) << char(217);
		}
		else {
			cout << char(245);
			cout << key[i - 1];
			gotoxy(x + nngang, y + i);
			cout << char(245);
		}
	}
	normalBGColor();
}

void BangGuides(int x, int y, int nngang, string key[], int nkey)
{
	int i;
	// ve khung
	SetBGColor(BLACK);
	SetColor(GREEN);
	for (i = 0; i < nkey + 2; i++)
	{
		gotoxy(x, y + i);
		if (i == 0)
		{
			cout << char(218) << setw(nngang) << setfill(char(196)) << char(191);
		}
		else if (i == nkey + 1)
		{
			cout << char(192) << setw(nngang) << setfill(char(196)) << char(217);
		}
		else {
			cout << char(245);
			cout << key[i - 1];
			gotoxy(x + nngang, y + i);
			cout << char(245);
		}
	}
	normalBGColor();
}


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Ve_Hinh.h
================================================
﻿#pragma once

#include <iostream>
#include "Marcro.h"
#include "mylib.h"
#include <string>
#include <conio.h>
#include <stdio.h>
#include <iomanip>      // std::setw, setfill

using std::string;  
using std::cout;
using std::setw;
using std::setfill;
	
// Ten cac danh muc trong Menu chinh
extern string keyMainMenu[5];
// Ten cac danh muc trong Menu con
extern string keySubMainMenu3[3];
extern string keySubMainMenu2[3];
extern string keySubMainMenu1[3];
extern string keyBangNhapDauSach[14];
extern string keyBangNhapDanhMucSach[8];
extern string keyBangNhapDG[12];

// ten cac danh muc hien thi  trong bang hien thi doc gia
extern string keyDisplayDG[5];

// ten cac danh muc hien thi trong bang hien thi dau sach
extern string keyDisplayDS[6];

// ten cac danh muc hien thi trong bang hien thi danh muc sach.
extern string keyDisplayDMS[3];

// ten cac danh muc hien thi trong bang hien thi danh sach muon tra.
extern string keyDisplayMT[7];

// ten cac danh muc hien thi trong bang hien thi Top10
extern string keyDisplayTop10[3];

// ten cac danh muc trong muc Guides
extern string keyGuide1[6];
extern string keyGuide2[7];
extern string keyGuide3[4];

// Cac diem toa do x trong bang hien thi doc gia
extern int xDisplayDG[6];

//Cac diem toa do x trong bang hien thi dau sach
extern int xDisplayDS[7];

//Cac diem toa do x trong bang hien thi danh muc sach
extern int xDisplayDMS[4];

//cac diem toa do x trong bang hien thi danh sach muon tra.
extern int XDisplayMT[8];

// cac diem toa do x trong bang hien thi Top10
extern int xDisplayTop10[4];

// Cac diem toa do x trong main menu
extern int xMainMenus[5];

// Cac diem toa do y trong  menu con
extern int ySubMainMenus1[3];
extern int ySubMainMenus2[3];
extern int ySubMainMenus3[3];

// tao o hinh chu nhat thay doi theo chieu dai text truyen vao
void CreateBox(int x, int y, string text, int length);

// in ra dong chu chay vao console
void chuChay(char dChu[], int x, int y);

// ve hinh bang nhap.
void VeHinhBangNhap(int x, int y, int dorong, string str);

//ve cay loading
void CayLoading(int Color);

//ve khung vien
void VeKhungMenu();

// xoa mot dong
void XoaMotDong(int width);

// xoa mot phan man hinh
void XoaMotVung(int x, int y, int ndoc, int width);

// highlight o Main Menu
void HighLight(string key, int index, int newColor, int oldColor);

// highlight o Menu con
void HighLight1(string key, int index, int x, int y[], int newColor, int oldColor);

// ve Menu chinh
void MainMenu(string key[], int nKey);

// ve cac Menu con
void SubMainMenu1(string key[], int nKey);

void SubMainMenu2(string key[], int nKey);

void SubMainMenu3(string key[], int nKey);

void EffectiveMenu(int pos, int flag);

void EffectiveSubMenu(string key[], int xSubMenu, int ykey[], int nkey, int pos, int flag);

//hieu ung chon cac muc trong MainMenu
int ChooseMainMenu(int nKey);

//hieu ung chon cac muc trong SubMenu
int ChooseSubMenu(string key[], int xSubMenu, int ykey[], int nkey);

// ham hien thi bang thong tin dau sach
void DisplayDS(string key[], int nKey, int xDisplay[]);

// ham hien thi bang thong tin doc gia
void DisplayDG(string key[], int nKey, int xDisplay[]);

//   ham hien thi bang thong tin danh muc sach
void DisplayDMS(string key[], int nKey, int xDisplay[]);

//  ham hien thi bang thong tin danh sach muon tra.
void DisplayMT(string key[], int nKey, int xDisplay[]);


// ham hien thi bang thong tin Top10
void DisplayTop10(string key[], int nKey, int xDisplay[], int ndoc);

// ve bang nhap thong tin
void BangNhap(int x, int y, int nngang, string key[], int nkey);

// ve bang huong dan Guides
void BangGuides(int x, int y, int nngang, string key[], int nkey);




================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Xu_Ly.cpp
================================================
﻿#include "Xu_Ly.h"


char dongChuChay[] = "   HOC VIEN CONG NGHE BUU CHINH VIEN THONG CO SO THANH PHO HO CHI MINH";

void Introduce()
{
	system("color 3E");
	ShowCur(false);
	string a;

	// lay tu file o che do chi doc
	ifstream inFile("introduce.txt", ios::in);
	if (inFile.good())  // Kiem tra xem file co ket noi duoc hay khong?
	{
		while (!inFile.eof()) {
			getline(inFile, a);
			SetColor(LIGHT_AQUA);
			Sleep(100);
			cout << a << endl;
		}
	}
	else  //Tra ve loi
	{
		cout << "Lien ket voi File introduce khong thanh cong! " << "\n";
	}

	SetColor(LIGHT_GREEN);
	gotoxy(xTen, yTen);
	cout << "HOTEN : NGUYEN THANH PHONG";
	gotoxy(xTen, yTen + 1);
	cout << "MSSV  : N16DCCN116";
	gotoxy(xTen, yTen + 2);
	cout << "LOP   : D16CQCN02-N";
	CayLoading(LIGHT_YELLOW);
	ShowCur(false);

	// nhan enter de thoat vong lap
	gotoxy(45, 35);
	SetBGColor(BLUE);
	cout << "Please ! Press ENTER to continue. ";
	normalBGColor();

	while (!_kbhit()) {
		gotoxy(35, 30);
		SetColor(1 + rand() % 15);
		Sleep(100);
		cout << "HOC VIEN CONG NGHE BUU CHINH VIEN THONG CO SO TP HO CHI MINH";
	}

	SetBGColor(AQUA);
	SetColor(AQUA);
	cin.ignore();

	// am thanh
	Beep(600, 200);
	return;
}

void ManHinhChinh()
{
	system("color 3E");
	clrscr();
	normalTextColor();
	ShowCur(false);
	VeKhungMenu();

	normalBGColor();
	MainMenu(keyMainMenu, 5);
	normalBGColor();

	string a;
	int y = 0;

	// lay tu file va chi doc
	ifstream inFile("QuanLyThuVien.txt", ios::in);

	// Kiem tra xem file co ket noi duoc hay khong?
	if (inFile.good())              
	{
		while (!inFile.eof()) {
			getline(inFile, a);
			SetColor(11);
			Sleep(100);
			gotoxy(25, y++);
			cout << a << endl;
		}
	}
	else  //Tra ve loi
	{
		cout << "Lien ket voi File QuanlyThuVien khong thanh cong! " << "\n";
	}

	normalBGColor();
	SetBGColor(BLACK);
	
	// set khung
	gotoxy(xOrdinal + 44, yOrdinal + 34);
	cout << char(201) << setw(40) << setfill(char(205)) << char(187);

	gotoxy(xOrdinal + 44, yOrdinal + 35);
	cout << char(186) << setw(40) << setfill(' ') << char(186);

	gotoxy(xOrdinal + 44, yOrdinal + 36);
	cout << char(200) << setw(40) << setfill(char(205)) << char(188);

	chuChay(dongChuChay, xOrdinal + 45, yOrdinal + 35);
	return;
}

void Save(TREE_DG t, fstream &file)
{
	
	file << t->DG.MADG << endl;
	file << t->DG.ho << endl;
	file << t->DG.ten << endl;
	file << t->DG.gioitinh << endl;
	file << t->DG.trangthaithe << endl;

	file << t->mt.n << endl;
	for (NODE_MT* p = t->mt.pHead ; p != NULL; p = p->pNext )
	{
		file << p->data.MASACH << endl;

		file << p->data.ngaymuon.ngay << endl;
		file << p->data.ngaymuon.thang << endl;
		file << p->data.ngaymuon.nam << endl;

		file << p->data.ngaytra.ngay << endl;
		file << p->data.ngaytra.thang << endl;
		file << p->data.ngaytra.nam << endl;

		file << p->data.tensach << endl;
		file << p->data.trangthai << endl;
		file << p->data.vitrisach << endl;
	}
}

// ouput tree vao file theo kieu duyet tin thu tu...
void OutFile_DG(TREE_DG t, fstream &file)
{
	if (t != NULL)
	{
		Save(t, file);
		OutFile_DG(t->pLeft, file);
		OutFile_DG(t->pRight, file);	
	}
}

void Save_DG(TREE_DG t)
{
	fstream outFile;
	outFile.open("DocGia.txt", ios::out);
	if (outFile.is_open())
	{
		// so doc gia..
		outFile << countDG(t) << endl;
		OutFile_DG(t, outFile);
	}
	else
	{
		cout << "KET NOI VOI FILE DocGia THAT BAI! ";
	}
	outFile.close();
}

void Save_DS(LIST_DAUSACH lDS)
{
	fstream outFile;
	outFile.open("DauSach.txt", ios::out );
	if (outFile.is_open())
	{
		outFile << lDS.n + 1 << endl;
		for (int i = 0; i <= lDS.n; i++)
		{
			outFile << lDS.ListDS[i]->info.tensach << endl;
			outFile << lDS.ListDS[i]->info.ISBN << endl;
			outFile << lDS.ListDS[i]->info.tacgia << endl;
			outFile << lDS.ListDS[i]->info.theloai << endl;
			outFile << lDS.ListDS[i]->info.sotrang << endl;
			outFile << lDS.ListDS[i]->info.namSB << endl;
			
			outFile << lDS.ListDS[i]->dms.n << endl;
			for (NODE_DMS* p  = lDS.ListDS[i]->dms.pHead ; p != NULL ;  p = p->pNext )
			{
				outFile << p->data.maSach << endl;
				outFile << p->data.ttSach << endl;
				outFile << p->data.viTri << endl;
			}
		}
	}
	else
	{
		cout << "KET NOI VOI FILE DauSach THAT BAI! ";
	}
	outFile.close();
}

void Load_DS(LIST_DAUSACH &lDS)
{
	fstream inFile;
	dauSach info;
	inFile.open("DauSach.txt", ios::in);
	pDAU_SACH pDS;
	DMS dms;
	int sodausach, sosach;
	if (inFile.is_open())
	{
		string temp;
		inFile >> sodausach;
		getline(inFile, temp);

		for (int i = 0; i < sodausach; i++)
		{
			pDS = new DAU_SACH;
			if (pDS == NULL) continue;

			// load thong tin vao bien tam.

			getline(inFile, info.tensach);
			getline(inFile, info.ISBN);
			getline(inFile, info.tacgia);
			getline(inFile, info.theloai);
			inFile >> info.sotrang;
			inFile >> info.namSB;

			// load thong tin vao dau sach
			pDS->info = info;

			inFile >> sosach;
			getline(inFile, temp);
			initList_DMS(pDS->dms);
			for (int j = 0; j < sosach; j++)
			{
				getline(inFile, dms.maSach);
				inFile >> dms.ttSach;
				getline(inFile, temp);
				getline(inFile, dms.viTri);
				AddTailList_DMS(pDS->dms, dms);
			}

			Insert_DauSach(lDS, pDS);
		}
	}
	else {
		cout << "KET NOI VOI FILE DocGia THAT BAI! ";
	}

	inFile.close();
}

void Load_DG(TREE_DG &t)
{
	// khoi tao cay doc gia
	initTREE_DG(t);

	fstream inFile;
	NODE_DG* pDG = NULL;
	DOC_GIA dg;
	MUON_TRA mt;
	inFile.open("DocGia.txt", ios::in);
	int sodocgia, sosachmuontra;

	if (inFile.is_open())
	{
		string temp;
		inFile >> sodocgia;

		for (int i = 0 ; i < sodocgia; i++)
		{
			inFile >> dg.MADG;

			getline(inFile, temp);
			getline(inFile, dg.ho);
			getline(inFile, dg.ten);
			inFile >> dg.gioitinh;
			inFile >> dg.trangthaithe;

			// them data vao cay doc gia.
			InsertDTtoTree(t, dg);
			pDG = Find_DG(t, dg.MADG);

			
			inFile >> sosachmuontra;
			getline(inFile, temp);

			for (int j = 0; j <  sosachmuontra; j++)
			{
				getline(inFile, mt.MASACH);
				inFile >> mt.ngaymuon.ngay;
				inFile >> mt.ngaymuon.thang;
				inFile >> mt.ngaymuon.nam;
				inFile >> mt.ngaytra.ngay;
				inFile >> mt.ngaytra.thang;
				inFile >> mt.ngaytra.nam;

				getline(inFile, temp);
				getline(inFile, mt.tensach);
				inFile >> mt.trangthai;
				getline(inFile, temp);
				getline(inFile, mt.vitrisach);

				// cap nhat du lieu vao
				AddHeadList_MT(pDG->mt, mt);
			}
		}
	}
	else {
		cout << "KET NOI VOI FILE DocGia THAT BAI! ";
	}

	inFile.close();
}

int Menu_MuonSach(LIST_DAUSACH &lDS, NODE_DG* nDG)
{
	int choose1, choose2;
	bool check;
	char thongbao1[] = "            Sach da co DOC GIA muon. Moi ban chon cuon sach khac!";
	char thongbao2[] = "              Sach da duoc THANH LY. Moi ban chon cuon sach khac!";
	char thongbao3[] = "                 DOC GIA da muon sach thuoc Dau Sach nay!     ";
	normalBGColor();

	// nDs : so luong dau sach.
	int nDS = lDS.n + 1;
	int tttrang, tongtrang;
	pDAU_SACH pDS = NULL;
	tttrang = 1;
	tongtrang = (nDS / NUMBER_LINES) + 1;
	int temp = 1;

label:
	do
	{
		// hien thi bang chua thong tin dau sach
		DisplayDS(keyDisplayDS, 6, xDisplayDS);

		OutputDS_PerPage(lDS, tttrang);

		gotoxy(23, 1);
		SetBGColor(GREEN);
		cout << "CHON 1 DAU SACH DE TIEN HANH MUON SACH ";
		normalBGColor();

		// chon dau sach muon nhap sach vao
		choose1 = ChooseItems(lDS, tttrang, tongtrang);

		// check cac truong hop ...
		if (choose1 == -1)
		{
			return -1;
		}
		else if (choose1 > lDS.n)
		{
			gotoxy(2, yDisplay + 3 + choose1 % NUMBER_LINES);
			cout << setw(27) << setfill(' ') << ' ';
			continue;
		}

		pDS = lDS.ListDS[choose1];

		// lay ten sach.
		tensach = pDS->info.tensach;

		check = SearchTenSach_MT(nDG->mt, tensach);

		// check cac truong hop
		if (check == true)
		{
			chuChay(thongbao3, 90, 24);
			_getch();
			gotoxy(90, 24);
			cout << "                                                       ";
		}
		else
		{
			XoaMotVung(1, 1, 35, 79);
			// thoat vong lap
			temp = 2;
		}
	
	} while (temp == 1);


label1:

	temp = 1;
	tttrang = 1;
	tongtrang = (pDS->dms.n / NUMBER_LINES) + 1;

	gotoxy(15, 1);
	SetBGColor(GREEN);
	cout << "CHON 1 CUON SACH DE TIEN HANH MUON SACH";
	normalBGColor();

	do
	{

		// hien thi bang chua thong tin danh muc sach
		DisplayDMS(keyDisplayDMS, 3, xDisplayDMS);
		OutputDMS_PerPage(pDS, tttrang);
		choose2 = ChooseItems1(pDS, tttrang, tongtrang);
		if (choose2 == -1)
		{
			temp = 1;
			tttrang = 1;
			gotoxy(15, 1);
			cout << "                                       ";
			goto label;
		}
		else if (choose2 + 1 > pDS->dms.n)
		{

			// xem thử chỗ đầu sách có quay lại ngay cái trang hầu nảy luôn kko
			gotoxy(2, yDisplay + 3 + choose2 % NUMBER_LINES);
			cout << setw(12) << setfill(' ') << ' ';
			continue;
		}
		else
		{
			NODE_DMS* dms = Search_DMS2(pDS->dms.pHead, choose2);

			// trang thai sach = 1, sach da co nguoi muon, nen se khong muon sach nay duoc.
			if (dms->data.ttSach == 1)
			{
				chuChay(thongbao1, 88, 24);
				_getch();
				gotoxy(88, 24);
				cout << "                                                                     ";
				goto label1;
			}
			// trang thai sach = 2 , sach da thanh ly, nen se khong muon sach duoc
			else if (dms->data.ttSach == 2)
			{
				chuChay(thongbao2, 88, 24);
				_getch();
				gotoxy(88, 24);
				cout << "                                                                      ";
				goto label1;
			}
			// trang thai sach = 0 cho muon duoc, nen se tien hanh muon sach.
			else if (dms->data.ttSach == 0)
			{
				// lay ma sach va vi tri sach... cap nhap trang thai sach da duoc muon.
				masach = dms->data.maSach;
				vitrisach = dms->data.viTri;
				dms->data.ttSach = 1;

			}

			// xoa dong tieu de di.
			gotoxy(15, 1);
			cout << "                                       ";
			temp = 0;
		}
	} while (temp);
	return 1;
}

void XuLyMuonSach(TREE_DG &t, LIST_DAUSACH &lDS)
{
	clrscr();
	system("color 3E");
	uint msdg =  0;
	int check1, check2, check3 = 0; 
	MUON_TRA mt;
	NODE_DG* temp;
	char thongbao1[] = "             DOC GIA chi duoc muon toi da 3 cuon !";
	char thongbao2[] = "           DOC GIA bi khoa the nen khong duoc muon sach !";
	char thongbao3[] = "         DOC GIA khong duoc muon sach vi da giu sach qua han 15 ngay!";
	char thongbao4[] = "         DOC GIA khong duoc muon sach vi da lam mat sach ^_^ ";

label:
	VeHinhBangNhap(83, 3, 50, "        HAY NHAP VAO MA DOC GIA DE MUON SACH");
	gotoxy(103, 5);
	check1 = NhapMaDocGia(msdg);

	// kiem tra ca truong hop
	if (check1 == -1)
	{
		gotoxy(91, 10);
		cout << "BAN VUA HUY TAC VU MUON SACH !!!";
		_getch();
	}
	else if (check1 == 1)
	{
		temp = Find_DG(t, msdg);
		if (temp == NULL)
		{
			gotoxy(82, 10);
			cout << "BAN VUA NHAP MA DOC GIA KHONG CO TRONG THU VIEN !!!";
			_getch();
			gotoxy(82, 10);
			cout << "                                                   ";
			goto label;
		}
		else
		{
			// in thong tin doc gia.
		label1:
			gotoxy(95, 9);
			cout << "~~~THONG TIN DOC GIA~~~";
			gotoxy(93, 11);
			cout << "- Ho va ten: " << temp->DG.ho << " "<< temp->DG.ten;

			gotoxy(93, 12);
			cout << "- Trang thai the : ";
			(temp->DG.trangthaithe == 0) ? cout << "KHOA" : cout << "HOAT DONG";
			gotoxy(93, 13);
			cout << "- Phai: ";
			(temp->DG.gioitinh == 0) ? cout << "NAM" : cout << "NU";
			gotoxy(93, 14);
			cout << "- So sach  da muon : " << temp->mt.n;
			gotoxy(93, 15);
			cout << "- So sach chua tra : " << SoSachDangMuon(temp->mt);
			
			// in danh sach cac sach dang muon trong list MUONTRA cua doc gia.
			gotoxy(95, 17);
			cout << "___CAC SACH DANG MUON___";
			gotoxy(85, 18);
			cout << "__Ten Sach__________________________";
			gotoxy(118, 18);
			cout << "_Ngay Muon__";
			int i =  0; 
			for (NODE_MT * p = temp->mt.pHead; p != NULL ; p = p->pNext)
			{
				// truong hop dang muon chua tra, va truong hop dang muon nhung bi mat sach.
				if (p->data.trangthai == 0  || p->data.trangthai == 2)
				{
					// nap vao so sach muon cua doc gia qua bien i
					
					gotoxy(87 , 20 + i);    
					cout << "                                           ";
					gotoxy(87, 20 + i);
					cout << p->data.tensach;
					xuatNgayThang(p->data.ngaymuon, 118, 20 + i);
					i++;
					if (i == 3)
					{
						chuChay(thongbao1, 90, 24);
						_getch();
						return;
					}
				}
			}

			// xu ly truong hop khong cho muon sach khi trang thai the da bi khoa.
			if (temp->DG.trangthaithe == 0)
			{
				chuChay(thongbao2, 90, 24);
				_getch();
				return;
			}

			// xu ly truong hop khong cho muon sach khi doc gia lam mat sach.
			if (MatSach(temp->mt))
			{
				chuChay(thongbao4, 90, 24);
				_getch();
				return;
			}

			// xu ly truong hop muon sach qua han 15 ngay.
			if (SoNgayMuon_Max(temp->mt) > 15)
			{
				chuChay(thongbao3, 90, 24);
				_getch();
				return;

			}

			// in ra dong thong bao
			chuChay(dongthongbao, 90, 35);
			_getch();
			gotoxy(88, 35);
			cout << "                                                  ";

			// xu ly thao tac muon tra.
			check2 = Menu_MuonSach(lDS, temp);

			// check cac truong hop
			if (check2 == -1)
			{
				return;
			}
			else if (check2 == 1)
			{

				// nap thong tin vao cau truc muon tra bao gom ten sach, ngay muon, ngay tra..v.v.v
				mt.tensach = tensach;
				mt.ngaytra.nam = 0;
				mt.ngaytra.thang = 0;
				mt.ngaytra.ngay = 0;
				mt.MASACH = masach;
				mt.vitrisach = vitrisach;
			
				mt.trangthai = 0;


				// nhap thong tin ngay muon va xu ly truong hop nhap ngay muon lon hon ngay he thong;
				do
				{
					gotoxy(83, 28);
					cout << "Nhap vao ngay muon. Nhan F10 de luu, ESC de huy !";
					check3 = NhapNgayThang(mt.ngaymuon, 100, 30);

					// check cac truong hop
					if (check3 == -1)
					{
						return;
					}
					else if (check3 == 2)
					{
						AddHeadList_MT(temp->mt, mt);
						goto label1;
					}
				} while (check3 );		
			}
		}
	}	
}

void XuLyTraSach(TREE_DG &t, LIST_DAUSACH &lDS)
{
	clrscr();
	system("color 3E");
	uint msdg = 0;
	char thongbao[] = "         Doc Gia chua muon sach !  ";
	char thongbao1[] = "    Thong tin da duoc cap nhat. Bao mat sach thanh cong !";
	int check, check1 = 0;
	NODE_DG* temp;
	NGAY_THANG ngaytra;
	int choose1, choose2, i1, i2, condition = 1;

label:
	VeHinhBangNhap(40, 3, 50, "        HAY NHAP VAO MA DOC GIA DE TRA SACH");
	gotoxy(63, 5);
	check = NhapMaDocGia(msdg);

	// kiem tra ca truong hop
	if (check == -1)
	{
		gotoxy(50, 10);
		cout << "BAN VUA HUY TAC VU TRA SACH !!!";
		_getch();
	}
	else if (check == 1)
	{
		temp = Find_DG(t, msdg);
		if (temp == NULL)
		{
			gotoxy(40, 10);
			cout << "BAN VUA NHAP MA DOC GIA KHONG CO TRONG THU VIEN !!!";
			_getch();
			gotoxy(40, 10);
			cout << "                                                   ";
			goto label;
		}
		else
		{
			gotoxy(52, 9);
			cout << "~~~THONG TIN DOC GIA~~~";
			gotoxy(52, 11);
			cout << "- Ho va ten: " << temp->DG.ho << " " << temp->DG.ten;

			gotoxy(52, 12);
			cout << "- Trang thai the : ";
			(temp->DG.trangthaithe == 0) ? cout << "KHOA" : cout << "HOAT DONG";
			gotoxy(52, 13);
			cout << "- Phai: ";
			(temp->DG.gioitinh == 0) ? cout << "NAM" : cout << "NU";
			gotoxy(52, 14);
			cout << "- So sach  da muon : " << temp->mt.n;
			gotoxy(35, 25);
			cout << "Hotkey:  F3 -  Tra Sach,  F4  -  Bao mat sach,  ESC - thoat";
	
		label1:
			gotoxy(52, 15);
			cout << "- So sach chua tra : " << SoSachDangMuon(temp->mt);
			gotoxy(37, 17);
			cout << "________________CAC SACH DANG MUON___________________";

			DisplayMT(keyDisplayMT, 7, XDisplayMT);
			OutputList_MT(temp->mt);

			do
			{
				while (_kbhit())
				{
					int kb_hit = _getch();
					if (kb_hit == 224 || kb_hit == 0)
						kb_hit = _getch();

					switch (kb_hit)
					{
					case  KEY_F3:
						Beep(600, 100);
						choose1 = chonItem_MT(temp->mt);
						if (choose1 == -1)
						{
							chuChay(thongbao, 50, 30);
							return;
						}
						i1 = -1;
						for (NODE_MT * pMT = temp->mt.pHead; pMT != NULL; pMT = pMT->pNext)
						{
							if (pMT->data.trangthai == 0 || pMT->data.trangthai == 2)
							{
								i1++;
								if (i1 == choose1)
								{
									// chuc nang nhap thong tin ngay tra.
									do
									{										
										gotoxy(40, 28);
										cout << "Nhap vao ngay tra. Nhan F10 de luu, ESC de huy !";
										check1 = NhapNgayThang(ngaytra, 55, 30);

										// check cac truong hop
										 if (check1 == 2)
										 {
											 if (SoSanhNgay(pMT->data.ngaymuon, ngaytra) < 0)
											 {
												 check1 = 1;
											 }
											 else
											 {
												 // thay doi trang thai sang da tra sach.
												 pMT->data.trangthai = 1;
												 pMT->data.ngaytra = ngaytra;
			
												 // tim kiem dau sach ma doc gia da muon
												 pDAU_SACH pDS = SearchTen_DS(lDS, pMT->data.tensach);

					
												 // tim kiem sach co ma dau sach ma doc gia da muon.
												 NODE_DMS* pDMS = Search_DMS1(pDS, pMT->data.MASACH);

												 // thay doi trang thai sach tu da co nguoi muon sang chua co nguoi muon
												 pDMS->data.ttSach = 0;
												 goto label1;
											 }
										 }
										 else if (check1 == -1)
										 {
											 goto label1;
									     }
										
									} while (check1);
								}
							}
						}
						goto label1;

					case KEY_F4: 
						Beep(600, 100);
						choose2 = chonItem_MT(temp->mt);
						if (choose2 == -1)
						{
							chuChay(thongbao, 50, 30);
							return;
						}
						i2 = -1;
						for (NODE_MT * pMT = temp->mt.pHead; pMT != NULL; pMT = pMT->pNext)
						{
							if (pMT->data.trangthai == 0 || pMT->data.trangthai == 2)
							{
								i2++;
								if (i2 == choose2)
								{
									// thay doi trang thai sang da lam mat sach.
									pMT->data.trangthai = 2;
									chuChay(thongbao1, 45, 30);
									gotoxy(45, 30);
									cout << "                                                ";
								}
							}
						}
						goto label1;

					case ESC:
						Beep(600, 100);
						condition = 0;
						break;
					}
				}
			}while (condition);
		}
	}
}

void MainMenu(TREE_DG &t, LIST_DAUSACH &lDS)
{
	int result;

	// set console window.
	SetConsoleTitle(_T("QUAN LY THU VIEN"));
	resizeConsole(GWIDTH, GHEIGHT);

	// load data from File.
	Load_DG(t);
	Load_DS(lDS);
	
	// hieu ung introduce.
	Introduce();
	clrscr();

	// vong lap vo han de xu ly.
	while (true)
	{	
		ManHinhChinh();
		int type = ChooseMainMenu(5);
		gotoxy(55, 32);
		cout << " ESC: Ve Menu Chinh";

		switch (type)
		{
		case 0:
			SubMainMenu1(keySubMainMenu1, 3);
			result = ChooseSubMenu(keySubMainMenu1, xSubMainMenus1, ySubMainMenus1, 3);
			if (result == 0)
			{
				Menu_DocGia(t);
			}
			else if (result == 1)
			{
				InDocGia(t);	
			}
			else if (result == 2)
			{
				DanhSachQuaHan(t);
			}
			break;

		case 1:
			SubMainMenu2(keySubMainMenu2, 3);
			result = ChooseSubMenu(keySubMainMenu2, xSubMainMenus2, ySubMainMenus2, 3);
			if (result == 0)
			{
				Menu_DauSach(lDS);
			}
			else if (result == 1)
			{
				Output_ListDStheoTT(lDS);
			}
			else if (result == 2)
			{
				Menu_DMS(lDS);
			}
			break;

		case 2:

			SubMainMenu3(keySubMainMenu3, 3);
			result = ChooseSubMenu(keySubMainMenu3, xSubMainMenus3, ySubMainMenus3, 3);
			if (result == 0)
			{
				XuLyTraSach(t, lDS);
			}
			else if (result == 1)
			{
				Top10Sach(lDS);
			}
			else if (result == 2)
			{
				XuLyMuonSach(t, lDS);
			}
			break;

		case 3:

			// luu data tu chuong trinh vao file.
			Save_DS(lDS);
			Save_DG(t);
			return;
		}
	}
}



================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Xu_Ly.h
================================================
﻿#pragma once
#include <tchar.h>
#include "DSDocGia.h"
#include "DauSach.h"
#include <fstream>

void Introduce();

// hieu ung man hinh chinh
void ManHinhChinh();

void Save(TREE_DG t, fstream &file);

// duyet cay inoder de luu vao file.
void OutFile_DG(TREE_DG t, fstream &file);

// save tat ca doc gia vao file
void Save_DG(TREE_DG t);

// save tat ca dau sach vao file
void Save_DS(LIST_DAUSACH lDS);

//load du lieu dau sach tu file
void Load_DS(LIST_DAUSACH &lDS);

// load du lieu doc gia tu File 
void Load_DG(TREE_DG &t);

// Bang thao tac muon sach.
int Menu_MuonSach(LIST_DAUSACH &lDS, NODE_DG* nDG);

void XuLyMuonSach(TREE_DG &t, LIST_DAUSACH &lDS);

void XuLyTraSach(TREE_DG &t, LIST_DAUSACH &lDS);

// xu ly MeNu chinh
void MainMenu(TREE_DG &t, LIST_DAUSACH &lDS);


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/XuLyTam.cpp
================================================
#include "XuLyTam.h"

void initList_TEMPLIST(LIST_TEMPLIST &l)
{
	l.pHead = l.pTail = NULL;

}

NODE_TEMPLIST* GetNode_TEMPLIST(uint index, uint MADG)
{
	NODE_TEMPLIST *p = new NODE_TEMPLIST;
	if (p == NULL) {
		return NULL;
	}
	p->tl.index = index;
	p->tl.MADG = MADG;
	p->pNext = NULL;
	return (p);
}

void AddTailList_TEMPLIST(LIST_TEMPLIST &l, uint index, uint MADG)
{
	// tao Node
	NODE_TEMPLIST *p = GetNode_TEMPLIST(index, MADG);
	if (l.pHead == NULL) {
		l.pHead = l.pTail = p;
	}
	else
	{
		l.pTail->pNext = p;
		l.pTail = p;

	}
}

NODE_TEMPLIST * Middle(NODE_TEMPLIST * start, NODE_TEMPLIST * last)
{
	if (start == NULL)
		return NULL;
	NODE_TEMPLIST * slow = start;
	NODE_TEMPLIST * fast = start->pNext;

	while (fast != last)
	{
		fast = fast->pNext;
		if (fast != last)
		{
			slow = slow->pNext;
			fast = fast->pNext;
		}
	}
	return slow;
}

// ne su dung tim kiem tuyen tinh vi cai nao cung bigO(n)
NODE_TEMPLIST * BinarySearch_TEMPLIST(LIST_TEMPLIST l, uint index)
{
	NODE_TEMPLIST *start = l.pHead;
	NODE_TEMPLIST *last = NULL;
	do
	{	//Find middle
		NODE_TEMPLIST * mid = Middle(start, last);
		// if middle is empty
		if (mid == NULL)
			return NULL;

		// if value is present at middle
		if (mid->tl.index == index)
			return mid;
		// if value is more than mid
		else if (mid->tl.index < index)
			start = mid->pNext;
		// if value is less than mid
		else
			last = mid;
	} while (last == NULL || last->pNext != start);
	return NULL; // value not present;
}

void ClearAll_TEMPLIST(LIST_TEMPLIST &l)
{
	NODE_TEMPLIST *p;
	while (l.pHead != NULL)
	{
		p = l.pHead;
		l.pHead = l.pHead->pNext;
		delete p;
	}
}



================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/XuLyTam.h
================================================
#pragma once
#include <iostream>
#include "Marcro.h"
using std::string;

struct TenHo
{
	string hoten;
	uint MADG;
};
typedef struct TenHo TEN_HO;

struct Temp_List
{
	uint index;
	uint MADG;
};
typedef struct Temp_List TEMP_LIST;

struct NodeTempList
{
	TEMP_LIST tl;
	struct NodeTempList * pNext;
};
typedef struct NodeTempList NODE_TEMPLIST;

struct ListTempList
{
	//so phan tu
	// int n;
	NODE_TEMPLIST *pHead;
	NODE_TEMPLIST *pTail;

};
typedef struct ListTempList LIST_TEMPLIST;

// ..... khoi tao........
void initList_TEMPLIST(LIST_TEMPLIST &l);

//.......get node.........
NODE_TEMPLIST* GetNode_TEMPLIST(uint index, uint MADG);

//...... add tail link list........
void AddTailList_TEMPLIST(LIST_TEMPLIST &l, uint index, uint MADG);

// function to find out middle element
NODE_TEMPLIST * Middle(NODE_TEMPLIST * start, NODE_TEMPLIST * last);

// Function for implementing the Binary Search on linked list
NODE_TEMPLIST * BinarySearch_TEMPLIST(LIST_TEMPLIST l, uint index);

//void XoaHead_TEMPLIST(LIST_TEMPLIST &l)
//{
//	NODE_TEMPLIST * p = l.pHead;
//	l.pHead = l.pHead->pNext;
//	delete p;
//}
//
//void XoaNodeBatKy_TEMPLIST(LIST_TEMPLIST &l, TEMP_LIST tl)
//{
//	if (tl.index == 0)
//	{
//		XoaHead_TEMPLIST(l);
//		return;
//	}
//	//  node p là node  truoc node can xoa.
//	NODE_TEMPLIST * p  = BinarySearch_TEMPLIST(l, tl.index -1);
//	if (p == NULL || p->pNext == NULL)
//		return;
//	
//	NODE_TEMPLIST * q = p->pNext->pNext;
//	delete (p->pNext); // free memory
//	p->pNext = q; 
//}
//

//............xoa list..................
void ClearAll_TEMPLIST(LIST_TEMPLIST &l);


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Debug/n16dccn116_ntphong.obj.enc
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Debug/N16DCCN116_NTPHONG.pch
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Debug/vc141.idb
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Debug/N16DCCN1.ED6E284B.tlog/CL.command.1.tlog
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Debug/N16DCCN1.ED6E284B.tlog/CL.read.1.tlog
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Debug/N16DCCN1.ED6E284B.tlog/CL.write.1.tlog
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Debug/N16DCCN1.ED6E284B.tlog/link.command.1.tlog
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Debug/N16DCCN1.ED6E284B.tlog/link.read.1.tlog
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Debug/N16DCCN1.ED6E284B.tlog/link.write.1.tlog
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Debug/N16DCCN1.ED6E284B.tlog/N16DCCN116_NTPHONG.lastbuildstate
================================================
#TargetFrameworkVersion=v4.0:PlatformToolSet=v141:EnableManagedIncrementalBuild=false:VCToolArchitecture=Native32Bit:WindowsTargetPlatformVersion=10.0.16299.0
Debug|Win32|D:\QUAN_LY_THU_VIEN\|



================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/Debug/N16DCCN1.ED6E284B.tlog/unsuccessfulbuild
================================================



================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Debug/check_nhap.obj.enc
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Debug/dausach.obj.enc
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Debug/N16DCCN116_NTPHONG.pch
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Debug/vc141.idb
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Debug/ve_hinh.obj.enc
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Debug/xu_ly.obj.enc
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Debug/N16DCCN1.ED6E284B.tlog/CL.command.1.tlog
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Debug/N16DCCN1.ED6E284B.tlog/CL.read.1.tlog
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Debug/N16DCCN1.ED6E284B.tlog/CL.write.1.tlog
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Debug/N16DCCN1.ED6E284B.tlog/link.command.1.tlog
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Debug/N16DCCN1.ED6E284B.tlog/link.read.1.tlog
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Debug/N16DCCN1.ED6E284B.tlog/link.write.1.tlog
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Debug/N16DCCN1.ED6E284B.tlog/N16DCCN116_NTPHONG.lastbuildstate
================================================
#TargetFrameworkVersion=v4.0:PlatformToolSet=v141:EnableManagedIncrementalBuild=false:VCToolArchitecture=Native32Bit:WindowsTargetPlatformVersion=10.0.16299.0
Debug|x64|C:\Users\PhongNT\Desktop\QUAN_LY_THU_VIEN\QUAN_LY_THU_VIEN\|



================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Release/N16DCCN116_NTPHONG.pch
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Release/N16DCCN1.ED6E284B.tlog/CL.command.1.tlog
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Release/N16DCCN1.ED6E284B.tlog/CL.read.1.tlog
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Release/N16DCCN1.ED6E284B.tlog/CL.write.1.tlog
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Release/N16DCCN1.ED6E284B.tlog/link.command.1.tlog
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Release/N16DCCN1.ED6E284B.tlog/link.read.1.tlog
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Release/N16DCCN1.ED6E284B.tlog/link.write.1.tlog
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Release/N16DCCN1.ED6E284B.tlog/N16DCCN116_NTPHONG.lastbuildstate
================================================
#TargetFrameworkVersion=v4.0:PlatformToolSet=v141:EnableManagedIncrementalBuild=false:VCToolArchitecture=Native32Bit:WindowsTargetPlatformVersion=10.0.16299.0
Release|x64|C:\Users\PhongNT\Desktop\QUAN_LY_THU_VIEN\|



================================================
FILE: QUAN_LY_THU_VIEN/N16DCCN116_NTPHONG/x64/Release/N16DCCN1.ED6E284B.tlog/N16DCCN116_NTPHONG.write.1u.tlog
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/x64/Debug/N16DCCN116_NTPHONG.ilk
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/x64/Release/N16DCCN116_NTPHONG.iobj
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/x64/Release/N16DCCN116_NTPHONG.ipdb
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/.vs/ProjectSettings.json
================================================
{
  "CurrentProjectSetting": "x86-Debug"
}


================================================
FILE: QUAN_LY_THU_VIEN/.vs/slnx.sqlite
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/.vs/VSWorkspaceState.json
================================================
{
  "ExpandedNodes": [
    "",
    "\\x64",
    "\\x64\\Debug"
  ],
  "PreviewInSolutionExplorer": false
}


================================================
FILE: QUAN_LY_THU_VIEN/.vs/N16DCCN116_NTPHONG/v15/Browse.VC.db
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/.vs/N16DCCN116_NTPHONG/v15/ipch/3bdb8c74b80a3e5a.ipch
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/.vs/N16DCCN116_NTPHONG/v15/ipch/AutoPCH/1b1abdd210201cd5/XU_LY.ipch
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/.vs/N16DCCN116_NTPHONG/v15/ipch/AutoPCH/1b5156516b038f30/NGAY_THANG.ipch
================================================
[Non-text file]






================================================
FILE: QUAN_LY_THU_VIEN/.vs/N16DCCN116_NTPHONG/v15/ipch/AutoPCH/63c7ee75aab478b7/GLOBALVARIABLE.ipch
================================================
[Non-text file]












================================================
FILE: QUAN_LY_THU_VIEN/.vs/N16DCCN116_NTPHONG/v15/ipch/AutoPCH/a0df4211add30489/VE_HINH.ipch
================================================
[Non-text file]



================================================
FILE: QUAN_LY_THU_VIEN/.vs/N16DCCN116_NTPHONG/v15/ipch/AutoPCH/a634b8931526d69b/DAUSACH.ipch
================================================
[Non-text file]





================================================
FILE: QUAN_LY_THU_VIEN/.vs/N16DCCN116_NTPHONG/v15/ipch/AutoPCH/e9f7d939378866cc/CHECK_NHAP.ipch
================================================
[Non-text file]


================================================
FILE: QUAN_LY_THU_VIEN/.vs/N16DCCN116_NTPHONG/v15/ipch/AutoPCH/ea56184dbbf3f01a/DSDOCGIA.ipch
================================================
[Non-text file]


